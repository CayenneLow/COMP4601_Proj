

================================================================
== Vivado HLS Report for 'Loop_copy_sorted_pro'
================================================================
* Date:           Sun Aug  1 13:10:57 2021

* Version:        2020.1 (Build 2897737 on Wed May 27 20:21:37 MDT 2020)
* Project:        huffman_encoding_core_build
* Solution:       alternative
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 6.508 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------+---------+---------+----------+-----------+-----------+------+----------+
        |               |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |   Loop Name   |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------+---------+---------+----------+-----------+-----------+------+----------+
        |- copy_sorted  |        ?|        ?|         2|          -|          -|     ?|    no    |
        +---------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.63>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecInterface(i32* %n, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [11 x i8]* @ScalarProp_str)"   --->   Operation 4 'specinterface' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (3.63ns)   --->   "%n_read = call i32 @_ssdm_op_Read.ap_fifo.i32P(i32* %n)" [./hls-src/huffman_encoding.cpp:42]   --->   Operation 5 'read' 'n_read' <Predicate = true> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 3> <FIFO>
ST_1 : Operation 6 [1/1] (1.76ns)   --->   "br label %.preheader.i" [./hls-src/huffman_encoding.cpp:42]   --->   Operation 6 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 3.63>
ST_2 : Operation 7 [1/1] (0.00ns)   --->   "%i_0_i = phi i31 [ %i, %._crit_edge.i ], [ 0, %entry ]"   --->   Operation 7 'phi' 'i_0_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 8 [1/1] (0.00ns)   --->   "%zext_ln42 = zext i31 %i_0_i to i32" [./hls-src/huffman_encoding.cpp:42]   --->   Operation 8 'zext' 'zext_ln42' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 9 [1/1] (2.47ns)   --->   "%icmp_ln42 = icmp slt i32 %zext_ln42, %n_read" [./hls-src/huffman_encoding.cpp:42]   --->   Operation 9 'icmp' 'icmp_ln42' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 10 [1/1] (2.52ns)   --->   "%i = add i31 %i_0_i, 1" [./hls-src/huffman_encoding.cpp:42]   --->   Operation 10 'add' 'i' <Predicate = true> <Delay = 2.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 11 [1/1] (0.00ns)   --->   "br i1 %icmp_ln42, label %._crit_edge.i, label %.exit" [./hls-src/huffman_encoding.cpp:42]   --->   Operation 11 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%zext_ln43 = zext i31 %i_0_i to i64" [./hls-src/huffman_encoding.cpp:43]   --->   Operation 12 'zext' 'zext_ln43' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%sorted_0_addr = getelementptr [256 x i32]* %sorted_0, i64 0, i64 %zext_ln43" [./hls-src/huffman_encoding.cpp:43]   --->   Operation 13 'getelementptr' 'sorted_0_addr' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 14 [2/2] (3.25ns)   --->   "%sorted_0_load = load i32* %sorted_0_addr, align 8" [./hls-src/huffman_encoding.cpp:43]   --->   Operation 14 'load' 'sorted_0_load' <Predicate = (icmp_ln42)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%sorted_1_addr = getelementptr [256 x i32]* %sorted_1, i64 0, i64 %zext_ln43" [./hls-src/huffman_encoding.cpp:44]   --->   Operation 15 'getelementptr' 'sorted_1_addr' <Predicate = (icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 16 [2/2] (3.25ns)   --->   "%previous_frequency = load i32* %sorted_1_addr, align 4" [./hls-src/huffman_encoding.cpp:44]   --->   Operation 16 'load' 'previous_frequency' <Predicate = (icmp_ln42)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%empty_45 = call i32 (...)* @_ssdm_op_SpecInterface(i32* %val_assign_out_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [11 x i8]* @ScalarProp_str)"   --->   Operation 17 'specinterface' 'empty_45' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (3.63ns)   --->   "call void @_ssdm_op_Write.ap_fifo.i32P(i32* %val_assign_out_out, i32 %n_read)" [./hls-src/huffman_encoding.cpp:42]   --->   Operation 18 'write' <Predicate = (!icmp_ln42)> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 3> <FIFO>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%empty_46 = call i32 (...)* @_ssdm_op_SpecInterface(i32* %val_assign_out_out1, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [11 x i8]* @ScalarProp_str)"   --->   Operation 19 'specinterface' 'empty_46' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (3.63ns)   --->   "call void @_ssdm_op_Write.ap_fifo.i32P(i32* %val_assign_out_out1, i32 %n_read)" [./hls-src/huffman_encoding.cpp:42]   --->   Operation 20 'write' <Predicate = (!icmp_ln42)> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 3> <FIFO>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "ret void"   --->   Operation 21 'ret' <Predicate = (!icmp_ln42)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 6.50>
ST_3 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @p_str138) nounwind" [./hls-src/huffman_encoding.cpp:42]   --->   Operation 22 'specloopname' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 23 [1/2] (3.25ns)   --->   "%sorted_0_load = load i32* %sorted_0_addr, align 8" [./hls-src/huffman_encoding.cpp:43]   --->   Operation 23 'load' 'sorted_0_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_3 : Operation 24 [1/1] (0.00ns)   --->   "%sorted_copy1_value_V_1 = getelementptr [256 x i32]* %sorted_copy1_value_V, i64 0, i64 %zext_ln43" [./hls-src/huffman_encoding.cpp:43]   --->   Operation 24 'getelementptr' 'sorted_copy1_value_V_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 25 [1/1] (3.25ns)   --->   "store i32 %sorted_0_load, i32* %sorted_copy1_value_V_1, align 8" [./hls-src/huffman_encoding.cpp:43]   --->   Operation 25 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_3 : Operation 26 [1/2] (3.25ns)   --->   "%previous_frequency = load i32* %sorted_1_addr, align 4" [./hls-src/huffman_encoding.cpp:44]   --->   Operation 26 'load' 'previous_frequency' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%sorted_copy1_frequen = getelementptr [256 x i32]* %sorted_copy1_frequency_V, i64 0, i64 %zext_ln43" [./hls-src/huffman_encoding.cpp:44]   --->   Operation 27 'getelementptr' 'sorted_copy1_frequen' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (3.25ns)   --->   "store i32 %previous_frequency, i32* %sorted_copy1_frequen, align 4" [./hls-src/huffman_encoding.cpp:44]   --->   Operation 28 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%sorted_copy2_value_V_1 = getelementptr [256 x i32]* %sorted_copy2_value_V, i64 0, i64 %zext_ln43" [./hls-src/huffman_encoding.cpp:45]   --->   Operation 29 'getelementptr' 'sorted_copy2_value_V_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 30 [1/1] (3.25ns)   --->   "store i32 %sorted_0_load, i32* %sorted_copy2_value_V_1, align 8" [./hls-src/huffman_encoding.cpp:45]   --->   Operation 30 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "br label %.preheader.i" [./hls-src/huffman_encoding.cpp:42]   --->   Operation 31 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 3.63ns
The critical path consists of the following:
	fifo read on port 'n' (./hls-src/huffman_encoding.cpp:42) [10]  (3.63 ns)

 <State 2>: 3.63ns
The critical path consists of the following:
	fifo write on port 'val_assign_out_out' (./hls-src/huffman_encoding.cpp:42) [34]  (3.63 ns)

 <State 3>: 6.51ns
The critical path consists of the following:
	'load' operation ('sorted_0_load', ./hls-src/huffman_encoding.cpp:43) on array 'sorted_0' [22]  (3.25 ns)
	'store' operation ('store_ln43', ./hls-src/huffman_encoding.cpp:43) of variable 'sorted_0_load', ./hls-src/huffman_encoding.cpp:43 on array 'sorted_copy1_value_V' [24]  (3.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
