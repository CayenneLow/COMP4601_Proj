// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "create_codeword.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic create_codeword::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic create_codeword::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> create_codeword::ap_ST_fsm_state1 = "1";
const sc_lv<7> create_codeword::ap_ST_fsm_state2 = "10";
const sc_lv<7> create_codeword::ap_ST_fsm_state3 = "100";
const sc_lv<7> create_codeword::ap_ST_fsm_state4 = "1000";
const sc_lv<7> create_codeword::ap_ST_fsm_state5 = "10000";
const sc_lv<7> create_codeword::ap_ST_fsm_state6 = "100000";
const sc_lv<7> create_codeword::ap_ST_fsm_state7 = "1000000";
const sc_lv<32> create_codeword::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> create_codeword::ap_const_lv32_1 = "1";
const sc_lv<1> create_codeword::ap_const_lv1_0 = "0";
const sc_lv<32> create_codeword::ap_const_lv32_2 = "10";
const sc_lv<32> create_codeword::ap_const_lv32_3 = "11";
const sc_lv<32> create_codeword::ap_const_lv32_4 = "100";
const sc_lv<32> create_codeword::ap_const_lv32_5 = "101";
const sc_lv<5> create_codeword::ap_const_lv5_1 = "1";
const sc_lv<32> create_codeword::ap_const_lv32_6 = "110";
const sc_lv<9> create_codeword::ap_const_lv9_0 = "000000000";
const sc_lv<1> create_codeword::ap_const_lv1_1 = "1";
const sc_lv<64> create_codeword::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<27> create_codeword::ap_const_lv27_0 = "000000000000000000000000000";
const sc_lv<5> create_codeword::ap_const_lv5_1B = "11011";
const sc_lv<5> create_codeword::ap_const_lv5_1F = "11111";
const sc_lv<9> create_codeword::ap_const_lv9_100 = "100000000";
const sc_lv<9> create_codeword::ap_const_lv9_1 = "1";
const sc_lv<5> create_codeword::ap_const_lv5_0 = "00000";
const sc_lv<32> create_codeword::ap_const_lv32_1A = "11010";
const sc_lv<6> create_codeword::ap_const_lv6_1B = "11011";
const sc_lv<3> create_codeword::ap_const_lv3_0 = "000";
const sc_lv<27> create_codeword::ap_const_lv27_1 = "1";
const bool create_codeword::ap_const_boolean_1 = true;

create_codeword::create_codeword(sc_module_name name) : sc_module(name), mVcdFile(0) {
    first_codeword_V_U = new create_codeword_fkbM("first_codeword_V_U");
    first_codeword_V_U->clk(ap_clk);
    first_codeword_V_U->reset(ap_rst);
    first_codeword_V_U->address0(first_codeword_V_address0);
    first_codeword_V_U->ce0(first_codeword_V_ce0);
    first_codeword_V_U->we0(first_codeword_V_we0);
    first_codeword_V_U->d0(first_codeword_V_d0);
    first_codeword_V_U->q0(first_codeword_V_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln1503_fu_202_p2);
    sensitive << ( trunc_ln1503_fu_194_p1 );
    sensitive << ( trunc_ln1503_1_fu_198_p1 );

    SC_METHOD(thread_add_ln15_fu_177_p2);
    sensitive << ( i_0_reg_148 );

    SC_METHOD(thread_add_ln700_fu_324_p2);
    sensitive << ( first_codeword_V_q0 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln21_fu_223_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln21_fu_223_p2 );

    SC_METHOD(thread_codeword_length_histogram_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln15_1_fu_183_p1 );

    SC_METHOD(thread_codeword_length_histogram_V_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_encoding_V_addr_1_gep_fu_140_p3);
    sensitive << ( zext_ln22_reg_368 );
    sensitive << ( icmp_ln883_reg_385 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_encoding_V_address0);
    sensitive << ( zext_ln22_reg_368 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( encoding_V_addr_1_gep_fu_140_p3 );

    SC_METHOD(thread_encoding_V_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_encoding_V_d0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( zext_ln209_fu_337_p1 );

    SC_METHOD(thread_encoding_V_we0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln883_fu_240_p2 );
    sensitive << ( icmp_ln883_reg_385 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_first_codeword_V_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( first_codeword_V_add_3_reg_389 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln15_1_fu_183_p1 );
    sensitive << ( zext_ln15_fu_189_p1 );
    sensitive << ( zext_ln544_fu_246_p1 );

    SC_METHOD(thread_first_codeword_V_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_first_codeword_V_d0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( shl_ln_fu_208_p3 );
    sensitive << ( add_ln700_fu_324_p2 );

    SC_METHOD(thread_first_codeword_V_we0);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_i_2_fu_229_p2);
    sensitive << ( i1_0_reg_160 );

    SC_METHOD(thread_i_fu_217_p2);
    sensitive << ( i_0_reg_148 );

    SC_METHOD(thread_icmp_ln14_fu_171_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_148 );

    SC_METHOD(thread_icmp_ln21_fu_223_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i1_0_reg_160 );

    SC_METHOD(thread_icmp_ln883_fu_240_p2);
    sensitive << ( symbol_bits_V_q0 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_lshr_ln808_fu_302_p2);
    sensitive << ( p_Result_s_fu_251_p4 );
    sensitive << ( zext_ln808_fu_298_p1 );

    SC_METHOD(thread_p_Result_1_fu_270_p3);
    sensitive << ( ret_V_fu_264_p2 );

    SC_METHOD(thread_p_Result_s_fu_251_p4);
    sensitive << ( first_codeword_V_q0 );

    SC_METHOD(thread_r_V_fu_292_p2);
    sensitive << ( p_Result_s_fu_251_p4 );
    sensitive << ( zext_ln556_fu_288_p1 );

    SC_METHOD(thread_ret_V_fu_264_p2);
    sensitive << ( zext_ln215_fu_261_p1 );

    SC_METHOD(thread_select_ln796_fu_316_p3);
    sensitive << ( p_Result_1_fu_270_p3 );
    sensitive << ( trunc_ln796_fu_308_p1 );
    sensitive << ( trunc_ln796_1_fu_312_p1 );

    SC_METHOD(thread_shl_ln_fu_208_p3);
    sensitive << ( add_ln1503_fu_202_p2 );

    SC_METHOD(thread_sub_ln556_fu_282_p2);
    sensitive << ( trunc_ln790_fu_278_p1 );

    SC_METHOD(thread_symbol_bits_V_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln22_fu_235_p1 );

    SC_METHOD(thread_symbol_bits_V_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_tmp_s_fu_331_p3);
    sensitive << ( length_V_reg_379 );
    sensitive << ( select_ln796_reg_394 );

    SC_METHOD(thread_trunc_ln1503_1_fu_198_p1);
    sensitive << ( first_codeword_V_q0 );

    SC_METHOD(thread_trunc_ln1503_fu_194_p1);
    sensitive << ( codeword_length_histogram_V_q0 );

    SC_METHOD(thread_trunc_ln790_fu_278_p1);
    sensitive << ( ret_V_fu_264_p2 );

    SC_METHOD(thread_trunc_ln796_1_fu_312_p1);
    sensitive << ( lshr_ln808_fu_302_p2 );

    SC_METHOD(thread_trunc_ln796_fu_308_p1);
    sensitive << ( r_V_fu_292_p2 );

    SC_METHOD(thread_zext_ln15_1_fu_183_p1);
    sensitive << ( add_ln15_fu_177_p2 );

    SC_METHOD(thread_zext_ln15_fu_189_p1);
    sensitive << ( i_0_reg_148 );

    SC_METHOD(thread_zext_ln209_fu_337_p1);
    sensitive << ( tmp_s_fu_331_p3 );

    SC_METHOD(thread_zext_ln215_fu_261_p1);
    sensitive << ( length_V_reg_379 );

    SC_METHOD(thread_zext_ln22_fu_235_p1);
    sensitive << ( i1_0_reg_160 );

    SC_METHOD(thread_zext_ln544_fu_246_p1);
    sensitive << ( symbol_bits_V_q0 );

    SC_METHOD(thread_zext_ln556_fu_288_p1);
    sensitive << ( sub_ln556_fu_282_p2 );

    SC_METHOD(thread_zext_ln808_fu_298_p1);
    sensitive << ( ret_V_fu_264_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln14_fu_171_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln21_fu_223_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln883_fu_240_p2 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "create_codeword_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, symbol_bits_V_address0, "(port)symbol_bits_V_address0");
    sc_trace(mVcdFile, symbol_bits_V_ce0, "(port)symbol_bits_V_ce0");
    sc_trace(mVcdFile, symbol_bits_V_q0, "(port)symbol_bits_V_q0");
    sc_trace(mVcdFile, codeword_length_histogram_V_address0, "(port)codeword_length_histogram_V_address0");
    sc_trace(mVcdFile, codeword_length_histogram_V_ce0, "(port)codeword_length_histogram_V_ce0");
    sc_trace(mVcdFile, codeword_length_histogram_V_q0, "(port)codeword_length_histogram_V_q0");
    sc_trace(mVcdFile, encoding_V_address0, "(port)encoding_V_address0");
    sc_trace(mVcdFile, encoding_V_ce0, "(port)encoding_V_ce0");
    sc_trace(mVcdFile, encoding_V_we0, "(port)encoding_V_we0");
    sc_trace(mVcdFile, encoding_V_d0, "(port)encoding_V_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln14_fu_171_p2, "icmp_ln14_fu_171_p2");
    sc_trace(mVcdFile, i_fu_217_p2, "i_fu_217_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i_2_fu_229_p2, "i_2_fu_229_p2");
    sc_trace(mVcdFile, i_2_reg_363, "i_2_reg_363");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, zext_ln22_fu_235_p1, "zext_ln22_fu_235_p1");
    sc_trace(mVcdFile, zext_ln22_reg_368, "zext_ln22_reg_368");
    sc_trace(mVcdFile, icmp_ln21_fu_223_p2, "icmp_ln21_fu_223_p2");
    sc_trace(mVcdFile, length_V_reg_379, "length_V_reg_379");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, icmp_ln883_fu_240_p2, "icmp_ln883_fu_240_p2");
    sc_trace(mVcdFile, icmp_ln883_reg_385, "icmp_ln883_reg_385");
    sc_trace(mVcdFile, first_codeword_V_add_3_reg_389, "first_codeword_V_add_3_reg_389");
    sc_trace(mVcdFile, select_ln796_fu_316_p3, "select_ln796_fu_316_p3");
    sc_trace(mVcdFile, select_ln796_reg_394, "select_ln796_reg_394");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, first_codeword_V_address0, "first_codeword_V_address0");
    sc_trace(mVcdFile, first_codeword_V_ce0, "first_codeword_V_ce0");
    sc_trace(mVcdFile, first_codeword_V_we0, "first_codeword_V_we0");
    sc_trace(mVcdFile, first_codeword_V_d0, "first_codeword_V_d0");
    sc_trace(mVcdFile, first_codeword_V_q0, "first_codeword_V_q0");
    sc_trace(mVcdFile, i_0_reg_148, "i_0_reg_148");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, i1_0_reg_160, "i1_0_reg_160");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, zext_ln15_1_fu_183_p1, "zext_ln15_1_fu_183_p1");
    sc_trace(mVcdFile, zext_ln15_fu_189_p1, "zext_ln15_fu_189_p1");
    sc_trace(mVcdFile, zext_ln544_fu_246_p1, "zext_ln544_fu_246_p1");
    sc_trace(mVcdFile, encoding_V_addr_1_gep_fu_140_p3, "encoding_V_addr_1_gep_fu_140_p3");
    sc_trace(mVcdFile, shl_ln_fu_208_p3, "shl_ln_fu_208_p3");
    sc_trace(mVcdFile, add_ln700_fu_324_p2, "add_ln700_fu_324_p2");
    sc_trace(mVcdFile, zext_ln209_fu_337_p1, "zext_ln209_fu_337_p1");
    sc_trace(mVcdFile, add_ln15_fu_177_p2, "add_ln15_fu_177_p2");
    sc_trace(mVcdFile, trunc_ln1503_fu_194_p1, "trunc_ln1503_fu_194_p1");
    sc_trace(mVcdFile, trunc_ln1503_1_fu_198_p1, "trunc_ln1503_1_fu_198_p1");
    sc_trace(mVcdFile, add_ln1503_fu_202_p2, "add_ln1503_fu_202_p2");
    sc_trace(mVcdFile, zext_ln215_fu_261_p1, "zext_ln215_fu_261_p1");
    sc_trace(mVcdFile, ret_V_fu_264_p2, "ret_V_fu_264_p2");
    sc_trace(mVcdFile, trunc_ln790_fu_278_p1, "trunc_ln790_fu_278_p1");
    sc_trace(mVcdFile, sub_ln556_fu_282_p2, "sub_ln556_fu_282_p2");
    sc_trace(mVcdFile, p_Result_s_fu_251_p4, "p_Result_s_fu_251_p4");
    sc_trace(mVcdFile, zext_ln556_fu_288_p1, "zext_ln556_fu_288_p1");
    sc_trace(mVcdFile, zext_ln808_fu_298_p1, "zext_ln808_fu_298_p1");
    sc_trace(mVcdFile, r_V_fu_292_p2, "r_V_fu_292_p2");
    sc_trace(mVcdFile, lshr_ln808_fu_302_p2, "lshr_ln808_fu_302_p2");
    sc_trace(mVcdFile, p_Result_1_fu_270_p3, "p_Result_1_fu_270_p3");
    sc_trace(mVcdFile, trunc_ln796_fu_308_p1, "trunc_ln796_fu_308_p1");
    sc_trace(mVcdFile, trunc_ln796_1_fu_312_p1, "trunc_ln796_1_fu_312_p1");
    sc_trace(mVcdFile, tmp_s_fu_331_p3, "tmp_s_fu_331_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

create_codeword::~create_codeword() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete first_codeword_V_U;
}

void create_codeword::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                    esl_seteq<1,1,1>(icmp_ln21_fu_223_p2.read(), ap_const_lv1_1))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln14_fu_171_p2.read(), ap_const_lv1_1))) {
        i1_0_reg_160 = ap_const_lv9_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        i1_0_reg_160 = i_2_reg_363.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_0_reg_148 = i_fu_217_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        i_0_reg_148 = ap_const_lv5_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln883_fu_240_p2.read()))) {
        first_codeword_V_add_3_reg_389 =  (sc_lv<5>) (zext_ln544_fu_246_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_2_reg_363 = i_2_fu_229_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        icmp_ln883_reg_385 = icmp_ln883_fu_240_p2.read();
        length_V_reg_379 = symbol_bits_V_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        select_ln796_reg_394 = select_ln796_fu_316_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln21_fu_223_p2.read()))) {
        zext_ln22_reg_368 = zext_ln22_fu_235_p1.read();
    }
}

void create_codeword::thread_add_ln1503_fu_202_p2() {
    add_ln1503_fu_202_p2 = (!trunc_ln1503_fu_194_p1.read().is_01() || !trunc_ln1503_1_fu_198_p1.read().is_01())? sc_lv<26>(): (sc_biguint<26>(trunc_ln1503_fu_194_p1.read()) + sc_biguint<26>(trunc_ln1503_1_fu_198_p1.read()));
}

void create_codeword::thread_add_ln15_fu_177_p2() {
    add_ln15_fu_177_p2 = (!ap_const_lv5_1F.is_01() || !i_0_reg_148.read().is_01())? sc_lv<5>(): (sc_bigint<5>(ap_const_lv5_1F) + sc_biguint<5>(i_0_reg_148.read()));
}

void create_codeword::thread_add_ln700_fu_324_p2() {
    add_ln700_fu_324_p2 = (!ap_const_lv27_1.is_01() || !first_codeword_V_q0.read().is_01())? sc_lv<27>(): (sc_biguint<27>(ap_const_lv27_1) + sc_biguint<27>(first_codeword_V_q0.read()));
}

void create_codeword::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void create_codeword::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void create_codeword::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void create_codeword::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void create_codeword::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void create_codeword::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void create_codeword::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void create_codeword::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void create_codeword::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln21_fu_223_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void create_codeword::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void create_codeword::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln21_fu_223_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void create_codeword::thread_codeword_length_histogram_V_address0() {
    codeword_length_histogram_V_address0 =  (sc_lv<6>) (zext_ln15_1_fu_183_p1.read());
}

void create_codeword::thread_codeword_length_histogram_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        codeword_length_histogram_V_ce0 = ap_const_logic_1;
    } else {
        codeword_length_histogram_V_ce0 = ap_const_logic_0;
    }
}

void create_codeword::thread_encoding_V_addr_1_gep_fu_140_p3() {
    encoding_V_addr_1_gep_fu_140_p3 =  (sc_lv<8>) (zext_ln22_reg_368.read());
}

void create_codeword::thread_encoding_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        encoding_V_address0 = encoding_V_addr_1_gep_fu_140_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        encoding_V_address0 =  (sc_lv<8>) (zext_ln22_reg_368.read());
    } else {
        encoding_V_address0 = "XXXXXXXX";
    }
}

void create_codeword::thread_encoding_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        encoding_V_ce0 = ap_const_logic_1;
    } else {
        encoding_V_ce0 = ap_const_logic_0;
    }
}

void create_codeword::thread_encoding_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        encoding_V_d0 = zext_ln209_fu_337_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        encoding_V_d0 = ap_const_lv32_0;
    } else {
        encoding_V_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void create_codeword::thread_encoding_V_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(icmp_ln883_fu_240_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln883_reg_385.read())))) {
        encoding_V_we0 = ap_const_logic_1;
    } else {
        encoding_V_we0 = ap_const_logic_0;
    }
}

void create_codeword::thread_first_codeword_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        first_codeword_V_address0 = first_codeword_V_add_3_reg_389.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        first_codeword_V_address0 =  (sc_lv<5>) (zext_ln544_fu_246_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        first_codeword_V_address0 =  (sc_lv<5>) (zext_ln15_fu_189_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        first_codeword_V_address0 =  (sc_lv<5>) (zext_ln15_1_fu_183_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        first_codeword_V_address0 =  (sc_lv<5>) (ap_const_lv64_0);
    } else {
        first_codeword_V_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void create_codeword::thread_first_codeword_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))))) {
        first_codeword_V_ce0 = ap_const_logic_1;
    } else {
        first_codeword_V_ce0 = ap_const_logic_0;
    }
}

void create_codeword::thread_first_codeword_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        first_codeword_V_d0 = add_ln700_fu_324_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        first_codeword_V_d0 = shl_ln_fu_208_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        first_codeword_V_d0 = ap_const_lv27_0;
    } else {
        first_codeword_V_d0 =  (sc_lv<27>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void create_codeword::thread_first_codeword_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))))) {
        first_codeword_V_we0 = ap_const_logic_1;
    } else {
        first_codeword_V_we0 = ap_const_logic_0;
    }
}

void create_codeword::thread_i_2_fu_229_p2() {
    i_2_fu_229_p2 = (!i1_0_reg_160.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(i1_0_reg_160.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void create_codeword::thread_i_fu_217_p2() {
    i_fu_217_p2 = (!ap_const_lv5_1.is_01() || !i_0_reg_148.read().is_01())? sc_lv<5>(): (sc_biguint<5>(ap_const_lv5_1) + sc_biguint<5>(i_0_reg_148.read()));
}

void create_codeword::thread_icmp_ln14_fu_171_p2() {
    icmp_ln14_fu_171_p2 = (!i_0_reg_148.read().is_01() || !ap_const_lv5_1B.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_148.read() == ap_const_lv5_1B);
}

void create_codeword::thread_icmp_ln21_fu_223_p2() {
    icmp_ln21_fu_223_p2 = (!i1_0_reg_160.read().is_01() || !ap_const_lv9_100.is_01())? sc_lv<1>(): sc_lv<1>(i1_0_reg_160.read() == ap_const_lv9_100);
}

void create_codeword::thread_icmp_ln883_fu_240_p2() {
    icmp_ln883_fu_240_p2 = (!symbol_bits_V_q0.read().is_01() || !ap_const_lv5_0.is_01())? sc_lv<1>(): sc_lv<1>(symbol_bits_V_q0.read() == ap_const_lv5_0);
}

void create_codeword::thread_lshr_ln808_fu_302_p2() {
    lshr_ln808_fu_302_p2 = (!zext_ln808_fu_298_p1.read().is_01())? sc_lv<27>(): p_Result_s_fu_251_p4.read() >> (unsigned short)zext_ln808_fu_298_p1.read().to_uint();
}

void create_codeword::thread_p_Result_1_fu_270_p3() {
    p_Result_1_fu_270_p3 = ret_V_fu_264_p2.read().range(5, 5);
}

void create_codeword::thread_p_Result_s_fu_251_p4() {
    p_Result_s_fu_251_p4 = first_codeword_V_q0.read().range(0, 26);
}

void create_codeword::thread_r_V_fu_292_p2() {
    r_V_fu_292_p2 = (!zext_ln556_fu_288_p1.read().is_01())? sc_lv<27>(): p_Result_s_fu_251_p4.read() << (unsigned short)zext_ln556_fu_288_p1.read().to_uint();
}

void create_codeword::thread_ret_V_fu_264_p2() {
    ret_V_fu_264_p2 = (!ap_const_lv6_1B.is_01() || !zext_ln215_fu_261_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_1B) - sc_biguint<6>(zext_ln215_fu_261_p1.read()));
}

void create_codeword::thread_select_ln796_fu_316_p3() {
    select_ln796_fu_316_p3 = (!p_Result_1_fu_270_p3.read()[0].is_01())? sc_lv<22>(): ((p_Result_1_fu_270_p3.read()[0].to_bool())? trunc_ln796_fu_308_p1.read(): trunc_ln796_1_fu_312_p1.read());
}

void create_codeword::thread_shl_ln_fu_208_p3() {
    shl_ln_fu_208_p3 = esl_concat<26,1>(add_ln1503_fu_202_p2.read(), ap_const_lv1_0);
}

void create_codeword::thread_sub_ln556_fu_282_p2() {
    sub_ln556_fu_282_p2 = (!ap_const_lv3_0.is_01() || !trunc_ln790_fu_278_p1.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_0) - sc_biguint<3>(trunc_ln790_fu_278_p1.read()));
}

void create_codeword::thread_symbol_bits_V_address0() {
    symbol_bits_V_address0 =  (sc_lv<8>) (zext_ln22_fu_235_p1.read());
}

void create_codeword::thread_symbol_bits_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        symbol_bits_V_ce0 = ap_const_logic_1;
    } else {
        symbol_bits_V_ce0 = ap_const_logic_0;
    }
}

void create_codeword::thread_tmp_s_fu_331_p3() {
    tmp_s_fu_331_p3 = esl_concat<22,5>(select_ln796_reg_394.read(), length_V_reg_379.read());
}

void create_codeword::thread_trunc_ln1503_1_fu_198_p1() {
    trunc_ln1503_1_fu_198_p1 = first_codeword_V_q0.read().range(26-1, 0);
}

void create_codeword::thread_trunc_ln1503_fu_194_p1() {
    trunc_ln1503_fu_194_p1 = codeword_length_histogram_V_q0.read().range(26-1, 0);
}

void create_codeword::thread_trunc_ln790_fu_278_p1() {
    trunc_ln790_fu_278_p1 = ret_V_fu_264_p2.read().range(3-1, 0);
}

void create_codeword::thread_trunc_ln796_1_fu_312_p1() {
    trunc_ln796_1_fu_312_p1 = lshr_ln808_fu_302_p2.read().range(22-1, 0);
}

void create_codeword::thread_trunc_ln796_fu_308_p1() {
    trunc_ln796_fu_308_p1 = r_V_fu_292_p2.read().range(22-1, 0);
}

void create_codeword::thread_zext_ln15_1_fu_183_p1() {
    zext_ln15_1_fu_183_p1 = esl_zext<64,5>(add_ln15_fu_177_p2.read());
}

void create_codeword::thread_zext_ln15_fu_189_p1() {
    zext_ln15_fu_189_p1 = esl_zext<64,5>(i_0_reg_148.read());
}

void create_codeword::thread_zext_ln209_fu_337_p1() {
    zext_ln209_fu_337_p1 = esl_zext<32,27>(tmp_s_fu_331_p3.read());
}

void create_codeword::thread_zext_ln215_fu_261_p1() {
    zext_ln215_fu_261_p1 = esl_zext<6,5>(length_V_reg_379.read());
}

void create_codeword::thread_zext_ln22_fu_235_p1() {
    zext_ln22_fu_235_p1 = esl_zext<64,9>(i1_0_reg_160.read());
}

void create_codeword::thread_zext_ln544_fu_246_p1() {
    zext_ln544_fu_246_p1 = esl_zext<64,5>(symbol_bits_V_q0.read());
}

void create_codeword::thread_zext_ln556_fu_288_p1() {
    zext_ln556_fu_288_p1 = esl_zext<27,3>(sub_ln556_fu_282_p2.read());
}

void create_codeword::thread_zext_ln808_fu_298_p1() {
    zext_ln808_fu_298_p1 = esl_zext<27,6>(ret_V_fu_264_p2.read());
}

void create_codeword::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln14_fu_171_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln21_fu_223_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(icmp_ln883_fu_240_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<7>) ("XXXXXXX");
            break;
    }
}

}

