// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _create_tree_HH_
#define _create_tree_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "create_tree_frequibs.h"

namespace ap_rtl {

struct create_tree : public sc_module {
    // Port declarations 25
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<8> > in_value_V_address0;
    sc_out< sc_logic > in_value_V_ce0;
    sc_in< sc_lv<32> > in_value_V_q0;
    sc_out< sc_lv<8> > in_frequency_V_address0;
    sc_out< sc_logic > in_frequency_V_ce0;
    sc_in< sc_lv<32> > in_frequency_V_q0;
    sc_in< sc_lv<32> > num_symbols;
    sc_out< sc_lv<8> > parent_V_address0;
    sc_out< sc_logic > parent_V_ce0;
    sc_out< sc_logic > parent_V_we0;
    sc_out< sc_lv<31> > parent_V_d0;
    sc_out< sc_lv<8> > left_V_address0;
    sc_out< sc_logic > left_V_ce0;
    sc_out< sc_logic > left_V_we0;
    sc_out< sc_lv<32> > left_V_d0;
    sc_out< sc_lv<8> > right_V_address0;
    sc_out< sc_logic > right_V_ce0;
    sc_out< sc_logic > right_V_we0;
    sc_out< sc_lv<32> > right_V_d0;


    // Module declarations
    create_tree(sc_module_name name);
    SC_HAS_PROCESS(create_tree);

    ~create_tree();

    sc_trace_file* mVcdFile;

    create_tree_frequibs* frequency_V_U;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > add_ln15_fu_290_p2;
    sc_signal< sc_lv<32> > add_ln15_reg_448;
    sc_signal< sc_lv<32> > zext_ln15_fu_296_p1;
    sc_signal< sc_lv<32> > zext_ln15_reg_453;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<31> > i_fu_305_p2;
    sc_signal< sc_lv<31> > i_reg_464;
    sc_signal< sc_lv<64> > zext_ln544_5_fu_311_p1;
    sc_signal< sc_lv<64> > zext_ln544_5_reg_469;
    sc_signal< sc_lv<1> > icmp_ln15_fu_300_p2;
    sc_signal< sc_lv<32> > frequency_V_q0;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln887_1_fu_372_p2;
    sc_signal< sc_lv<1> > icmp_ln887_1_reg_508;
    sc_signal< sc_lv<64> > zext_ln544_7_fu_377_p1;
    sc_signal< sc_lv<64> > zext_ln544_7_reg_512;
    sc_signal< sc_lv<32> > in_value_V_load_1_reg_532;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln879_4_fu_388_p2;
    sc_signal< sc_lv<1> > icmp_ln879_4_reg_537;
    sc_signal< sc_lv<1> > and_ln42_fu_398_p2;
    sc_signal< sc_lv<1> > and_ln42_reg_541;
    sc_signal< sc_lv<32> > add_ln209_fu_404_p2;
    sc_signal< sc_lv<32> > add_ln209_reg_545;
    sc_signal< sc_lv<32> > add_ln209_1_fu_410_p2;
    sc_signal< sc_lv<32> > add_ln209_1_reg_550;
    sc_signal< sc_lv<8> > frequency_V_address0;
    sc_signal< sc_logic > frequency_V_ce0;
    sc_signal< sc_logic > frequency_V_we0;
    sc_signal< sc_lv<32> > frequency_V_d0;
    sc_signal< sc_lv<32> > t_V_3_reg_192;
    sc_signal< sc_lv<32> > ap_phi_mux_t_V_3_be_phi_fu_264_p4;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > t_V_reg_204;
    sc_signal< sc_lv<32> > ap_phi_mux_t_V_be_phi_fu_276_p4;
    sc_signal< sc_lv<31> > op2_assign_reg_216;
    sc_signal< sc_lv<32> > ap_phi_mux_t_V_5_phi_fu_232_p4;
    sc_signal< sc_lv<32> > t_V_5_reg_229;
    sc_signal< sc_lv<1> > icmp_ln887_fu_327_p2;
    sc_signal< sc_lv<1> > and_ln26_fu_342_p2;
    sc_signal< sc_lv<1> > icmp_ln879_2_fu_332_p2;
    sc_signal< sc_lv<32> > tree_count_V_fu_365_p2;
    sc_signal< sc_lv<32> > in_count_V_fu_353_p2;
    sc_signal< sc_lv<32> > ap_phi_mux_t_V_4_phi_fu_243_p4;
    sc_signal< sc_lv<32> > t_V_4_reg_240;
    sc_signal< sc_lv<32> > p_090_0_reg_251;
    sc_signal< sc_lv<32> > tree_count_V_1_fu_435_p2;
    sc_signal< sc_lv<32> > in_count_V_1_fu_422_p2;
    sc_signal< sc_lv<64> > zext_ln544_6_fu_316_p1;
    sc_signal< sc_lv<64> > zext_ln544_fu_322_p1;
    sc_signal< sc_lv<64> > zext_ln28_fu_348_p1;
    sc_signal< sc_lv<64> > zext_ln33_fu_360_p1;
    sc_signal< sc_lv<64> > zext_ln544_8_fu_382_p1;
    sc_signal< sc_lv<64> > zext_ln44_fu_416_p1;
    sc_signal< sc_lv<64> > zext_ln49_fu_429_p1;
    sc_signal< sc_lv<1> > grp_fu_284_p2;
    sc_signal< sc_lv<1> > icmp_ln879_fu_337_p2;
    sc_signal< sc_lv<1> > icmp_ln879_3_fu_393_p2;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    sc_signal< bool > ap_condition_188;
    sc_signal< bool > ap_condition_195;
    sc_signal< bool > ap_condition_169;
    sc_signal< bool > ap_condition_176;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const sc_lv<31> ap_const_lv31_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln15_fu_290_p2();
    void thread_add_ln209_1_fu_410_p2();
    void thread_add_ln209_fu_404_p2();
    void thread_and_ln26_fu_342_p2();
    void thread_and_ln42_fu_398_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_condition_169();
    void thread_ap_condition_176();
    void thread_ap_condition_188();
    void thread_ap_condition_195();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_t_V_3_be_phi_fu_264_p4();
    void thread_ap_phi_mux_t_V_4_phi_fu_243_p4();
    void thread_ap_phi_mux_t_V_5_phi_fu_232_p4();
    void thread_ap_phi_mux_t_V_be_phi_fu_276_p4();
    void thread_ap_ready();
    void thread_frequency_V_address0();
    void thread_frequency_V_ce0();
    void thread_frequency_V_d0();
    void thread_frequency_V_we0();
    void thread_grp_fu_284_p2();
    void thread_i_fu_305_p2();
    void thread_icmp_ln15_fu_300_p2();
    void thread_icmp_ln879_2_fu_332_p2();
    void thread_icmp_ln879_3_fu_393_p2();
    void thread_icmp_ln879_4_fu_388_p2();
    void thread_icmp_ln879_fu_337_p2();
    void thread_icmp_ln887_1_fu_372_p2();
    void thread_icmp_ln887_fu_327_p2();
    void thread_in_count_V_1_fu_422_p2();
    void thread_in_count_V_fu_353_p2();
    void thread_in_frequency_V_address0();
    void thread_in_frequency_V_ce0();
    void thread_in_value_V_address0();
    void thread_in_value_V_ce0();
    void thread_left_V_address0();
    void thread_left_V_ce0();
    void thread_left_V_d0();
    void thread_left_V_we0();
    void thread_parent_V_address0();
    void thread_parent_V_ce0();
    void thread_parent_V_d0();
    void thread_parent_V_we0();
    void thread_right_V_address0();
    void thread_right_V_ce0();
    void thread_right_V_d0();
    void thread_right_V_we0();
    void thread_tree_count_V_1_fu_435_p2();
    void thread_tree_count_V_fu_365_p2();
    void thread_zext_ln15_fu_296_p1();
    void thread_zext_ln28_fu_348_p1();
    void thread_zext_ln33_fu_360_p1();
    void thread_zext_ln44_fu_416_p1();
    void thread_zext_ln49_fu_429_p1();
    void thread_zext_ln544_5_fu_311_p1();
    void thread_zext_ln544_6_fu_316_p1();
    void thread_zext_ln544_7_fu_377_p1();
    void thread_zext_ln544_8_fu_382_p1();
    void thread_zext_ln544_fu_322_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
