// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _truncate_tree_HH_
#define _truncate_tree_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct truncate_tree : public sc_module {
    // Port declarations 23
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<6> > input_length_histogram_V_address0;
    sc_out< sc_logic > input_length_histogram_V_ce0;
    sc_in< sc_lv<32> > input_length_histogram_V_q0;
    sc_out< sc_lv<6> > output_length_histogram1_V_address0;
    sc_out< sc_logic > output_length_histogram1_V_ce0;
    sc_out< sc_logic > output_length_histogram1_V_we0;
    sc_out< sc_lv<32> > output_length_histogram1_V_d0;
    sc_in< sc_lv<32> > output_length_histogram1_V_q0;
    sc_out< sc_lv<6> > output_length_histogram1_V_address1;
    sc_out< sc_logic > output_length_histogram1_V_ce1;
    sc_out< sc_logic > output_length_histogram1_V_we1;
    sc_out< sc_lv<32> > output_length_histogram1_V_d1;
    sc_in< sc_lv<32> > output_length_histogram1_V_q1;
    sc_out< sc_lv<6> > output_length_histogram2_V_address0;
    sc_out< sc_logic > output_length_histogram2_V_ce0;
    sc_out< sc_logic > output_length_histogram2_V_we0;
    sc_out< sc_lv<32> > output_length_histogram2_V_d0;


    // Module declarations
    truncate_tree(sc_module_name name);
    SC_HAS_PROCESS(truncate_tree);

    ~truncate_tree();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<16> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > reg_206;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<32> > reg_211;
    sc_signal< sc_lv<7> > i_fu_222_p2;
    sc_signal< sc_lv<7> > i_reg_360;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<64> > zext_ln11_fu_228_p1;
    sc_signal< sc_lv<64> > zext_ln11_reg_365;
    sc_signal< sc_lv<1> > icmp_ln10_fu_216_p2;
    sc_signal< sc_lv<6> > output_length_histog_1_reg_386;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln16_fu_238_p2;
    sc_signal< sc_lv<6> > i_1_fu_249_p2;
    sc_signal< sc_lv<6> > i_1_reg_391;
    sc_signal< sc_lv<6> > output_length_histog_2_reg_396;
    sc_signal< sc_lv<1> > icmp_ln879_fu_260_p2;
    sc_signal< sc_lv<1> > icmp_ln879_reg_404;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > grp_fu_197_p2;
    sc_signal< sc_lv<32> > j_V_fu_266_p2;
    sc_signal< sc_lv<32> > j_V_reg_408;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<6> > output_length_histog_6_reg_422;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<6> > output_length_histog_8_reg_428;
    sc_signal< sc_lv<7> > i_2_fu_346_p2;
    sc_signal< sc_lv<7> > i_2_reg_437;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<64> > zext_ln45_fu_352_p1;
    sc_signal< sc_lv<64> > zext_ln45_reg_442;
    sc_signal< sc_lv<1> > icmp_ln44_fu_340_p2;
    sc_signal< sc_lv<7> > i_0_reg_153;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<6> > i1_0_reg_164;
    sc_signal< sc_lv<32> > t_V_reg_175;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<7> > i2_0_reg_186;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<64> > zext_ln19_fu_244_p1;
    sc_signal< sc_lv<64> > zext_ln32_fu_255_p1;
    sc_signal< sc_lv<64> > zext_ln544_fu_272_p1;
    sc_signal< sc_lv<64> > zext_ln544_1_fu_281_p1;
    sc_signal< sc_lv<64> > zext_ln544_2_fu_296_p1;
    sc_signal< sc_lv<32> > j_V_2_fu_58;
    sc_signal< sc_lv<32> > j_V_3_fu_301_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<32> > add_ln701_fu_312_p2;
    sc_signal< sc_lv<32> > add_ln700_fu_319_p2;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<32> > add_ln700_1_fu_326_p2;
    sc_signal< sc_lv<32> > add_ln701_1_fu_333_p2;
    sc_signal< sc_lv<33> > zext_ln215_fu_286_p1;
    sc_signal< sc_lv<33> > ret_V_fu_290_p2;
    sc_signal< sc_lv<16> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<16> ap_ST_fsm_state1;
    static const sc_lv<16> ap_ST_fsm_state2;
    static const sc_lv<16> ap_ST_fsm_state3;
    static const sc_lv<16> ap_ST_fsm_state4;
    static const sc_lv<16> ap_ST_fsm_state5;
    static const sc_lv<16> ap_ST_fsm_state6;
    static const sc_lv<16> ap_ST_fsm_state7;
    static const sc_lv<16> ap_ST_fsm_state8;
    static const sc_lv<16> ap_ST_fsm_state9;
    static const sc_lv<16> ap_ST_fsm_state10;
    static const sc_lv<16> ap_ST_fsm_state11;
    static const sc_lv<16> ap_ST_fsm_state12;
    static const sc_lv<16> ap_ST_fsm_state13;
    static const sc_lv<16> ap_ST_fsm_state14;
    static const sc_lv<16> ap_ST_fsm_state15;
    static const sc_lv<16> ap_ST_fsm_state16;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<6> ap_const_lv6_3F;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<7> ap_const_lv7_40;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<6> ap_const_lv6_1B;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const sc_lv<33> ap_const_lv33_1;
    static const sc_lv<32> ap_const_lv32_FFFFFFFE;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln700_1_fu_326_p2();
    void thread_add_ln700_fu_319_p2();
    void thread_add_ln701_1_fu_333_p2();
    void thread_add_ln701_fu_312_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_grp_fu_197_p2();
    void thread_i_1_fu_249_p2();
    void thread_i_2_fu_346_p2();
    void thread_i_fu_222_p2();
    void thread_icmp_ln10_fu_216_p2();
    void thread_icmp_ln16_fu_238_p2();
    void thread_icmp_ln44_fu_340_p2();
    void thread_icmp_ln879_fu_260_p2();
    void thread_input_length_histogram_V_address0();
    void thread_input_length_histogram_V_ce0();
    void thread_j_V_3_fu_301_p2();
    void thread_j_V_fu_266_p2();
    void thread_output_length_histogram1_V_address0();
    void thread_output_length_histogram1_V_address1();
    void thread_output_length_histogram1_V_ce0();
    void thread_output_length_histogram1_V_ce1();
    void thread_output_length_histogram1_V_d0();
    void thread_output_length_histogram1_V_d1();
    void thread_output_length_histogram1_V_we0();
    void thread_output_length_histogram1_V_we1();
    void thread_output_length_histogram2_V_address0();
    void thread_output_length_histogram2_V_ce0();
    void thread_output_length_histogram2_V_d0();
    void thread_output_length_histogram2_V_we0();
    void thread_ret_V_fu_290_p2();
    void thread_zext_ln11_fu_228_p1();
    void thread_zext_ln19_fu_244_p1();
    void thread_zext_ln215_fu_286_p1();
    void thread_zext_ln32_fu_255_p1();
    void thread_zext_ln45_fu_352_p1();
    void thread_zext_ln544_1_fu_281_p1();
    void thread_zext_ln544_2_fu_296_p1();
    void thread_zext_ln544_fu_272_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
