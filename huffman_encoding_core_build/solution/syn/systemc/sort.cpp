// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "sort.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic sort::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic sort::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<14> sort::ap_ST_fsm_state1 = "1";
const sc_lv<14> sort::ap_ST_fsm_state2 = "10";
const sc_lv<14> sort::ap_ST_fsm_state3 = "100";
const sc_lv<14> sort::ap_ST_fsm_state4 = "1000";
const sc_lv<14> sort::ap_ST_fsm_state5 = "10000";
const sc_lv<14> sort::ap_ST_fsm_state6 = "100000";
const sc_lv<14> sort::ap_ST_fsm_state7 = "1000000";
const sc_lv<14> sort::ap_ST_fsm_state8 = "10000000";
const sc_lv<14> sort::ap_ST_fsm_state9 = "100000000";
const sc_lv<14> sort::ap_ST_fsm_state10 = "1000000000";
const sc_lv<14> sort::ap_ST_fsm_state11 = "10000000000";
const sc_lv<14> sort::ap_ST_fsm_state12 = "100000000000";
const sc_lv<14> sort::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<14> sort::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<32> sort::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> sort::ap_const_lv32_1 = "1";
const sc_lv<1> sort::ap_const_lv1_0 = "0";
const sc_lv<1> sort::ap_const_lv1_1 = "1";
const sc_lv<32> sort::ap_const_lv32_3 = "11";
const sc_lv<32> sort::ap_const_lv32_4 = "100";
const sc_lv<32> sort::ap_const_lv32_5 = "101";
const sc_lv<32> sort::ap_const_lv32_6 = "110";
const sc_lv<32> sort::ap_const_lv32_7 = "111";
const sc_lv<32> sort::ap_const_lv32_9 = "1001";
const sc_lv<32> sort::ap_const_lv32_A = "1010";
const sc_lv<32> sort::ap_const_lv32_B = "1011";
const sc_lv<32> sort::ap_const_lv32_C = "1100";
const sc_lv<32> sort::ap_const_lv32_2 = "10";
const sc_lv<6> sort::ap_const_lv6_0 = "000000";
const sc_lv<5> sort::ap_const_lv5_0 = "00000";
const sc_lv<32> sort::ap_const_lv32_8 = "1000";
const sc_lv<5> sort::ap_const_lv5_1 = "1";
const sc_lv<32> sort::ap_const_lv32_D = "1101";
const sc_lv<64> sort::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<5> sort::ap_const_lv5_10 = "10000";
const sc_lv<5> sort::ap_const_lv5_1F = "11111";
const sc_lv<6> sort::ap_const_lv6_4 = "100";
const bool sort::ap_const_boolean_1 = true;

sort::sort(sc_module_name name) : sc_module(name), mVcdFile(0) {
    previous_sorting_val_U = new sort_previous_sorbkb("previous_sorting_val_U");
    previous_sorting_val_U->clk(ap_clk);
    previous_sorting_val_U->reset(ap_rst);
    previous_sorting_val_U->address0(previous_sorting_val_address0);
    previous_sorting_val_U->ce0(previous_sorting_val_ce0);
    previous_sorting_val_U->we0(previous_sorting_val_we0);
    previous_sorting_val_U->d0(sorting_value_V_q0);
    previous_sorting_val_U->q0(previous_sorting_val_q0);
    previous_sorting_fre_U = new sort_previous_sorbkb("previous_sorting_fre_U");
    previous_sorting_fre_U->clk(ap_clk);
    previous_sorting_fre_U->reset(ap_rst);
    previous_sorting_fre_U->address0(previous_sorting_fre_address0);
    previous_sorting_fre_U->ce0(previous_sorting_fre_ce0);
    previous_sorting_fre_U->we0(previous_sorting_fre_we0);
    previous_sorting_fre_U->d0(sorting_frequency_V_q0);
    previous_sorting_fre_U->q0(previous_sorting_fre_q0);
    sorting_value_V_U = new sort_previous_sorbkb("sorting_value_V_U");
    sorting_value_V_U->clk(ap_clk);
    sorting_value_V_U->reset(ap_rst);
    sorting_value_V_U->address0(sorting_value_V_address0);
    sorting_value_V_U->ce0(sorting_value_V_ce0);
    sorting_value_V_U->we0(sorting_value_V_we0);
    sorting_value_V_U->d0(sorting_value_V_d0);
    sorting_value_V_U->q0(sorting_value_V_q0);
    sorting_frequency_V_U = new sort_previous_sorbkb("sorting_frequency_V_U");
    sorting_frequency_V_U->clk(ap_clk);
    sorting_frequency_V_U->reset(ap_rst);
    sorting_frequency_V_U->address0(sorting_frequency_V_address0);
    sorting_frequency_V_U->ce0(sorting_frequency_V_ce0);
    sorting_frequency_V_U->we0(sorting_frequency_V_we0);
    sorting_frequency_V_U->d0(sorting_frequency_V_d0);
    sorting_frequency_V_U->q0(sorting_frequency_V_q0);
    digit_histogram_V_U = new sort_digit_histogfYi("digit_histogram_V_U");
    digit_histogram_V_U->clk(ap_clk);
    digit_histogram_V_U->reset(ap_rst);
    digit_histogram_V_U->address0(digit_histogram_V_address0);
    digit_histogram_V_U->ce0(digit_histogram_V_ce0);
    digit_histogram_V_U->we0(digit_histogram_V_we0);
    digit_histogram_V_U->d0(digit_histogram_V_d0);
    digit_histogram_V_U->q0(digit_histogram_V_q0);
    digit_location_V_U = new sort_digit_histogfYi("digit_location_V_U");
    digit_location_V_U->clk(ap_clk);
    digit_location_V_U->reset(ap_rst);
    digit_location_V_U->address0(digit_location_V_address0);
    digit_location_V_U->ce0(digit_location_V_ce0);
    digit_location_V_U->we0(digit_location_V_we0);
    digit_location_V_U->d0(digit_location_V_d0);
    digit_location_V_U->q0(digit_location_V_q0);
    current_digit_V_U = new sort_current_digihbi("current_digit_V_U");
    current_digit_V_U->clk(ap_clk);
    current_digit_V_U->reset(ap_rst);
    current_digit_V_U->address0(current_digit_V_address0);
    current_digit_V_U->ce0(current_digit_V_ce0);
    current_digit_V_U->we0(current_digit_V_we0);
    current_digit_V_U->d0(digit_V_reg_629);
    current_digit_V_U->q0(current_digit_V_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln209_fu_501_p2);
    sensitive << ( digit_histogram_V_q0 );
    sensitive << ( digit_location_V_q0 );

    SC_METHOD(thread_add_ln46_fu_484_p2);
    sensitive << ( i6_0_reg_373 );

    SC_METHOD(thread_add_ln700_3_fu_549_p2);
    sensitive << ( digit_location_V_q0 );

    SC_METHOD(thread_add_ln700_fu_471_p2);
    sensitive << ( digit_histogram_V_q0 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_1_fu_417_p3 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_1_fu_417_p3 );

    SC_METHOD(thread_current_digit_V_address0);
    sensitive << ( zext_ln36_reg_616 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( zext_ln51_fu_525_p1 );

    SC_METHOD(thread_current_digit_V_ce0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_current_digit_V_we0);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_digit_V_fu_463_p1);
    sensitive << ( lshr_ln1503_fu_458_p2 );

    SC_METHOD(thread_digit_histogram_V_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( digit_histogram_V_ad_1_reg_640 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( zext_ln30_fu_437_p1 );
    sensitive << ( zext_ln544_fu_467_p1 );
    sensitive << ( zext_ln46_1_fu_490_p1 );

    SC_METHOD(thread_digit_histogram_V_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_digit_histogram_V_d0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( add_ln700_fu_471_p2 );

    SC_METHOD(thread_digit_histogram_V_we0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln28_fu_425_p2 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_digit_location_V_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( digit_location_V_add_3_reg_687 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( zext_ln46_1_fu_490_p1 );
    sensitive << ( zext_ln46_fu_496_p1 );
    sensitive << ( zext_ln544_3_fu_536_p1 );

    SC_METHOD(thread_digit_location_V_ce0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_digit_location_V_d0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( add_ln209_fu_501_p2 );
    sensitive << ( add_ln700_3_fu_549_p2 );

    SC_METHOD(thread_digit_location_V_we0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln34_fu_442_p2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_i_3_fu_508_p2);
    sensitive << ( i6_0_reg_373 );

    SC_METHOD(thread_i_fu_431_p2);
    sensitive << ( i_0_reg_351 );

    SC_METHOD(thread_icmp_ln20_fu_396_p2);
    sensitive << ( num_symbols );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( j_0_reg_328 );

    SC_METHOD(thread_icmp_ln28_fu_425_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i_0_reg_351 );

    SC_METHOD(thread_icmp_ln34_fu_442_p2);
    sensitive << ( num_symbols );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( j5_0_reg_362 );

    SC_METHOD(thread_icmp_ln44_fu_478_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( i6_0_reg_373 );

    SC_METHOD(thread_icmp_ln49_fu_514_p2);
    sensitive << ( num_symbols );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( j7_0_reg_385 );

    SC_METHOD(thread_in_frequency_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln22_fu_407_p1 );

    SC_METHOD(thread_in_frequency_V_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_in_value_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln22_fu_407_p1 );

    SC_METHOD(thread_in_value_V_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_j_1_fu_447_p2);
    sensitive << ( j5_0_reg_362 );

    SC_METHOD(thread_j_2_fu_519_p2);
    sensitive << ( j7_0_reg_385 );

    SC_METHOD(thread_j_fu_401_p2);
    sensitive << ( j_0_reg_328 );

    SC_METHOD(thread_lshr_ln1503_fu_458_p2);
    sensitive << ( zext_ln26_reg_592 );
    sensitive << ( sorting_frequency_V_q0 );

    SC_METHOD(thread_out_frequency_V_address0);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( zext_ln544_4_fu_541_p1 );

    SC_METHOD(thread_out_frequency_V_ce0);
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_out_frequency_V_d0);
    sensitive << ( previous_sorting_fre_q0 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_out_frequency_V_we0);
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_out_value_V_address0);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( zext_ln544_4_fu_541_p1 );

    SC_METHOD(thread_out_value_V_ce0);
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_out_value_V_d0);
    sensitive << ( previous_sorting_val_q0 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_out_value_V_we0);
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_previous_sorting_fre_address0);
    sensitive << ( zext_ln36_reg_616 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( zext_ln51_reg_671 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_previous_sorting_fre_ce0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_previous_sorting_fre_we0);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_previous_sorting_val_address0);
    sensitive << ( zext_ln36_reg_616 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( zext_ln51_reg_671 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_previous_sorting_val_ce0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_previous_sorting_val_we0);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_shift_fu_530_p2);
    sensitive << ( op2_assign_reg_339 );

    SC_METHOD(thread_sorting_frequency_V_address0);
    sensitive << ( zext_ln22_reg_571 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln36_fu_453_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( zext_ln544_4_fu_541_p1 );

    SC_METHOD(thread_sorting_frequency_V_ce0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_sorting_frequency_V_d0);
    sensitive << ( in_frequency_V_q0 );
    sensitive << ( previous_sorting_fre_q0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_sorting_frequency_V_we0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_sorting_value_V_address0);
    sensitive << ( zext_ln22_reg_571 );
    sensitive << ( zext_ln36_reg_616 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( zext_ln544_4_fu_541_p1 );

    SC_METHOD(thread_sorting_value_V_ce0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_sorting_value_V_d0);
    sensitive << ( in_value_V_q0 );
    sensitive << ( previous_sorting_val_q0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_sorting_value_V_we0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_tmp_1_fu_417_p3);
    sensitive << ( op2_assign_reg_339 );

    SC_METHOD(thread_zext_ln22_fu_407_p1);
    sensitive << ( j_0_reg_328 );

    SC_METHOD(thread_zext_ln26_fu_413_p1);
    sensitive << ( op2_assign_reg_339 );

    SC_METHOD(thread_zext_ln30_fu_437_p1);
    sensitive << ( i_0_reg_351 );

    SC_METHOD(thread_zext_ln36_fu_453_p1);
    sensitive << ( j5_0_reg_362 );

    SC_METHOD(thread_zext_ln46_1_fu_490_p1);
    sensitive << ( add_ln46_fu_484_p2 );

    SC_METHOD(thread_zext_ln46_fu_496_p1);
    sensitive << ( i6_0_reg_373 );

    SC_METHOD(thread_zext_ln51_fu_525_p1);
    sensitive << ( j7_0_reg_385 );

    SC_METHOD(thread_zext_ln544_3_fu_536_p1);
    sensitive << ( current_digit_V_q0 );

    SC_METHOD(thread_zext_ln544_4_fu_541_p1);
    sensitive << ( digit_location_V_q0 );

    SC_METHOD(thread_zext_ln544_fu_467_p1);
    sensitive << ( digit_V_reg_629 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln20_fu_396_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln34_fu_442_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln44_fu_478_p2 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( icmp_ln49_fu_514_p2 );
    sensitive << ( tmp_1_fu_417_p3 );
    sensitive << ( icmp_ln28_fu_425_p2 );

    ap_CS_fsm = "00000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "sort_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_value_V_address0, "(port)in_value_V_address0");
    sc_trace(mVcdFile, in_value_V_ce0, "(port)in_value_V_ce0");
    sc_trace(mVcdFile, in_value_V_q0, "(port)in_value_V_q0");
    sc_trace(mVcdFile, in_frequency_V_address0, "(port)in_frequency_V_address0");
    sc_trace(mVcdFile, in_frequency_V_ce0, "(port)in_frequency_V_ce0");
    sc_trace(mVcdFile, in_frequency_V_q0, "(port)in_frequency_V_q0");
    sc_trace(mVcdFile, num_symbols, "(port)num_symbols");
    sc_trace(mVcdFile, out_value_V_address0, "(port)out_value_V_address0");
    sc_trace(mVcdFile, out_value_V_ce0, "(port)out_value_V_ce0");
    sc_trace(mVcdFile, out_value_V_we0, "(port)out_value_V_we0");
    sc_trace(mVcdFile, out_value_V_d0, "(port)out_value_V_d0");
    sc_trace(mVcdFile, out_frequency_V_address0, "(port)out_frequency_V_address0");
    sc_trace(mVcdFile, out_frequency_V_ce0, "(port)out_frequency_V_ce0");
    sc_trace(mVcdFile, out_frequency_V_we0, "(port)out_frequency_V_we0");
    sc_trace(mVcdFile, out_frequency_V_d0, "(port)out_frequency_V_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, j_fu_401_p2, "j_fu_401_p2");
    sc_trace(mVcdFile, j_reg_566, "j_reg_566");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, zext_ln22_fu_407_p1, "zext_ln22_fu_407_p1");
    sc_trace(mVcdFile, zext_ln22_reg_571, "zext_ln22_reg_571");
    sc_trace(mVcdFile, icmp_ln20_fu_396_p2, "icmp_ln20_fu_396_p2");
    sc_trace(mVcdFile, zext_ln26_fu_413_p1, "zext_ln26_fu_413_p1");
    sc_trace(mVcdFile, zext_ln26_reg_592, "zext_ln26_reg_592");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i_fu_431_p2, "i_fu_431_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, j_1_fu_447_p2, "j_1_fu_447_p2");
    sc_trace(mVcdFile, j_1_reg_611, "j_1_reg_611");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, zext_ln36_fu_453_p1, "zext_ln36_fu_453_p1");
    sc_trace(mVcdFile, zext_ln36_reg_616, "zext_ln36_reg_616");
    sc_trace(mVcdFile, icmp_ln34_fu_442_p2, "icmp_ln34_fu_442_p2");
    sc_trace(mVcdFile, digit_V_fu_463_p1, "digit_V_fu_463_p1");
    sc_trace(mVcdFile, digit_V_reg_629, "digit_V_reg_629");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, digit_histogram_V_ad_1_reg_640, "digit_histogram_V_ad_1_reg_640");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, icmp_ln44_fu_478_p2, "icmp_ln44_fu_478_p2");
    sc_trace(mVcdFile, i_3_fu_508_p2, "i_3_fu_508_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, j_2_fu_519_p2, "j_2_fu_519_p2");
    sc_trace(mVcdFile, j_2_reg_666, "j_2_reg_666");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, zext_ln51_fu_525_p1, "zext_ln51_fu_525_p1");
    sc_trace(mVcdFile, zext_ln51_reg_671, "zext_ln51_reg_671");
    sc_trace(mVcdFile, icmp_ln49_fu_514_p2, "icmp_ln49_fu_514_p2");
    sc_trace(mVcdFile, shift_fu_530_p2, "shift_fu_530_p2");
    sc_trace(mVcdFile, digit_location_V_add_3_reg_687, "digit_location_V_add_3_reg_687");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, previous_sorting_val_address0, "previous_sorting_val_address0");
    sc_trace(mVcdFile, previous_sorting_val_ce0, "previous_sorting_val_ce0");
    sc_trace(mVcdFile, previous_sorting_val_we0, "previous_sorting_val_we0");
    sc_trace(mVcdFile, previous_sorting_val_q0, "previous_sorting_val_q0");
    sc_trace(mVcdFile, previous_sorting_fre_address0, "previous_sorting_fre_address0");
    sc_trace(mVcdFile, previous_sorting_fre_ce0, "previous_sorting_fre_ce0");
    sc_trace(mVcdFile, previous_sorting_fre_we0, "previous_sorting_fre_we0");
    sc_trace(mVcdFile, previous_sorting_fre_q0, "previous_sorting_fre_q0");
    sc_trace(mVcdFile, sorting_value_V_address0, "sorting_value_V_address0");
    sc_trace(mVcdFile, sorting_value_V_ce0, "sorting_value_V_ce0");
    sc_trace(mVcdFile, sorting_value_V_we0, "sorting_value_V_we0");
    sc_trace(mVcdFile, sorting_value_V_d0, "sorting_value_V_d0");
    sc_trace(mVcdFile, sorting_value_V_q0, "sorting_value_V_q0");
    sc_trace(mVcdFile, sorting_frequency_V_address0, "sorting_frequency_V_address0");
    sc_trace(mVcdFile, sorting_frequency_V_ce0, "sorting_frequency_V_ce0");
    sc_trace(mVcdFile, sorting_frequency_V_we0, "sorting_frequency_V_we0");
    sc_trace(mVcdFile, sorting_frequency_V_d0, "sorting_frequency_V_d0");
    sc_trace(mVcdFile, sorting_frequency_V_q0, "sorting_frequency_V_q0");
    sc_trace(mVcdFile, digit_histogram_V_address0, "digit_histogram_V_address0");
    sc_trace(mVcdFile, digit_histogram_V_ce0, "digit_histogram_V_ce0");
    sc_trace(mVcdFile, digit_histogram_V_we0, "digit_histogram_V_we0");
    sc_trace(mVcdFile, digit_histogram_V_d0, "digit_histogram_V_d0");
    sc_trace(mVcdFile, digit_histogram_V_q0, "digit_histogram_V_q0");
    sc_trace(mVcdFile, digit_location_V_address0, "digit_location_V_address0");
    sc_trace(mVcdFile, digit_location_V_ce0, "digit_location_V_ce0");
    sc_trace(mVcdFile, digit_location_V_we0, "digit_location_V_we0");
    sc_trace(mVcdFile, digit_location_V_d0, "digit_location_V_d0");
    sc_trace(mVcdFile, digit_location_V_q0, "digit_location_V_q0");
    sc_trace(mVcdFile, current_digit_V_address0, "current_digit_V_address0");
    sc_trace(mVcdFile, current_digit_V_ce0, "current_digit_V_ce0");
    sc_trace(mVcdFile, current_digit_V_we0, "current_digit_V_we0");
    sc_trace(mVcdFile, current_digit_V_q0, "current_digit_V_q0");
    sc_trace(mVcdFile, j_0_reg_328, "j_0_reg_328");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, op2_assign_reg_339, "op2_assign_reg_339");
    sc_trace(mVcdFile, i_0_reg_351, "i_0_reg_351");
    sc_trace(mVcdFile, tmp_1_fu_417_p3, "tmp_1_fu_417_p3");
    sc_trace(mVcdFile, icmp_ln28_fu_425_p2, "icmp_ln28_fu_425_p2");
    sc_trace(mVcdFile, j5_0_reg_362, "j5_0_reg_362");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, i6_0_reg_373, "i6_0_reg_373");
    sc_trace(mVcdFile, j7_0_reg_385, "j7_0_reg_385");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, zext_ln30_fu_437_p1, "zext_ln30_fu_437_p1");
    sc_trace(mVcdFile, zext_ln544_fu_467_p1, "zext_ln544_fu_467_p1");
    sc_trace(mVcdFile, zext_ln46_1_fu_490_p1, "zext_ln46_1_fu_490_p1");
    sc_trace(mVcdFile, zext_ln46_fu_496_p1, "zext_ln46_fu_496_p1");
    sc_trace(mVcdFile, zext_ln544_3_fu_536_p1, "zext_ln544_3_fu_536_p1");
    sc_trace(mVcdFile, zext_ln544_4_fu_541_p1, "zext_ln544_4_fu_541_p1");
    sc_trace(mVcdFile, add_ln700_fu_471_p2, "add_ln700_fu_471_p2");
    sc_trace(mVcdFile, add_ln209_fu_501_p2, "add_ln209_fu_501_p2");
    sc_trace(mVcdFile, add_ln700_3_fu_549_p2, "add_ln700_3_fu_549_p2");
    sc_trace(mVcdFile, lshr_ln1503_fu_458_p2, "lshr_ln1503_fu_458_p2");
    sc_trace(mVcdFile, add_ln46_fu_484_p2, "add_ln46_fu_484_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

sort::~sort() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete previous_sorting_val_U;
    delete previous_sorting_fre_U;
    delete sorting_value_V_U;
    delete sorting_frequency_V_U;
    delete digit_histogram_V_U;
    delete digit_location_V_U;
    delete current_digit_V_U;
}

void sort::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        i6_0_reg_373 = i_3_fu_508_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln34_fu_442_p2.read()))) {
        i6_0_reg_373 = ap_const_lv5_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln28_fu_425_p2.read()))) {
        i_0_reg_351 = i_fu_431_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_417_p3.read()))) {
        i_0_reg_351 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln28_fu_425_p2.read()))) {
        j5_0_reg_362 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        j5_0_reg_362 = j_1_reg_611.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln44_fu_478_p2.read()))) {
        j7_0_reg_385 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        j7_0_reg_385 = j_2_reg_666.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        j_0_reg_328 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_0_reg_328 = j_reg_566.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln20_fu_396_p2.read(), ap_const_lv1_1))) {
        op2_assign_reg_339 = ap_const_lv6_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln49_fu_514_p2.read()))) {
        op2_assign_reg_339 = shift_fu_530_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        digit_V_reg_629 = digit_V_fu_463_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        digit_histogram_V_ad_1_reg_640 =  (sc_lv<4>) (zext_ln544_fu_467_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        digit_location_V_add_3_reg_687 =  (sc_lv<4>) (zext_ln544_3_fu_536_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        j_1_reg_611 = j_1_fu_447_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        j_2_reg_666 = j_2_fu_519_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        j_reg_566 = j_fu_401_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln20_fu_396_p2.read(), ap_const_lv1_0))) {
        zext_ln22_reg_571 = zext_ln22_fu_407_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        zext_ln26_reg_592 = zext_ln26_fu_413_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_fu_442_p2.read()))) {
        zext_ln36_reg_616 = zext_ln36_fu_453_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln49_fu_514_p2.read()))) {
        zext_ln51_reg_671 = zext_ln51_fu_525_p1.read();
    }
}

void sort::thread_add_ln209_fu_501_p2() {
    add_ln209_fu_501_p2 = (!digit_location_V_q0.read().is_01() || !digit_histogram_V_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(digit_location_V_q0.read()) + sc_biguint<32>(digit_histogram_V_q0.read()));
}

void sort::thread_add_ln46_fu_484_p2() {
    add_ln46_fu_484_p2 = (!i6_0_reg_373.read().is_01() || !ap_const_lv5_1F.is_01())? sc_lv<5>(): (sc_biguint<5>(i6_0_reg_373.read()) + sc_bigint<5>(ap_const_lv5_1F));
}

void sort::thread_add_ln700_3_fu_549_p2() {
    add_ln700_3_fu_549_p2 = (!digit_location_V_q0.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(digit_location_V_q0.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void sort::thread_add_ln700_fu_471_p2() {
    add_ln700_fu_471_p2 = (!ap_const_lv32_1.is_01() || !digit_histogram_V_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(digit_histogram_V_q0.read()));
}

void sort::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void sort::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void sort::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void sort::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void sort::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void sort::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void sort::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void sort::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void sort::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void sort::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void sort::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void sort::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void sort::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void sort::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void sort::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_417_p3.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void sort::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void sort::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_417_p3.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void sort::thread_current_digit_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        current_digit_V_address0 =  (sc_lv<8>) (zext_ln51_fu_525_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        current_digit_V_address0 =  (sc_lv<8>) (zext_ln36_reg_616.read());
    } else {
        current_digit_V_address0 = "XXXXXXXX";
    }
}

void sort::thread_current_digit_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        current_digit_V_ce0 = ap_const_logic_1;
    } else {
        current_digit_V_ce0 = ap_const_logic_0;
    }
}

void sort::thread_current_digit_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        current_digit_V_we0 = ap_const_logic_1;
    } else {
        current_digit_V_we0 = ap_const_logic_0;
    }
}

void sort::thread_digit_V_fu_463_p1() {
    digit_V_fu_463_p1 = lshr_ln1503_fu_458_p2.read().range(4-1, 0);
}

void sort::thread_digit_histogram_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        digit_histogram_V_address0 =  (sc_lv<4>) (zext_ln46_1_fu_490_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        digit_histogram_V_address0 = digit_histogram_V_ad_1_reg_640.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        digit_histogram_V_address0 =  (sc_lv<4>) (zext_ln544_fu_467_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        digit_histogram_V_address0 =  (sc_lv<4>) (zext_ln30_fu_437_p1.read());
    } else {
        digit_histogram_V_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void sort::thread_digit_histogram_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        digit_histogram_V_ce0 = ap_const_logic_1;
    } else {
        digit_histogram_V_ce0 = ap_const_logic_0;
    }
}

void sort::thread_digit_histogram_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        digit_histogram_V_d0 = add_ln700_fu_471_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        digit_histogram_V_d0 = ap_const_lv32_0;
    } else {
        digit_histogram_V_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sort::thread_digit_histogram_V_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln28_fu_425_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        digit_histogram_V_we0 = ap_const_logic_1;
    } else {
        digit_histogram_V_we0 = ap_const_logic_0;
    }
}

void sort::thread_digit_location_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        digit_location_V_address0 = digit_location_V_add_3_reg_687.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        digit_location_V_address0 =  (sc_lv<4>) (zext_ln544_3_fu_536_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        digit_location_V_address0 =  (sc_lv<4>) (zext_ln46_fu_496_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        digit_location_V_address0 =  (sc_lv<4>) (zext_ln46_1_fu_490_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        digit_location_V_address0 =  (sc_lv<4>) (ap_const_lv64_0);
    } else {
        digit_location_V_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void sort::thread_digit_location_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        digit_location_V_ce0 = ap_const_logic_1;
    } else {
        digit_location_V_ce0 = ap_const_logic_0;
    }
}

void sort::thread_digit_location_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        digit_location_V_d0 = add_ln700_3_fu_549_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        digit_location_V_d0 = add_ln209_fu_501_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        digit_location_V_d0 = ap_const_lv32_0;
    } else {
        digit_location_V_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sort::thread_digit_location_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln34_fu_442_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        digit_location_V_we0 = ap_const_logic_1;
    } else {
        digit_location_V_we0 = ap_const_logic_0;
    }
}

void sort::thread_i_3_fu_508_p2() {
    i_3_fu_508_p2 = (!i6_0_reg_373.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i6_0_reg_373.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void sort::thread_i_fu_431_p2() {
    i_fu_431_p2 = (!i_0_reg_351.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_0_reg_351.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void sort::thread_icmp_ln20_fu_396_p2() {
    icmp_ln20_fu_396_p2 = (!j_0_reg_328.read().is_01() || !num_symbols.read().is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_328.read() == num_symbols.read());
}

void sort::thread_icmp_ln28_fu_425_p2() {
    icmp_ln28_fu_425_p2 = (!i_0_reg_351.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_351.read() == ap_const_lv5_10);
}

void sort::thread_icmp_ln34_fu_442_p2() {
    icmp_ln34_fu_442_p2 = (!j5_0_reg_362.read().is_01() || !num_symbols.read().is_01())? sc_lv<1>(): sc_lv<1>(j5_0_reg_362.read() == num_symbols.read());
}

void sort::thread_icmp_ln44_fu_478_p2() {
    icmp_ln44_fu_478_p2 = (!i6_0_reg_373.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i6_0_reg_373.read() == ap_const_lv5_10);
}

void sort::thread_icmp_ln49_fu_514_p2() {
    icmp_ln49_fu_514_p2 = (!j7_0_reg_385.read().is_01() || !num_symbols.read().is_01())? sc_lv<1>(): sc_lv<1>(j7_0_reg_385.read() == num_symbols.read());
}

void sort::thread_in_frequency_V_address0() {
    in_frequency_V_address0 =  (sc_lv<8>) (zext_ln22_fu_407_p1.read());
}

void sort::thread_in_frequency_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        in_frequency_V_ce0 = ap_const_logic_1;
    } else {
        in_frequency_V_ce0 = ap_const_logic_0;
    }
}

void sort::thread_in_value_V_address0() {
    in_value_V_address0 =  (sc_lv<8>) (zext_ln22_fu_407_p1.read());
}

void sort::thread_in_value_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        in_value_V_ce0 = ap_const_logic_1;
    } else {
        in_value_V_ce0 = ap_const_logic_0;
    }
}

void sort::thread_j_1_fu_447_p2() {
    j_1_fu_447_p2 = (!j5_0_reg_362.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(j5_0_reg_362.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void sort::thread_j_2_fu_519_p2() {
    j_2_fu_519_p2 = (!j7_0_reg_385.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(j7_0_reg_385.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void sort::thread_j_fu_401_p2() {
    j_fu_401_p2 = (!j_0_reg_328.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(j_0_reg_328.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void sort::thread_lshr_ln1503_fu_458_p2() {
    lshr_ln1503_fu_458_p2 = (!zext_ln26_reg_592.read().is_01())? sc_lv<32>(): sorting_frequency_V_q0.read() >> (unsigned short)zext_ln26_reg_592.read().to_uint();
}

void sort::thread_out_frequency_V_address0() {
    out_frequency_V_address0 =  (sc_lv<8>) (zext_ln544_4_fu_541_p1.read());
}

void sort::thread_out_frequency_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        out_frequency_V_ce0 = ap_const_logic_1;
    } else {
        out_frequency_V_ce0 = ap_const_logic_0;
    }
}

void sort::thread_out_frequency_V_d0() {
    out_frequency_V_d0 = previous_sorting_fre_q0.read();
}

void sort::thread_out_frequency_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        out_frequency_V_we0 = ap_const_logic_1;
    } else {
        out_frequency_V_we0 = ap_const_logic_0;
    }
}

void sort::thread_out_value_V_address0() {
    out_value_V_address0 =  (sc_lv<8>) (zext_ln544_4_fu_541_p1.read());
}

void sort::thread_out_value_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        out_value_V_ce0 = ap_const_logic_1;
    } else {
        out_value_V_ce0 = ap_const_logic_0;
    }
}

void sort::thread_out_value_V_d0() {
    out_value_V_d0 = previous_sorting_val_q0.read();
}

void sort::thread_out_value_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        out_value_V_we0 = ap_const_logic_1;
    } else {
        out_value_V_we0 = ap_const_logic_0;
    }
}

void sort::thread_previous_sorting_fre_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        previous_sorting_fre_address0 =  (sc_lv<8>) (zext_ln51_reg_671.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        previous_sorting_fre_address0 =  (sc_lv<8>) (zext_ln36_reg_616.read());
    } else {
        previous_sorting_fre_address0 = "XXXXXXXX";
    }
}

void sort::thread_previous_sorting_fre_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        previous_sorting_fre_ce0 = ap_const_logic_1;
    } else {
        previous_sorting_fre_ce0 = ap_const_logic_0;
    }
}

void sort::thread_previous_sorting_fre_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        previous_sorting_fre_we0 = ap_const_logic_1;
    } else {
        previous_sorting_fre_we0 = ap_const_logic_0;
    }
}

void sort::thread_previous_sorting_val_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        previous_sorting_val_address0 =  (sc_lv<8>) (zext_ln51_reg_671.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        previous_sorting_val_address0 =  (sc_lv<8>) (zext_ln36_reg_616.read());
    } else {
        previous_sorting_val_address0 = "XXXXXXXX";
    }
}

void sort::thread_previous_sorting_val_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        previous_sorting_val_ce0 = ap_const_logic_1;
    } else {
        previous_sorting_val_ce0 = ap_const_logic_0;
    }
}

void sort::thread_previous_sorting_val_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        previous_sorting_val_we0 = ap_const_logic_1;
    } else {
        previous_sorting_val_we0 = ap_const_logic_0;
    }
}

void sort::thread_shift_fu_530_p2() {
    shift_fu_530_p2 = (!op2_assign_reg_339.read().is_01() || !ap_const_lv6_4.is_01())? sc_lv<6>(): (sc_biguint<6>(op2_assign_reg_339.read()) + sc_biguint<6>(ap_const_lv6_4));
}

void sort::thread_sorting_frequency_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        sorting_frequency_V_address0 =  (sc_lv<8>) (zext_ln544_4_fu_541_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        sorting_frequency_V_address0 =  (sc_lv<8>) (zext_ln36_fu_453_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        sorting_frequency_V_address0 =  (sc_lv<8>) (zext_ln22_reg_571.read());
    } else {
        sorting_frequency_V_address0 = "XXXXXXXX";
    }
}

void sort::thread_sorting_frequency_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        sorting_frequency_V_ce0 = ap_const_logic_1;
    } else {
        sorting_frequency_V_ce0 = ap_const_logic_0;
    }
}

void sort::thread_sorting_frequency_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        sorting_frequency_V_d0 = previous_sorting_fre_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        sorting_frequency_V_d0 = in_frequency_V_q0.read();
    } else {
        sorting_frequency_V_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sort::thread_sorting_frequency_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        sorting_frequency_V_we0 = ap_const_logic_1;
    } else {
        sorting_frequency_V_we0 = ap_const_logic_0;
    }
}

void sort::thread_sorting_value_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        sorting_value_V_address0 =  (sc_lv<8>) (zext_ln544_4_fu_541_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        sorting_value_V_address0 =  (sc_lv<8>) (zext_ln36_reg_616.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        sorting_value_V_address0 =  (sc_lv<8>) (zext_ln22_reg_571.read());
    } else {
        sorting_value_V_address0 = "XXXXXXXX";
    }
}

void sort::thread_sorting_value_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        sorting_value_V_ce0 = ap_const_logic_1;
    } else {
        sorting_value_V_ce0 = ap_const_logic_0;
    }
}

void sort::thread_sorting_value_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        sorting_value_V_d0 = previous_sorting_val_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        sorting_value_V_d0 = in_value_V_q0.read();
    } else {
        sorting_value_V_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void sort::thread_sorting_value_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        sorting_value_V_we0 = ap_const_logic_1;
    } else {
        sorting_value_V_we0 = ap_const_logic_0;
    }
}

void sort::thread_tmp_1_fu_417_p3() {
    tmp_1_fu_417_p3 = op2_assign_reg_339.read().range(5, 5);
}

void sort::thread_zext_ln22_fu_407_p1() {
    zext_ln22_fu_407_p1 = esl_zext<64,32>(j_0_reg_328.read());
}

void sort::thread_zext_ln26_fu_413_p1() {
    zext_ln26_fu_413_p1 = esl_zext<32,6>(op2_assign_reg_339.read());
}

void sort::thread_zext_ln30_fu_437_p1() {
    zext_ln30_fu_437_p1 = esl_zext<64,5>(i_0_reg_351.read());
}

void sort::thread_zext_ln36_fu_453_p1() {
    zext_ln36_fu_453_p1 = esl_zext<64,32>(j5_0_reg_362.read());
}

void sort::thread_zext_ln46_1_fu_490_p1() {
    zext_ln46_1_fu_490_p1 = esl_zext<64,5>(add_ln46_fu_484_p2.read());
}

void sort::thread_zext_ln46_fu_496_p1() {
    zext_ln46_fu_496_p1 = esl_zext<64,5>(i6_0_reg_373.read());
}

void sort::thread_zext_ln51_fu_525_p1() {
    zext_ln51_fu_525_p1 = esl_zext<64,32>(j7_0_reg_385.read());
}

void sort::thread_zext_ln544_3_fu_536_p1() {
    zext_ln544_3_fu_536_p1 = esl_zext<64,4>(current_digit_V_q0.read());
}

void sort::thread_zext_ln544_4_fu_541_p1() {
    zext_ln544_4_fu_541_p1 = esl_zext<64,32>(digit_location_V_q0.read());
}

void sort::thread_zext_ln544_fu_467_p1() {
    zext_ln544_fu_467_p1 = esl_zext<64,4>(digit_V_reg_629.read());
}

void sort::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln20_fu_396_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_1_fu_417_p3.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln28_fu_425_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln34_fu_442_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln44_fu_478_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln49_fu_514_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
            break;
    }
}

}

