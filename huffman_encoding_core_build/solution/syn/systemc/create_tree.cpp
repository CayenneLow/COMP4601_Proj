// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "create_tree.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic create_tree::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic create_tree::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> create_tree::ap_ST_fsm_state1 = "1";
const sc_lv<6> create_tree::ap_ST_fsm_state2 = "10";
const sc_lv<6> create_tree::ap_ST_fsm_state3 = "100";
const sc_lv<6> create_tree::ap_ST_fsm_state4 = "1000";
const sc_lv<6> create_tree::ap_ST_fsm_state5 = "10000";
const sc_lv<6> create_tree::ap_ST_fsm_state6 = "100000";
const sc_lv<32> create_tree::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> create_tree::ap_const_lv32_1 = "1";
const sc_lv<1> create_tree::ap_const_lv1_1 = "1";
const sc_lv<32> create_tree::ap_const_lv32_2 = "10";
const sc_lv<1> create_tree::ap_const_lv1_0 = "0";
const sc_lv<32> create_tree::ap_const_lv32_3 = "11";
const sc_lv<32> create_tree::ap_const_lv32_4 = "100";
const sc_lv<31> create_tree::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<32> create_tree::ap_const_lv32_5 = "101";
const sc_lv<32> create_tree::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<31> create_tree::ap_const_lv31_1 = "1";
const bool create_tree::ap_const_boolean_1 = true;

create_tree::create_tree(sc_module_name name) : sc_module(name), mVcdFile(0) {
    frequency_V_U = new create_tree_frequhbi("frequency_V_U");
    frequency_V_U->clk(ap_clk);
    frequency_V_U->reset(ap_rst);
    frequency_V_U->address0(frequency_V_address0);
    frequency_V_U->ce0(frequency_V_ce0);
    frequency_V_U->we0(frequency_V_we0);
    frequency_V_U->d0(frequency_V_d0);
    frequency_V_U->q0(frequency_V_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln15_fu_345_p2);
    sensitive << ( val_assign_loc_dout );

    SC_METHOD(thread_add_ln209_1_fu_470_p2);
    sensitive << ( frequency_V_q0 );
    sensitive << ( p_090_0_i_i_reg_306 );

    SC_METHOD(thread_add_ln209_fu_459_p2);
    sensitive << ( in_frequency_V_q0 );
    sensitive << ( p_090_0_i_i_reg_306 );

    SC_METHOD(thread_and_ln26_fu_392_p2);
    sensitive << ( grp_fu_339_p2 );
    sensitive << ( icmp_ln879_fu_387_p2 );

    SC_METHOD(thread_and_ln42_fu_448_p2);
    sensitive << ( grp_fu_339_p2 );
    sensitive << ( icmp_ln879_3_fu_443_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( val_assign_loc_empty_n );
    sensitive << ( val_assign_loc_out_full_n );

    SC_METHOD(thread_ap_condition_156);
    sensitive << ( icmp_ln887_1_reg_565 );
    sensitive << ( icmp_ln879_4_fu_438_p2 );
    sensitive << ( and_ln42_fu_448_p2 );

    SC_METHOD(thread_ap_condition_166);
    sensitive << ( icmp_ln887_1_reg_565 );
    sensitive << ( icmp_ln879_4_fu_438_p2 );
    sensitive << ( and_ln42_fu_448_p2 );

    SC_METHOD(thread_ap_condition_201);
    sensitive << ( icmp_ln887_fu_377_p2 );
    sensitive << ( icmp_ln879_2_fu_382_p2 );
    sensitive << ( and_ln26_fu_392_p2 );

    SC_METHOD(thread_ap_condition_208);
    sensitive << ( icmp_ln887_fu_377_p2 );
    sensitive << ( icmp_ln879_2_fu_382_p2 );
    sensitive << ( and_ln26_fu_392_p2 );

    SC_METHOD(thread_ap_condition_222);
    sensitive << ( icmp_ln15_reg_514 );
    sensitive << ( icmp_ln887_1_reg_565 );
    sensitive << ( icmp_ln879_4_reg_589 );
    sensitive << ( and_ln42_reg_593 );

    SC_METHOD(thread_ap_condition_229);
    sensitive << ( icmp_ln15_reg_514 );
    sensitive << ( icmp_ln887_1_reg_565 );
    sensitive << ( icmp_ln879_4_reg_589 );
    sensitive << ( and_ln42_reg_593 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_p_0168_2_i_i_phi_fu_319_p4);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( t_V_5_reg_284 );
    sensitive << ( tree_count_V_1_fu_483_p2 );
    sensitive << ( ap_condition_222 );
    sensitive << ( ap_condition_229 );

    SC_METHOD(thread_ap_phi_mux_p_094_2_i_i_phi_fu_331_p4);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( t_V_4_reg_295 );
    sensitive << ( in_count_V_1_fu_476_p2 );
    sensitive << ( ap_condition_222 );
    sensitive << ( ap_condition_229 );

    SC_METHOD(thread_ap_phi_mux_t_V_4_phi_fu_298_p4);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( t_V_reg_259 );
    sensitive << ( in_count_V_fu_403_p2 );
    sensitive << ( ap_condition_201 );
    sensitive << ( ap_condition_208 );

    SC_METHOD(thread_ap_phi_mux_t_V_5_phi_fu_287_p4);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( t_V_3_reg_247 );
    sensitive << ( tree_count_V_fu_415_p2 );
    sensitive << ( ap_condition_201 );
    sensitive << ( ap_condition_208 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_frequency_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln15_reg_514 );
    sensitive << ( zext_ln544_fu_366_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln887_1_reg_565 );
    sensitive << ( zext_ln544_5_fu_427_p1 );
    sensitive << ( icmp_ln879_4_reg_589 );
    sensitive << ( and_ln42_reg_593 );
    sensitive << ( zext_ln44_reg_597 );
    sensitive << ( zext_ln49_reg_607 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_frequency_V_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln15_reg_514 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln887_1_reg_565 );
    sensitive << ( icmp_ln879_4_reg_589 );
    sensitive << ( and_ln42_reg_593 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_frequency_V_d0);
    sensitive << ( add_ln209_reg_602 );
    sensitive << ( add_ln209_1_reg_612 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_condition_222 );
    sensitive << ( ap_condition_229 );

    SC_METHOD(thread_frequency_V_we0);
    sensitive << ( icmp_ln15_reg_514 );
    sensitive << ( icmp_ln887_1_reg_565 );
    sensitive << ( icmp_ln879_4_reg_589 );
    sensitive << ( and_ln42_reg_593 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_339_p2);
    sensitive << ( in_frequency_V_q0 );
    sensitive << ( icmp_ln887_fu_377_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( frequency_V_q0 );
    sensitive << ( icmp_ln887_1_reg_565 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_i_fu_360_p2);
    sensitive << ( op2_assign_reg_271 );

    SC_METHOD(thread_icmp_ln15_fu_355_p2);
    sensitive << ( add_ln15_reg_501 );
    sensitive << ( zext_ln15_fu_351_p1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_icmp_ln879_2_fu_382_p2);
    sensitive << ( zext_ln15_reg_506 );
    sensitive << ( icmp_ln887_fu_377_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( t_V_3_reg_247 );

    SC_METHOD(thread_icmp_ln879_3_fu_443_p2);
    sensitive << ( zext_ln15_reg_506 );
    sensitive << ( icmp_ln887_1_reg_565 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( t_V_5_reg_284 );

    SC_METHOD(thread_icmp_ln879_4_fu_438_p2);
    sensitive << ( zext_ln15_reg_506 );
    sensitive << ( icmp_ln887_1_reg_565 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( t_V_5_reg_284 );

    SC_METHOD(thread_icmp_ln879_fu_387_p2);
    sensitive << ( zext_ln15_reg_506 );
    sensitive << ( icmp_ln887_fu_377_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( t_V_3_reg_247 );

    SC_METHOD(thread_icmp_ln887_1_fu_422_p2);
    sensitive << ( val_assign_loc_read_reg_495 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_phi_mux_t_V_4_phi_fu_298_p4 );

    SC_METHOD(thread_icmp_ln887_fu_377_p2);
    sensitive << ( val_assign_loc_read_reg_495 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( t_V_reg_259 );

    SC_METHOD(thread_in_count_V_1_fu_476_p2);
    sensitive << ( t_V_4_reg_295 );

    SC_METHOD(thread_in_count_V_fu_403_p2);
    sensitive << ( t_V_reg_259 );

    SC_METHOD(thread_in_frequency_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln544_3_fu_371_p1 );
    sensitive << ( zext_ln544_6_fu_432_p1 );

    SC_METHOD(thread_in_frequency_V_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_in_value_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln544_3_fu_371_p1 );
    sensitive << ( zext_ln544_6_fu_432_p1 );

    SC_METHOD(thread_in_value_V_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_left_V_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln28_fu_398_p1 );
    sensitive << ( zext_ln33_fu_410_p1 );
    sensitive << ( ap_condition_201 );
    sensitive << ( ap_condition_208 );

    SC_METHOD(thread_left_V_ce0);
    sensitive << ( icmp_ln887_fu_377_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln879_2_fu_382_p2 );
    sensitive << ( and_ln26_fu_392_p2 );

    SC_METHOD(thread_left_V_d0);
    sensitive << ( in_value_V_q0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_condition_201 );
    sensitive << ( ap_condition_208 );

    SC_METHOD(thread_left_V_we0);
    sensitive << ( icmp_ln887_fu_377_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln879_2_fu_382_p2 );
    sensitive << ( and_ln26_fu_392_p2 );

    SC_METHOD(thread_parent_V_address0);
    sensitive << ( zext_ln544_reg_523 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln544_5_reg_569 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln544_4_fu_490_p1 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_parent_V_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_parent_V_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( op2_assign_reg_271 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_parent_V_we0);
    sensitive << ( icmp_ln887_fu_377_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln879_2_fu_382_p2 );
    sensitive << ( and_ln26_fu_392_p2 );
    sensitive << ( icmp_ln887_1_reg_565 );
    sensitive << ( icmp_ln879_4_fu_438_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( and_ln42_fu_448_p2 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_right_V_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln44_fu_454_p1 );
    sensitive << ( zext_ln49_fu_465_p1 );
    sensitive << ( ap_condition_156 );
    sensitive << ( ap_condition_166 );

    SC_METHOD(thread_right_V_ce0);
    sensitive << ( icmp_ln887_1_reg_565 );
    sensitive << ( icmp_ln879_4_fu_438_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( and_ln42_fu_448_p2 );

    SC_METHOD(thread_right_V_d0);
    sensitive << ( in_value_V_q0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_condition_156 );
    sensitive << ( ap_condition_166 );

    SC_METHOD(thread_right_V_we0);
    sensitive << ( icmp_ln887_1_reg_565 );
    sensitive << ( icmp_ln879_4_fu_438_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( and_ln42_fu_448_p2 );

    SC_METHOD(thread_tree_count_V_1_fu_483_p2);
    sensitive << ( t_V_5_reg_284 );

    SC_METHOD(thread_tree_count_V_fu_415_p2);
    sensitive << ( t_V_3_reg_247 );

    SC_METHOD(thread_val_assign_loc_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( val_assign_loc_empty_n );

    SC_METHOD(thread_val_assign_loc_out_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( val_assign_loc_out_full_n );

    SC_METHOD(thread_val_assign_loc_out_din);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( val_assign_loc_dout );
    sensitive << ( val_assign_loc_empty_n );
    sensitive << ( val_assign_loc_out_full_n );

    SC_METHOD(thread_val_assign_loc_out_write);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( val_assign_loc_empty_n );
    sensitive << ( val_assign_loc_out_full_n );

    SC_METHOD(thread_val_assign_loc_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( val_assign_loc_empty_n );
    sensitive << ( val_assign_loc_out_full_n );

    SC_METHOD(thread_zext_ln15_fu_351_p1);
    sensitive << ( op2_assign_reg_271 );

    SC_METHOD(thread_zext_ln28_fu_398_p1);
    sensitive << ( op2_assign_reg_271 );

    SC_METHOD(thread_zext_ln33_fu_410_p1);
    sensitive << ( op2_assign_reg_271 );

    SC_METHOD(thread_zext_ln44_fu_454_p1);
    sensitive << ( op2_assign_reg_271 );

    SC_METHOD(thread_zext_ln49_fu_465_p1);
    sensitive << ( op2_assign_reg_271 );

    SC_METHOD(thread_zext_ln544_3_fu_371_p1);
    sensitive << ( t_V_reg_259 );

    SC_METHOD(thread_zext_ln544_4_fu_490_p1);
    sensitive << ( t_V_3_reg_247 );

    SC_METHOD(thread_zext_ln544_5_fu_427_p1);
    sensitive << ( ap_phi_mux_t_V_5_phi_fu_287_p4 );

    SC_METHOD(thread_zext_ln544_6_fu_432_p1);
    sensitive << ( ap_phi_mux_t_V_4_phi_fu_298_p4 );

    SC_METHOD(thread_zext_ln544_fu_366_p1);
    sensitive << ( t_V_3_reg_247 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( val_assign_loc_empty_n );
    sensitive << ( val_assign_loc_out_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln15_fu_355_p2 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "create_tree_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_value_V_address0, "(port)in_value_V_address0");
    sc_trace(mVcdFile, in_value_V_ce0, "(port)in_value_V_ce0");
    sc_trace(mVcdFile, in_value_V_q0, "(port)in_value_V_q0");
    sc_trace(mVcdFile, in_frequency_V_address0, "(port)in_frequency_V_address0");
    sc_trace(mVcdFile, in_frequency_V_ce0, "(port)in_frequency_V_ce0");
    sc_trace(mVcdFile, in_frequency_V_q0, "(port)in_frequency_V_q0");
    sc_trace(mVcdFile, val_assign_loc_dout, "(port)val_assign_loc_dout");
    sc_trace(mVcdFile, val_assign_loc_empty_n, "(port)val_assign_loc_empty_n");
    sc_trace(mVcdFile, val_assign_loc_read, "(port)val_assign_loc_read");
    sc_trace(mVcdFile, parent_V_address0, "(port)parent_V_address0");
    sc_trace(mVcdFile, parent_V_ce0, "(port)parent_V_ce0");
    sc_trace(mVcdFile, parent_V_we0, "(port)parent_V_we0");
    sc_trace(mVcdFile, parent_V_d0, "(port)parent_V_d0");
    sc_trace(mVcdFile, left_V_address0, "(port)left_V_address0");
    sc_trace(mVcdFile, left_V_ce0, "(port)left_V_ce0");
    sc_trace(mVcdFile, left_V_we0, "(port)left_V_we0");
    sc_trace(mVcdFile, left_V_d0, "(port)left_V_d0");
    sc_trace(mVcdFile, right_V_address0, "(port)right_V_address0");
    sc_trace(mVcdFile, right_V_ce0, "(port)right_V_ce0");
    sc_trace(mVcdFile, right_V_we0, "(port)right_V_we0");
    sc_trace(mVcdFile, right_V_d0, "(port)right_V_d0");
    sc_trace(mVcdFile, val_assign_loc_out_din, "(port)val_assign_loc_out_din");
    sc_trace(mVcdFile, val_assign_loc_out_full_n, "(port)val_assign_loc_out_full_n");
    sc_trace(mVcdFile, val_assign_loc_out_write, "(port)val_assign_loc_out_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, val_assign_loc_blk_n, "val_assign_loc_blk_n");
    sc_trace(mVcdFile, val_assign_loc_out_blk_n, "val_assign_loc_out_blk_n");
    sc_trace(mVcdFile, val_assign_loc_read_reg_495, "val_assign_loc_read_reg_495");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, add_ln15_fu_345_p2, "add_ln15_fu_345_p2");
    sc_trace(mVcdFile, add_ln15_reg_501, "add_ln15_reg_501");
    sc_trace(mVcdFile, zext_ln15_fu_351_p1, "zext_ln15_fu_351_p1");
    sc_trace(mVcdFile, zext_ln15_reg_506, "zext_ln15_reg_506");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln15_fu_355_p2, "icmp_ln15_fu_355_p2");
    sc_trace(mVcdFile, icmp_ln15_reg_514, "icmp_ln15_reg_514");
    sc_trace(mVcdFile, i_fu_360_p2, "i_fu_360_p2");
    sc_trace(mVcdFile, i_reg_518, "i_reg_518");
    sc_trace(mVcdFile, zext_ln544_fu_366_p1, "zext_ln544_fu_366_p1");
    sc_trace(mVcdFile, zext_ln544_reg_523, "zext_ln544_reg_523");
    sc_trace(mVcdFile, icmp_ln887_fu_377_p2, "icmp_ln887_fu_377_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, frequency_V_q0, "frequency_V_q0");
    sc_trace(mVcdFile, icmp_ln879_2_fu_382_p2, "icmp_ln879_2_fu_382_p2");
    sc_trace(mVcdFile, and_ln26_fu_392_p2, "and_ln26_fu_392_p2");
    sc_trace(mVcdFile, icmp_ln887_1_fu_422_p2, "icmp_ln887_1_fu_422_p2");
    sc_trace(mVcdFile, icmp_ln887_1_reg_565, "icmp_ln887_1_reg_565");
    sc_trace(mVcdFile, zext_ln544_5_fu_427_p1, "zext_ln544_5_fu_427_p1");
    sc_trace(mVcdFile, zext_ln544_5_reg_569, "zext_ln544_5_reg_569");
    sc_trace(mVcdFile, icmp_ln879_4_fu_438_p2, "icmp_ln879_4_fu_438_p2");
    sc_trace(mVcdFile, icmp_ln879_4_reg_589, "icmp_ln879_4_reg_589");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, and_ln42_fu_448_p2, "and_ln42_fu_448_p2");
    sc_trace(mVcdFile, and_ln42_reg_593, "and_ln42_reg_593");
    sc_trace(mVcdFile, zext_ln44_fu_454_p1, "zext_ln44_fu_454_p1");
    sc_trace(mVcdFile, zext_ln44_reg_597, "zext_ln44_reg_597");
    sc_trace(mVcdFile, add_ln209_fu_459_p2, "add_ln209_fu_459_p2");
    sc_trace(mVcdFile, add_ln209_reg_602, "add_ln209_reg_602");
    sc_trace(mVcdFile, zext_ln49_fu_465_p1, "zext_ln49_fu_465_p1");
    sc_trace(mVcdFile, zext_ln49_reg_607, "zext_ln49_reg_607");
    sc_trace(mVcdFile, add_ln209_1_fu_470_p2, "add_ln209_1_fu_470_p2");
    sc_trace(mVcdFile, add_ln209_1_reg_612, "add_ln209_1_reg_612");
    sc_trace(mVcdFile, frequency_V_address0, "frequency_V_address0");
    sc_trace(mVcdFile, frequency_V_ce0, "frequency_V_ce0");
    sc_trace(mVcdFile, frequency_V_we0, "frequency_V_we0");
    sc_trace(mVcdFile, frequency_V_d0, "frequency_V_d0");
    sc_trace(mVcdFile, t_V_3_reg_247, "t_V_3_reg_247");
    sc_trace(mVcdFile, ap_phi_mux_p_0168_2_i_i_phi_fu_319_p4, "ap_phi_mux_p_0168_2_i_i_phi_fu_319_p4");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, t_V_reg_259, "t_V_reg_259");
    sc_trace(mVcdFile, ap_phi_mux_p_094_2_i_i_phi_fu_331_p4, "ap_phi_mux_p_094_2_i_i_phi_fu_331_p4");
    sc_trace(mVcdFile, op2_assign_reg_271, "op2_assign_reg_271");
    sc_trace(mVcdFile, ap_phi_mux_t_V_5_phi_fu_287_p4, "ap_phi_mux_t_V_5_phi_fu_287_p4");
    sc_trace(mVcdFile, t_V_5_reg_284, "t_V_5_reg_284");
    sc_trace(mVcdFile, tree_count_V_fu_415_p2, "tree_count_V_fu_415_p2");
    sc_trace(mVcdFile, in_count_V_fu_403_p2, "in_count_V_fu_403_p2");
    sc_trace(mVcdFile, ap_phi_mux_t_V_4_phi_fu_298_p4, "ap_phi_mux_t_V_4_phi_fu_298_p4");
    sc_trace(mVcdFile, t_V_4_reg_295, "t_V_4_reg_295");
    sc_trace(mVcdFile, p_090_0_i_i_reg_306, "p_090_0_i_i_reg_306");
    sc_trace(mVcdFile, tree_count_V_1_fu_483_p2, "tree_count_V_1_fu_483_p2");
    sc_trace(mVcdFile, in_count_V_1_fu_476_p2, "in_count_V_1_fu_476_p2");
    sc_trace(mVcdFile, zext_ln544_3_fu_371_p1, "zext_ln544_3_fu_371_p1");
    sc_trace(mVcdFile, zext_ln28_fu_398_p1, "zext_ln28_fu_398_p1");
    sc_trace(mVcdFile, zext_ln33_fu_410_p1, "zext_ln33_fu_410_p1");
    sc_trace(mVcdFile, zext_ln544_6_fu_432_p1, "zext_ln544_6_fu_432_p1");
    sc_trace(mVcdFile, zext_ln544_4_fu_490_p1, "zext_ln544_4_fu_490_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, grp_fu_339_p2, "grp_fu_339_p2");
    sc_trace(mVcdFile, icmp_ln879_fu_387_p2, "icmp_ln879_fu_387_p2");
    sc_trace(mVcdFile, icmp_ln879_3_fu_443_p2, "icmp_ln879_3_fu_443_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_condition_222, "ap_condition_222");
    sc_trace(mVcdFile, ap_condition_229, "ap_condition_229");
    sc_trace(mVcdFile, ap_condition_201, "ap_condition_201");
    sc_trace(mVcdFile, ap_condition_208, "ap_condition_208");
    sc_trace(mVcdFile, ap_condition_156, "ap_condition_156");
    sc_trace(mVcdFile, ap_condition_166, "ap_condition_166");
#endif

    }
}

create_tree::~create_tree() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete frequency_V_U;
}

void create_tree::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(icmp_ln15_reg_514.read(), ap_const_lv1_1))) {
        op2_assign_reg_271 = i_reg_518.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, val_assign_loc_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, val_assign_loc_out_full_n.read())))) {
        op2_assign_reg_271 = ap_const_lv31_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        if (esl_seteq<1,1,1>(ap_condition_208.read(), ap_const_boolean_1)) {
            p_090_0_i_i_reg_306 = frequency_V_q0.read();
        } else if (esl_seteq<1,1,1>(ap_condition_201.read(), ap_const_boolean_1)) {
            p_090_0_i_i_reg_306 = in_frequency_V_q0.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(icmp_ln15_reg_514.read(), ap_const_lv1_1))) {
        t_V_3_reg_247 = ap_phi_mux_p_0168_2_i_i_phi_fu_319_p4.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, val_assign_loc_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, val_assign_loc_out_full_n.read())))) {
        t_V_3_reg_247 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        if (esl_seteq<1,1,1>(ap_condition_208.read(), ap_const_boolean_1)) {
            t_V_4_reg_295 = t_V_reg_259.read();
        } else if (esl_seteq<1,1,1>(ap_condition_201.read(), ap_const_boolean_1)) {
            t_V_4_reg_295 = in_count_V_fu_403_p2.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        if (esl_seteq<1,1,1>(ap_condition_208.read(), ap_const_boolean_1)) {
            t_V_5_reg_284 = tree_count_V_fu_415_p2.read();
        } else if (esl_seteq<1,1,1>(ap_condition_201.read(), ap_const_boolean_1)) {
            t_V_5_reg_284 = t_V_3_reg_247.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(icmp_ln15_reg_514.read(), ap_const_lv1_1))) {
        t_V_reg_259 = ap_phi_mux_p_094_2_i_i_phi_fu_331_p4.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, val_assign_loc_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, val_assign_loc_out_full_n.read())))) {
        t_V_reg_259 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, val_assign_loc_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, val_assign_loc_out_full_n.read())))) {
        add_ln15_reg_501 = add_ln15_fu_345_p2.read();
        val_assign_loc_read_reg_495 = val_assign_loc_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_1_reg_565.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_1, and_ln42_fu_448_p2.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln887_1_reg_565.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln879_4_fu_438_p2.read()))))) {
        add_ln209_1_reg_612 = add_ln209_1_fu_470_p2.read();
        zext_ln49_reg_607 = zext_ln49_fu_465_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_1_reg_565.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, and_ln42_fu_448_p2.read())) || 
  (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln887_1_reg_565.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln879_4_fu_438_p2.read()))))) {
        add_ln209_reg_602 = add_ln209_fu_459_p2.read();
        zext_ln44_reg_597 = zext_ln44_fu_454_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_1_reg_565.read()))) {
        and_ln42_reg_593 = and_ln42_fu_448_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_518 = i_fu_360_p2.read();
        icmp_ln15_reg_514 = icmp_ln15_fu_355_p2.read();
        zext_ln15_reg_506 = zext_ln15_fu_351_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln887_1_reg_565.read()))) {
        icmp_ln879_4_reg_589 = icmp_ln879_4_fu_438_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        icmp_ln887_1_reg_565 = icmp_ln887_1_fu_422_p2.read();
        zext_ln544_5_reg_569 = zext_ln544_5_fu_427_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln15_fu_355_p2.read(), ap_const_lv1_1))) {
        zext_ln544_reg_523 = zext_ln544_fu_366_p1.read();
    }
}

void create_tree::thread_add_ln15_fu_345_p2() {
    add_ln15_fu_345_p2 = (!val_assign_loc_dout.read().is_01() || !ap_const_lv32_FFFFFFFF.is_01())? sc_lv<32>(): (sc_biguint<32>(val_assign_loc_dout.read()) + sc_bigint<32>(ap_const_lv32_FFFFFFFF));
}

void create_tree::thread_add_ln209_1_fu_470_p2() {
    add_ln209_1_fu_470_p2 = (!frequency_V_q0.read().is_01() || !p_090_0_i_i_reg_306.read().is_01())? sc_lv<32>(): (sc_biguint<32>(frequency_V_q0.read()) + sc_biguint<32>(p_090_0_i_i_reg_306.read()));
}

void create_tree::thread_add_ln209_fu_459_p2() {
    add_ln209_fu_459_p2 = (!in_frequency_V_q0.read().is_01() || !p_090_0_i_i_reg_306.read().is_01())? sc_lv<32>(): (sc_biguint<32>(in_frequency_V_q0.read()) + sc_biguint<32>(p_090_0_i_i_reg_306.read()));
}

void create_tree::thread_and_ln26_fu_392_p2() {
    and_ln26_fu_392_p2 = (grp_fu_339_p2.read() & icmp_ln879_fu_387_p2.read());
}

void create_tree::thread_and_ln42_fu_448_p2() {
    and_ln42_fu_448_p2 = (grp_fu_339_p2.read() & icmp_ln879_3_fu_443_p2.read());
}

void create_tree::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void create_tree::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void create_tree::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void create_tree::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void create_tree::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void create_tree::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void create_tree::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, val_assign_loc_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, val_assign_loc_out_full_n.read()));
}

void create_tree::thread_ap_condition_156() {
    ap_condition_156 = ((esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_1_reg_565.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, and_ln42_fu_448_p2.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln887_1_reg_565.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln879_4_fu_438_p2.read())));
}

void create_tree::thread_ap_condition_166() {
    ap_condition_166 = ((esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_1_reg_565.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, and_ln42_fu_448_p2.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln887_1_reg_565.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln879_4_fu_438_p2.read())));
}

void create_tree::thread_ap_condition_201() {
    ap_condition_201 = ((esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_fu_377_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, and_ln26_fu_392_p2.read())) || (esl_seteq<1,1,1>(icmp_ln887_fu_377_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln879_2_fu_382_p2.read())));
}

void create_tree::thread_ap_condition_208() {
    ap_condition_208 = ((esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_fu_377_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, and_ln26_fu_392_p2.read())) || (esl_seteq<1,1,1>(icmp_ln887_fu_377_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(icmp_ln879_2_fu_382_p2.read(), ap_const_lv1_0)));
}

void create_tree::thread_ap_condition_222() {
    ap_condition_222 = ((esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_1_reg_565.read()) && 
  esl_seteq<1,1,1>(icmp_ln15_reg_514.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, and_ln42_reg_593.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln887_1_reg_565.read()) && 
  esl_seteq<1,1,1>(icmp_ln15_reg_514.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln879_4_reg_589.read())));
}

void create_tree::thread_ap_condition_229() {
    ap_condition_229 = ((esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_1_reg_565.read()) && 
  esl_seteq<1,1,1>(icmp_ln15_reg_514.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, and_ln42_reg_593.read())) || (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln887_1_reg_565.read()) && 
  esl_seteq<1,1,1>(icmp_ln15_reg_514.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln879_4_reg_589.read())));
}

void create_tree::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void create_tree::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void create_tree::thread_ap_phi_mux_p_0168_2_i_i_phi_fu_319_p4() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        if (esl_seteq<1,1,1>(ap_condition_229.read(), ap_const_boolean_1)) {
            ap_phi_mux_p_0168_2_i_i_phi_fu_319_p4 = tree_count_V_1_fu_483_p2.read();
        } else if (esl_seteq<1,1,1>(ap_condition_222.read(), ap_const_boolean_1)) {
            ap_phi_mux_p_0168_2_i_i_phi_fu_319_p4 = t_V_5_reg_284.read();
        } else {
            ap_phi_mux_p_0168_2_i_i_phi_fu_319_p4 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        ap_phi_mux_p_0168_2_i_i_phi_fu_319_p4 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void create_tree::thread_ap_phi_mux_p_094_2_i_i_phi_fu_331_p4() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        if (esl_seteq<1,1,1>(ap_condition_229.read(), ap_const_boolean_1)) {
            ap_phi_mux_p_094_2_i_i_phi_fu_331_p4 = t_V_4_reg_295.read();
        } else if (esl_seteq<1,1,1>(ap_condition_222.read(), ap_const_boolean_1)) {
            ap_phi_mux_p_094_2_i_i_phi_fu_331_p4 = in_count_V_1_fu_476_p2.read();
        } else {
            ap_phi_mux_p_094_2_i_i_phi_fu_331_p4 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        ap_phi_mux_p_094_2_i_i_phi_fu_331_p4 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void create_tree::thread_ap_phi_mux_t_V_4_phi_fu_298_p4() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        if (esl_seteq<1,1,1>(ap_condition_208.read(), ap_const_boolean_1)) {
            ap_phi_mux_t_V_4_phi_fu_298_p4 = t_V_reg_259.read();
        } else if (esl_seteq<1,1,1>(ap_condition_201.read(), ap_const_boolean_1)) {
            ap_phi_mux_t_V_4_phi_fu_298_p4 = in_count_V_fu_403_p2.read();
        } else {
            ap_phi_mux_t_V_4_phi_fu_298_p4 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        ap_phi_mux_t_V_4_phi_fu_298_p4 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void create_tree::thread_ap_phi_mux_t_V_5_phi_fu_287_p4() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        if (esl_seteq<1,1,1>(ap_condition_208.read(), ap_const_boolean_1)) {
            ap_phi_mux_t_V_5_phi_fu_287_p4 = tree_count_V_fu_415_p2.read();
        } else if (esl_seteq<1,1,1>(ap_condition_201.read(), ap_const_boolean_1)) {
            ap_phi_mux_t_V_5_phi_fu_287_p4 = t_V_3_reg_247.read();
        } else {
            ap_phi_mux_t_V_5_phi_fu_287_p4 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        ap_phi_mux_t_V_5_phi_fu_287_p4 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void create_tree::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void create_tree::thread_frequency_V_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         ((esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_1_reg_565.read()) && 
           esl_seteq<1,1,1>(icmp_ln15_reg_514.read(), ap_const_lv1_1) && 
           esl_seteq<1,1,1>(ap_const_lv1_1, and_ln42_reg_593.read())) || 
          (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln887_1_reg_565.read()) && 
           esl_seteq<1,1,1>(icmp_ln15_reg_514.read(), ap_const_lv1_1) && 
           esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln879_4_reg_589.read()))))) {
        frequency_V_address0 =  (sc_lv<8>) (zext_ln49_reg_607.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                ((esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_1_reg_565.read()) && 
                  esl_seteq<1,1,1>(icmp_ln15_reg_514.read(), ap_const_lv1_1) && 
                  esl_seteq<1,1,1>(ap_const_lv1_0, and_ln42_reg_593.read())) || 
                 (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln887_1_reg_565.read()) && 
                  esl_seteq<1,1,1>(icmp_ln15_reg_514.read(), ap_const_lv1_1) && 
                  esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln879_4_reg_589.read()))))) {
        frequency_V_address0 =  (sc_lv<8>) (zext_ln44_reg_597.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        frequency_V_address0 =  (sc_lv<8>) (zext_ln544_5_fu_427_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        frequency_V_address0 =  (sc_lv<8>) (zext_ln544_fu_366_p1.read());
    } else {
        frequency_V_address0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void create_tree::thread_frequency_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_1_reg_565.read()) && 
            esl_seteq<1,1,1>(icmp_ln15_reg_514.read(), ap_const_lv1_1) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, and_ln42_reg_593.read())) || 
           (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln887_1_reg_565.read()) && 
            esl_seteq<1,1,1>(icmp_ln15_reg_514.read(), ap_const_lv1_1) && 
            esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln879_4_reg_589.read())))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_1_reg_565.read()) && 
            esl_seteq<1,1,1>(icmp_ln15_reg_514.read(), ap_const_lv1_1) && 
            esl_seteq<1,1,1>(ap_const_lv1_1, and_ln42_reg_593.read())) || 
           (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln887_1_reg_565.read()) && 
            esl_seteq<1,1,1>(icmp_ln15_reg_514.read(), ap_const_lv1_1) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln879_4_reg_589.read())))))) {
        frequency_V_ce0 = ap_const_logic_1;
    } else {
        frequency_V_ce0 = ap_const_logic_0;
    }
}

void create_tree::thread_frequency_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        if (esl_seteq<1,1,1>(ap_condition_229.read(), ap_const_boolean_1)) {
            frequency_V_d0 = add_ln209_1_reg_612.read();
        } else if (esl_seteq<1,1,1>(ap_condition_222.read(), ap_const_boolean_1)) {
            frequency_V_d0 = add_ln209_reg_602.read();
        } else {
            frequency_V_d0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        frequency_V_d0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void create_tree::thread_frequency_V_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_1_reg_565.read()) && 
            esl_seteq<1,1,1>(icmp_ln15_reg_514.read(), ap_const_lv1_1) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, and_ln42_reg_593.read())) || 
           (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln887_1_reg_565.read()) && 
            esl_seteq<1,1,1>(icmp_ln15_reg_514.read(), ap_const_lv1_1) && 
            esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln879_4_reg_589.read())))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_1_reg_565.read()) && 
            esl_seteq<1,1,1>(icmp_ln15_reg_514.read(), ap_const_lv1_1) && 
            esl_seteq<1,1,1>(ap_const_lv1_1, and_ln42_reg_593.read())) || 
           (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln887_1_reg_565.read()) && 
            esl_seteq<1,1,1>(icmp_ln15_reg_514.read(), ap_const_lv1_1) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln879_4_reg_589.read())))))) {
        frequency_V_we0 = ap_const_logic_1;
    } else {
        frequency_V_we0 = ap_const_logic_0;
    }
}

void create_tree::thread_grp_fu_339_p2() {
    grp_fu_339_p2 = (!frequency_V_q0.read().is_01() || !in_frequency_V_q0.read().is_01())? sc_lv<1>(): (sc_biguint<32>(frequency_V_q0.read()) < sc_biguint<32>(in_frequency_V_q0.read()));
}

void create_tree::thread_i_fu_360_p2() {
    i_fu_360_p2 = (!op2_assign_reg_271.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(op2_assign_reg_271.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void create_tree::thread_icmp_ln15_fu_355_p2() {
    icmp_ln15_fu_355_p2 = (!zext_ln15_fu_351_p1.read().is_01() || !add_ln15_reg_501.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln15_fu_351_p1.read()) < sc_bigint<32>(add_ln15_reg_501.read()));
}

void create_tree::thread_icmp_ln879_2_fu_382_p2() {
    icmp_ln879_2_fu_382_p2 = (!t_V_3_reg_247.read().is_01() || !zext_ln15_reg_506.read().is_01())? sc_lv<1>(): sc_lv<1>(t_V_3_reg_247.read() == zext_ln15_reg_506.read());
}

void create_tree::thread_icmp_ln879_3_fu_443_p2() {
    icmp_ln879_3_fu_443_p2 = (!t_V_5_reg_284.read().is_01() || !zext_ln15_reg_506.read().is_01())? sc_lv<1>(): sc_lv<1>(t_V_5_reg_284.read() != zext_ln15_reg_506.read());
}

void create_tree::thread_icmp_ln879_4_fu_438_p2() {
    icmp_ln879_4_fu_438_p2 = (!t_V_5_reg_284.read().is_01() || !zext_ln15_reg_506.read().is_01())? sc_lv<1>(): sc_lv<1>(t_V_5_reg_284.read() == zext_ln15_reg_506.read());
}

void create_tree::thread_icmp_ln879_fu_387_p2() {
    icmp_ln879_fu_387_p2 = (!t_V_3_reg_247.read().is_01() || !zext_ln15_reg_506.read().is_01())? sc_lv<1>(): sc_lv<1>(t_V_3_reg_247.read() != zext_ln15_reg_506.read());
}

void create_tree::thread_icmp_ln887_1_fu_422_p2() {
    icmp_ln887_1_fu_422_p2 = (!ap_phi_mux_t_V_4_phi_fu_298_p4.read().is_01() || !val_assign_loc_read_reg_495.read().is_01())? sc_lv<1>(): (sc_biguint<32>(ap_phi_mux_t_V_4_phi_fu_298_p4.read()) < sc_biguint<32>(val_assign_loc_read_reg_495.read()));
}

void create_tree::thread_icmp_ln887_fu_377_p2() {
    icmp_ln887_fu_377_p2 = (!t_V_reg_259.read().is_01() || !val_assign_loc_read_reg_495.read().is_01())? sc_lv<1>(): (sc_biguint<32>(t_V_reg_259.read()) < sc_biguint<32>(val_assign_loc_read_reg_495.read()));
}

void create_tree::thread_in_count_V_1_fu_476_p2() {
    in_count_V_1_fu_476_p2 = (!t_V_4_reg_295.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(t_V_4_reg_295.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void create_tree::thread_in_count_V_fu_403_p2() {
    in_count_V_fu_403_p2 = (!t_V_reg_259.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(t_V_reg_259.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void create_tree::thread_in_frequency_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        in_frequency_V_address0 =  (sc_lv<8>) (zext_ln544_6_fu_432_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        in_frequency_V_address0 =  (sc_lv<8>) (zext_ln544_3_fu_371_p1.read());
    } else {
        in_frequency_V_address0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void create_tree::thread_in_frequency_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        in_frequency_V_ce0 = ap_const_logic_1;
    } else {
        in_frequency_V_ce0 = ap_const_logic_0;
    }
}

void create_tree::thread_in_value_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        in_value_V_address0 =  (sc_lv<8>) (zext_ln544_6_fu_432_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        in_value_V_address0 =  (sc_lv<8>) (zext_ln544_3_fu_371_p1.read());
    } else {
        in_value_V_address0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void create_tree::thread_in_value_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        in_value_V_ce0 = ap_const_logic_1;
    } else {
        in_value_V_ce0 = ap_const_logic_0;
    }
}

void create_tree::thread_left_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        if (esl_seteq<1,1,1>(ap_condition_208.read(), ap_const_boolean_1)) {
            left_V_address0 =  (sc_lv<8>) (zext_ln33_fu_410_p1.read());
        } else if (esl_seteq<1,1,1>(ap_condition_201.read(), ap_const_boolean_1)) {
            left_V_address0 =  (sc_lv<8>) (zext_ln28_fu_398_p1.read());
        } else {
            left_V_address0 =  (sc_lv<8>) ("XXXXXXXX");
        }
    } else {
        left_V_address0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void create_tree::thread_left_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_fu_377_p2.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, and_ln26_fu_392_p2.read())) || 
           (esl_seteq<1,1,1>(icmp_ln887_fu_377_p2.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln879_2_fu_382_p2.read())))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_fu_377_p2.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_1, and_ln26_fu_392_p2.read())) || 
           (esl_seteq<1,1,1>(icmp_ln887_fu_377_p2.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(icmp_ln879_2_fu_382_p2.read(), ap_const_lv1_0)))))) {
        left_V_ce0 = ap_const_logic_1;
    } else {
        left_V_ce0 = ap_const_logic_0;
    }
}

void create_tree::thread_left_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        if (esl_seteq<1,1,1>(ap_condition_208.read(), ap_const_boolean_1)) {
            left_V_d0 = ap_const_lv32_FFFFFFFF;
        } else if (esl_seteq<1,1,1>(ap_condition_201.read(), ap_const_boolean_1)) {
            left_V_d0 = in_value_V_q0.read();
        } else {
            left_V_d0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        left_V_d0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void create_tree::thread_left_V_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_fu_377_p2.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, and_ln26_fu_392_p2.read())) || 
           (esl_seteq<1,1,1>(icmp_ln887_fu_377_p2.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln879_2_fu_382_p2.read())))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_fu_377_p2.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_1, and_ln26_fu_392_p2.read())) || 
           (esl_seteq<1,1,1>(icmp_ln887_fu_377_p2.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(icmp_ln879_2_fu_382_p2.read(), ap_const_lv1_0)))))) {
        left_V_we0 = ap_const_logic_1;
    } else {
        left_V_we0 = ap_const_logic_0;
    }
}

void create_tree::thread_parent_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        parent_V_address0 =  (sc_lv<8>) (zext_ln544_4_fu_490_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        parent_V_address0 =  (sc_lv<8>) (zext_ln544_5_reg_569.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        parent_V_address0 =  (sc_lv<8>) (zext_ln544_reg_523.read());
    } else {
        parent_V_address0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void create_tree::thread_parent_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        parent_V_ce0 = ap_const_logic_1;
    } else {
        parent_V_ce0 = ap_const_logic_0;
    }
}

void create_tree::thread_parent_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        parent_V_d0 = ap_const_lv31_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        parent_V_d0 = op2_assign_reg_271.read();
    } else {
        parent_V_d0 =  (sc_lv<31>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void create_tree::thread_parent_V_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_1_reg_565.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_1, and_ln42_fu_448_p2.read())) || 
           (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln887_1_reg_565.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln879_4_fu_438_p2.read())))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_fu_377_p2.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_1, and_ln26_fu_392_p2.read())) || 
           (esl_seteq<1,1,1>(icmp_ln887_fu_377_p2.read(), ap_const_lv1_0) && 
            esl_seteq<1,1,1>(icmp_ln879_2_fu_382_p2.read(), ap_const_lv1_0)))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        parent_V_we0 = ap_const_logic_1;
    } else {
        parent_V_we0 = ap_const_logic_0;
    }
}

void create_tree::thread_right_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        if (esl_seteq<1,1,1>(ap_condition_166.read(), ap_const_boolean_1)) {
            right_V_address0 =  (sc_lv<8>) (zext_ln49_fu_465_p1.read());
        } else if (esl_seteq<1,1,1>(ap_condition_156.read(), ap_const_boolean_1)) {
            right_V_address0 =  (sc_lv<8>) (zext_ln44_fu_454_p1.read());
        } else {
            right_V_address0 =  (sc_lv<8>) ("XXXXXXXX");
        }
    } else {
        right_V_address0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void create_tree::thread_right_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_1_reg_565.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, and_ln42_fu_448_p2.read())) || 
           (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln887_1_reg_565.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln879_4_fu_438_p2.read())))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_1_reg_565.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_1, and_ln42_fu_448_p2.read())) || 
           (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln887_1_reg_565.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln879_4_fu_438_p2.read())))))) {
        right_V_ce0 = ap_const_logic_1;
    } else {
        right_V_ce0 = ap_const_logic_0;
    }
}

void create_tree::thread_right_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        if (esl_seteq<1,1,1>(ap_condition_166.read(), ap_const_boolean_1)) {
            right_V_d0 = ap_const_lv32_FFFFFFFF;
        } else if (esl_seteq<1,1,1>(ap_condition_156.read(), ap_const_boolean_1)) {
            right_V_d0 = in_value_V_q0.read();
        } else {
            right_V_d0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        right_V_d0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void create_tree::thread_right_V_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_1_reg_565.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, and_ln42_fu_448_p2.read())) || 
           (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln887_1_reg_565.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln879_4_fu_438_p2.read())))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_1_reg_565.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_1, and_ln42_fu_448_p2.read())) || 
           (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln887_1_reg_565.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln879_4_fu_438_p2.read())))))) {
        right_V_we0 = ap_const_logic_1;
    } else {
        right_V_we0 = ap_const_logic_0;
    }
}

void create_tree::thread_tree_count_V_1_fu_483_p2() {
    tree_count_V_1_fu_483_p2 = (!t_V_5_reg_284.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(t_V_5_reg_284.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void create_tree::thread_tree_count_V_fu_415_p2() {
    tree_count_V_fu_415_p2 = (!t_V_3_reg_247.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(t_V_3_reg_247.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void create_tree::thread_val_assign_loc_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        val_assign_loc_blk_n = val_assign_loc_empty_n.read();
    } else {
        val_assign_loc_blk_n = ap_const_logic_1;
    }
}

void create_tree::thread_val_assign_loc_out_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        val_assign_loc_out_blk_n = val_assign_loc_out_full_n.read();
    } else {
        val_assign_loc_out_blk_n = ap_const_logic_1;
    }
}

void create_tree::thread_val_assign_loc_out_din() {
    val_assign_loc_out_din = val_assign_loc_dout.read();
}

void create_tree::thread_val_assign_loc_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, val_assign_loc_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, val_assign_loc_out_full_n.read())))) {
        val_assign_loc_out_write = ap_const_logic_1;
    } else {
        val_assign_loc_out_write = ap_const_logic_0;
    }
}

void create_tree::thread_val_assign_loc_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, val_assign_loc_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, val_assign_loc_out_full_n.read())))) {
        val_assign_loc_read = ap_const_logic_1;
    } else {
        val_assign_loc_read = ap_const_logic_0;
    }
}

void create_tree::thread_zext_ln15_fu_351_p1() {
    zext_ln15_fu_351_p1 = esl_zext<32,31>(op2_assign_reg_271.read());
}

void create_tree::thread_zext_ln28_fu_398_p1() {
    zext_ln28_fu_398_p1 = esl_zext<64,31>(op2_assign_reg_271.read());
}

void create_tree::thread_zext_ln33_fu_410_p1() {
    zext_ln33_fu_410_p1 = esl_zext<64,31>(op2_assign_reg_271.read());
}

void create_tree::thread_zext_ln44_fu_454_p1() {
    zext_ln44_fu_454_p1 = esl_zext<64,31>(op2_assign_reg_271.read());
}

void create_tree::thread_zext_ln49_fu_465_p1() {
    zext_ln49_fu_465_p1 = esl_zext<64,31>(op2_assign_reg_271.read());
}

void create_tree::thread_zext_ln544_3_fu_371_p1() {
    zext_ln544_3_fu_371_p1 = esl_zext<64,32>(t_V_reg_259.read());
}

void create_tree::thread_zext_ln544_4_fu_490_p1() {
    zext_ln544_4_fu_490_p1 = esl_zext<64,32>(t_V_3_reg_247.read());
}

void create_tree::thread_zext_ln544_5_fu_427_p1() {
    zext_ln544_5_fu_427_p1 = esl_zext<64,32>(ap_phi_mux_t_V_5_phi_fu_287_p4.read());
}

void create_tree::thread_zext_ln544_6_fu_432_p1() {
    zext_ln544_6_fu_432_p1 = esl_zext<64,32>(ap_phi_mux_t_V_4_phi_fu_298_p4.read());
}

void create_tree::thread_zext_ln544_fu_366_p1() {
    zext_ln544_fu_366_p1 = esl_zext<64,32>(t_V_3_reg_247.read());
}

void create_tree::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, val_assign_loc_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, val_assign_loc_out_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln15_fu_355_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

}

