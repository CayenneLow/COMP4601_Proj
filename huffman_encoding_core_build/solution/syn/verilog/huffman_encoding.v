// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="huffman_encoding,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.333000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=23,HLS_SYN_DSP=0,HLS_SYN_FF=1866,HLS_SYN_LUT=4168,HLS_VERSION=2020_1}" *)

module huffman_encoding (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        symbol_histogram_value_V_address0,
        symbol_histogram_value_V_ce0,
        symbol_histogram_value_V_q0,
        symbol_histogram_frequency_V_address0,
        symbol_histogram_frequency_V_ce0,
        symbol_histogram_frequency_V_q0,
        encoding_V_address0,
        encoding_V_ce0,
        encoding_V_we0,
        encoding_V_d0,
        num_nonzero_symbols,
        num_nonzero_symbols_ap_vld
);

parameter    ap_ST_fsm_state1 = 18'd1;
parameter    ap_ST_fsm_state2 = 18'd2;
parameter    ap_ST_fsm_state3 = 18'd4;
parameter    ap_ST_fsm_state4 = 18'd8;
parameter    ap_ST_fsm_state5 = 18'd16;
parameter    ap_ST_fsm_state6 = 18'd32;
parameter    ap_ST_fsm_state7 = 18'd64;
parameter    ap_ST_fsm_state8 = 18'd128;
parameter    ap_ST_fsm_state9 = 18'd256;
parameter    ap_ST_fsm_state10 = 18'd512;
parameter    ap_ST_fsm_state11 = 18'd1024;
parameter    ap_ST_fsm_state12 = 18'd2048;
parameter    ap_ST_fsm_state13 = 18'd4096;
parameter    ap_ST_fsm_state14 = 18'd8192;
parameter    ap_ST_fsm_state15 = 18'd16384;
parameter    ap_ST_fsm_state16 = 18'd32768;
parameter    ap_ST_fsm_state17 = 18'd65536;
parameter    ap_ST_fsm_state18 = 18'd131072;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] symbol_histogram_value_V_address0;
output   symbol_histogram_value_V_ce0;
input  [31:0] symbol_histogram_value_V_q0;
output  [7:0] symbol_histogram_frequency_V_address0;
output   symbol_histogram_frequency_V_ce0;
input  [31:0] symbol_histogram_frequency_V_q0;
output  [7:0] encoding_V_address0;
output   encoding_V_ce0;
output   encoding_V_we0;
output  [31:0] encoding_V_d0;
output  [31:0] num_nonzero_symbols;
output   num_nonzero_symbols_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg symbol_histogram_value_V_ce0;
reg symbol_histogram_frequency_V_ce0;
reg num_nonzero_symbols_ap_vld;

(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] reg_425;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln10_fu_437_p2;
wire    ap_CS_fsm_state6;
wire   [8:0] i_4_fu_443_p2;
reg   [8:0] i_4_reg_587;
wire   [63:0] zext_ln12_fu_449_p1;
reg   [63:0] zext_ln12_reg_592;
reg   [31:0] symbol_histogram_fre_1_reg_602;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln883_fu_454_p2;
reg   [0:0] icmp_ln883_reg_607;
wire   [30:0] i_fu_487_p2;
reg   [30:0] i_reg_619;
wire   [63:0] zext_ln41_fu_493_p1;
reg   [63:0] zext_ln41_reg_624;
wire   [0:0] icmp_ln40_fu_481_p2;
wire   [8:0] i_5_fu_505_p2;
wire    ap_CS_fsm_state13;
wire   [31:0] k_fu_527_p2;
reg   [31:0] k_reg_659;
wire    ap_CS_fsm_state14;
wire   [0:0] icmp_ln879_fu_533_p2;
reg   [0:0] icmp_ln879_reg_664;
wire   [0:0] icmp_ln41_fu_521_p2;
wire   [31:0] length_V_fu_539_p2;
reg   [31:0] length_V_reg_668;
wire    ap_CS_fsm_state15;
wire   [31:0] truncated_length_his_q0;
wire    ap_CS_fsm_state16;
wire   [0:0] icmp_ln879_2_fu_550_p2;
wire   [31:0] count_V_1_fu_571_p2;
wire    ap_CS_fsm_state17;
reg   [7:0] filtered_value_V_address0;
reg    filtered_value_V_ce0;
reg    filtered_value_V_we0;
wire   [31:0] filtered_value_V_q0;
reg   [7:0] filtered_frequency_V_address0;
reg    filtered_frequency_V_ce0;
reg    filtered_frequency_V_we0;
wire   [31:0] filtered_frequency_V_q0;
reg   [7:0] sorted_0_address0;
reg    sorted_0_ce0;
reg    sorted_0_we0;
wire   [31:0] sorted_0_q0;
reg   [7:0] sorted_1_address0;
reg    sorted_1_ce0;
reg    sorted_1_we0;
wire   [31:0] sorted_1_q0;
reg   [7:0] sorted_copy1_value_V_address0;
reg    sorted_copy1_value_V_ce0;
reg    sorted_copy1_value_V_we0;
wire   [31:0] sorted_copy1_value_V_q0;
reg   [7:0] sorted_copy1_frequen_address0;
reg    sorted_copy1_frequen_ce0;
reg    sorted_copy1_frequen_we0;
wire   [31:0] sorted_copy1_frequen_q0;
reg   [7:0] sorted_copy2_value_V_address0;
reg    sorted_copy2_value_V_ce0;
reg    sorted_copy2_value_V_we0;
wire   [31:0] sorted_copy2_value_V_q0;
reg   [7:0] parent_V_address0;
reg    parent_V_ce0;
reg    parent_V_we0;
wire   [30:0] parent_V_q0;
reg   [7:0] left_V_address0;
reg    left_V_ce0;
reg    left_V_we0;
wire   [31:0] left_V_q0;
reg   [7:0] right_V_address0;
reg    right_V_ce0;
reg    right_V_we0;
wire   [31:0] right_V_q0;
reg   [5:0] length_histogram_V_address0;
reg    length_histogram_V_ce0;
reg    length_histogram_V_we0;
wire   [31:0] length_histogram_V_q0;
reg   [5:0] truncated_length_his_address0;
reg    truncated_length_his_ce0;
reg    truncated_length_his_we0;
reg    truncated_length_his_ce1;
reg    truncated_length_his_we1;
wire   [31:0] truncated_length_his_q1;
reg   [5:0] truncated_length_his_1_address0;
reg    truncated_length_his_1_ce0;
reg    truncated_length_his_1_we0;
wire   [31:0] truncated_length_his_1_q0;
reg   [7:0] symbol_bits_V_address0;
reg    symbol_bits_V_ce0;
reg    symbol_bits_V_we0;
reg   [4:0] symbol_bits_V_d0;
wire   [4:0] symbol_bits_V_q0;
wire    grp_create_tree_fu_369_ap_start;
wire    grp_create_tree_fu_369_ap_done;
wire    grp_create_tree_fu_369_ap_idle;
wire    grp_create_tree_fu_369_ap_ready;
wire   [7:0] grp_create_tree_fu_369_in_value_V_address0;
wire    grp_create_tree_fu_369_in_value_V_ce0;
wire   [7:0] grp_create_tree_fu_369_in_frequency_V_address0;
wire    grp_create_tree_fu_369_in_frequency_V_ce0;
wire   [7:0] grp_create_tree_fu_369_parent_V_address0;
wire    grp_create_tree_fu_369_parent_V_ce0;
wire    grp_create_tree_fu_369_parent_V_we0;
wire   [30:0] grp_create_tree_fu_369_parent_V_d0;
wire   [7:0] grp_create_tree_fu_369_left_V_address0;
wire    grp_create_tree_fu_369_left_V_ce0;
wire    grp_create_tree_fu_369_left_V_we0;
wire   [31:0] grp_create_tree_fu_369_left_V_d0;
wire   [7:0] grp_create_tree_fu_369_right_V_address0;
wire    grp_create_tree_fu_369_right_V_ce0;
wire    grp_create_tree_fu_369_right_V_we0;
wire   [31:0] grp_create_tree_fu_369_right_V_d0;
wire    grp_sort_fu_379_ap_start;
wire    grp_sort_fu_379_ap_done;
wire    grp_sort_fu_379_ap_idle;
wire    grp_sort_fu_379_ap_ready;
wire   [7:0] grp_sort_fu_379_in_value_V_address0;
wire    grp_sort_fu_379_in_value_V_ce0;
wire   [7:0] grp_sort_fu_379_in_frequency_V_address0;
wire    grp_sort_fu_379_in_frequency_V_ce0;
wire   [7:0] grp_sort_fu_379_out_value_V_address0;
wire    grp_sort_fu_379_out_value_V_ce0;
wire    grp_sort_fu_379_out_value_V_we0;
wire   [31:0] grp_sort_fu_379_out_value_V_d0;
wire   [7:0] grp_sort_fu_379_out_frequency_V_address0;
wire    grp_sort_fu_379_out_frequency_V_ce0;
wire    grp_sort_fu_379_out_frequency_V_we0;
wire   [31:0] grp_sort_fu_379_out_frequency_V_d0;
wire    grp_truncate_tree_fu_388_ap_start;
wire    grp_truncate_tree_fu_388_ap_done;
wire    grp_truncate_tree_fu_388_ap_idle;
wire    grp_truncate_tree_fu_388_ap_ready;
wire   [5:0] grp_truncate_tree_fu_388_input_length_histogram_V_address0;
wire    grp_truncate_tree_fu_388_input_length_histogram_V_ce0;
wire   [5:0] grp_truncate_tree_fu_388_output_length_histogram1_V_address0;
wire    grp_truncate_tree_fu_388_output_length_histogram1_V_ce0;
wire    grp_truncate_tree_fu_388_output_length_histogram1_V_we0;
wire   [31:0] grp_truncate_tree_fu_388_output_length_histogram1_V_d0;
wire   [5:0] grp_truncate_tree_fu_388_output_length_histogram1_V_address1;
wire    grp_truncate_tree_fu_388_output_length_histogram1_V_ce1;
wire    grp_truncate_tree_fu_388_output_length_histogram1_V_we1;
wire   [31:0] grp_truncate_tree_fu_388_output_length_histogram1_V_d1;
wire   [5:0] grp_truncate_tree_fu_388_output_length_histogram2_V_address0;
wire    grp_truncate_tree_fu_388_output_length_histogram2_V_ce0;
wire    grp_truncate_tree_fu_388_output_length_histogram2_V_we0;
wire   [31:0] grp_truncate_tree_fu_388_output_length_histogram2_V_d0;
wire    grp_compute_bit_length_fu_395_ap_start;
wire    grp_compute_bit_length_fu_395_ap_done;
wire    grp_compute_bit_length_fu_395_ap_idle;
wire    grp_compute_bit_length_fu_395_ap_ready;
wire   [7:0] grp_compute_bit_length_fu_395_parent_V_address0;
wire    grp_compute_bit_length_fu_395_parent_V_ce0;
wire   [7:0] grp_compute_bit_length_fu_395_left_V_address0;
wire    grp_compute_bit_length_fu_395_left_V_ce0;
wire   [7:0] grp_compute_bit_length_fu_395_right_V_address0;
wire    grp_compute_bit_length_fu_395_right_V_ce0;
wire   [5:0] grp_compute_bit_length_fu_395_length_histogram_V_address0;
wire    grp_compute_bit_length_fu_395_length_histogram_V_ce0;
wire    grp_compute_bit_length_fu_395_length_histogram_V_we0;
wire   [31:0] grp_compute_bit_length_fu_395_length_histogram_V_d0;
wire    grp_create_codeword_fu_404_ap_start;
wire    grp_create_codeword_fu_404_ap_done;
wire    grp_create_codeword_fu_404_ap_idle;
wire    grp_create_codeword_fu_404_ap_ready;
wire   [7:0] grp_create_codeword_fu_404_symbol_bits_V_address0;
wire    grp_create_codeword_fu_404_symbol_bits_V_ce0;
wire   [5:0] grp_create_codeword_fu_404_codeword_length_histogram_V_address0;
wire    grp_create_codeword_fu_404_codeword_length_histogram_V_ce0;
wire   [7:0] grp_create_codeword_fu_404_encoding_V_address0;
wire    grp_create_codeword_fu_404_encoding_V_ce0;
wire    grp_create_codeword_fu_404_encoding_V_we0;
wire   [31:0] grp_create_codeword_fu_404_encoding_V_d0;
reg   [8:0] i_0_i_reg_302;
wire    ap_CS_fsm_state4;
reg   [30:0] i_0_reg_313;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state5;
reg   [8:0] i_0_i1_reg_324;
wire   [0:0] icmp_ln13_fu_499_p2;
wire    ap_CS_fsm_state12;
reg   [31:0] p_066_0_i_reg_335;
reg   [31:0] i_op_assign_reg_347;
reg   [31:0] t_V_3_reg_359;
reg    grp_create_tree_fu_369_ap_start_reg;
wire    ap_CS_fsm_state8;
reg    grp_sort_fu_379_ap_start_reg;
reg    grp_truncate_tree_fu_388_ap_start_reg;
wire    ap_CS_fsm_state11;
reg    grp_compute_bit_length_fu_395_ap_start_reg;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
reg    grp_create_codeword_fu_404_ap_start_reg;
wire    ap_CS_fsm_state18;
wire   [63:0] zext_ln544_fu_460_p1;
wire   [63:0] zext_ln14_fu_511_p1;
wire   [63:0] zext_ln544_5_fu_545_p1;
wire   [63:0] zext_ln53_fu_556_p1;
wire  signed [63:0] sext_ln54_fu_561_p1;
reg   [31:0] t_V_4_fu_78;
wire   [31:0] j_V_fu_466_p2;
reg   [31:0] length_V_1_fu_138;
wire   [4:0] trunc_ln209_fu_566_p1;
wire   [31:0] zext_ln40_fu_477_p1;
reg   [17:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 18'd1;
#0 grp_create_tree_fu_369_ap_start_reg = 1'b0;
#0 grp_sort_fu_379_ap_start_reg = 1'b0;
#0 grp_truncate_tree_fu_388_ap_start_reg = 1'b0;
#0 grp_compute_bit_length_fu_395_ap_start_reg = 1'b0;
#0 grp_create_codeword_fu_404_ap_start_reg = 1'b0;
end

sort_previous_sorbkb #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
filtered_value_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(filtered_value_V_address0),
    .ce0(filtered_value_V_ce0),
    .we0(filtered_value_V_we0),
    .d0(symbol_histogram_value_V_q0),
    .q0(filtered_value_V_q0)
);

sort_previous_sorbkb #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
filtered_frequency_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(filtered_frequency_V_address0),
    .ce0(filtered_frequency_V_ce0),
    .we0(filtered_frequency_V_we0),
    .d0(symbol_histogram_fre_1_reg_602),
    .q0(filtered_frequency_V_q0)
);

sort_previous_sorbkb #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
sorted_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sorted_0_address0),
    .ce0(sorted_0_ce0),
    .we0(sorted_0_we0),
    .d0(grp_sort_fu_379_out_value_V_d0),
    .q0(sorted_0_q0)
);

sort_previous_sorbkb #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
sorted_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sorted_1_address0),
    .ce0(sorted_1_ce0),
    .we0(sorted_1_we0),
    .d0(grp_sort_fu_379_out_frequency_V_d0),
    .q0(sorted_1_q0)
);

sort_previous_sorbkb #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
sorted_copy1_value_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sorted_copy1_value_V_address0),
    .ce0(sorted_copy1_value_V_ce0),
    .we0(sorted_copy1_value_V_we0),
    .d0(sorted_0_q0),
    .q0(sorted_copy1_value_V_q0)
);

sort_previous_sorbkb #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
sorted_copy1_frequen_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sorted_copy1_frequen_address0),
    .ce0(sorted_copy1_frequen_ce0),
    .we0(sorted_copy1_frequen_we0),
    .d0(sorted_1_q0),
    .q0(sorted_copy1_frequen_q0)
);

sort_previous_sorbkb #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
sorted_copy2_value_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sorted_copy2_value_V_address0),
    .ce0(sorted_copy2_value_V_ce0),
    .we0(sorted_copy2_value_V_we0),
    .d0(sorted_0_q0),
    .q0(sorted_copy2_value_V_q0)
);

huffman_encoding_tde #(
    .DataWidth( 31 ),
    .AddressRange( 255 ),
    .AddressWidth( 8 ))
parent_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(parent_V_address0),
    .ce0(parent_V_ce0),
    .we0(parent_V_we0),
    .d0(grp_create_tree_fu_369_parent_V_d0),
    .q0(parent_V_q0)
);

create_tree_frequibs #(
    .DataWidth( 32 ),
    .AddressRange( 255 ),
    .AddressWidth( 8 ))
left_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(left_V_address0),
    .ce0(left_V_ce0),
    .we0(left_V_we0),
    .d0(grp_create_tree_fu_369_left_V_d0),
    .q0(left_V_q0)
);

create_tree_frequibs #(
    .DataWidth( 32 ),
    .AddressRange( 255 ),
    .AddressWidth( 8 ))
right_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(right_V_address0),
    .ce0(right_V_ce0),
    .we0(right_V_we0),
    .d0(grp_create_tree_fu_369_right_V_d0),
    .q0(right_V_q0)
);

compute_bit_lengtkbM #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
length_histogram_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(length_histogram_V_address0),
    .ce0(length_histogram_V_ce0),
    .we0(length_histogram_V_we0),
    .d0(grp_compute_bit_length_fu_395_length_histogram_V_d0),
    .q0(length_histogram_V_q0)
);

huffman_encoding_xdS #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
truncated_length_his_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(truncated_length_his_address0),
    .ce0(truncated_length_his_ce0),
    .we0(truncated_length_his_we0),
    .d0(grp_truncate_tree_fu_388_output_length_histogram1_V_d0),
    .q0(truncated_length_his_q0),
    .address1(grp_truncate_tree_fu_388_output_length_histogram1_V_address1),
    .ce1(truncated_length_his_ce1),
    .we1(truncated_length_his_we1),
    .d1(grp_truncate_tree_fu_388_output_length_histogram1_V_d1),
    .q1(truncated_length_his_q1)
);

compute_bit_lengtkbM #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
truncated_length_his_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(truncated_length_his_1_address0),
    .ce0(truncated_length_his_1_ce0),
    .we0(truncated_length_his_1_we0),
    .d0(grp_truncate_tree_fu_388_output_length_histogram2_V_d0),
    .q0(truncated_length_his_1_q0)
);

huffman_encoding_zec #(
    .DataWidth( 5 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
symbol_bits_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(symbol_bits_V_address0),
    .ce0(symbol_bits_V_ce0),
    .we0(symbol_bits_V_we0),
    .d0(symbol_bits_V_d0),
    .q0(symbol_bits_V_q0)
);

create_tree grp_create_tree_fu_369(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_create_tree_fu_369_ap_start),
    .ap_done(grp_create_tree_fu_369_ap_done),
    .ap_idle(grp_create_tree_fu_369_ap_idle),
    .ap_ready(grp_create_tree_fu_369_ap_ready),
    .in_value_V_address0(grp_create_tree_fu_369_in_value_V_address0),
    .in_value_V_ce0(grp_create_tree_fu_369_in_value_V_ce0),
    .in_value_V_q0(sorted_copy1_value_V_q0),
    .in_frequency_V_address0(grp_create_tree_fu_369_in_frequency_V_address0),
    .in_frequency_V_ce0(grp_create_tree_fu_369_in_frequency_V_ce0),
    .in_frequency_V_q0(sorted_copy1_frequen_q0),
    .num_symbols(reg_425),
    .parent_V_address0(grp_create_tree_fu_369_parent_V_address0),
    .parent_V_ce0(grp_create_tree_fu_369_parent_V_ce0),
    .parent_V_we0(grp_create_tree_fu_369_parent_V_we0),
    .parent_V_d0(grp_create_tree_fu_369_parent_V_d0),
    .left_V_address0(grp_create_tree_fu_369_left_V_address0),
    .left_V_ce0(grp_create_tree_fu_369_left_V_ce0),
    .left_V_we0(grp_create_tree_fu_369_left_V_we0),
    .left_V_d0(grp_create_tree_fu_369_left_V_d0),
    .right_V_address0(grp_create_tree_fu_369_right_V_address0),
    .right_V_ce0(grp_create_tree_fu_369_right_V_ce0),
    .right_V_we0(grp_create_tree_fu_369_right_V_we0),
    .right_V_d0(grp_create_tree_fu_369_right_V_d0)
);

sort grp_sort_fu_379(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sort_fu_379_ap_start),
    .ap_done(grp_sort_fu_379_ap_done),
    .ap_idle(grp_sort_fu_379_ap_idle),
    .ap_ready(grp_sort_fu_379_ap_ready),
    .in_value_V_address0(grp_sort_fu_379_in_value_V_address0),
    .in_value_V_ce0(grp_sort_fu_379_in_value_V_ce0),
    .in_value_V_q0(filtered_value_V_q0),
    .in_frequency_V_address0(grp_sort_fu_379_in_frequency_V_address0),
    .in_frequency_V_ce0(grp_sort_fu_379_in_frequency_V_ce0),
    .in_frequency_V_q0(filtered_frequency_V_q0),
    .num_symbols(reg_425),
    .out_value_V_address0(grp_sort_fu_379_out_value_V_address0),
    .out_value_V_ce0(grp_sort_fu_379_out_value_V_ce0),
    .out_value_V_we0(grp_sort_fu_379_out_value_V_we0),
    .out_value_V_d0(grp_sort_fu_379_out_value_V_d0),
    .out_frequency_V_address0(grp_sort_fu_379_out_frequency_V_address0),
    .out_frequency_V_ce0(grp_sort_fu_379_out_frequency_V_ce0),
    .out_frequency_V_we0(grp_sort_fu_379_out_frequency_V_we0),
    .out_frequency_V_d0(grp_sort_fu_379_out_frequency_V_d0)
);

truncate_tree grp_truncate_tree_fu_388(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_truncate_tree_fu_388_ap_start),
    .ap_done(grp_truncate_tree_fu_388_ap_done),
    .ap_idle(grp_truncate_tree_fu_388_ap_idle),
    .ap_ready(grp_truncate_tree_fu_388_ap_ready),
    .input_length_histogram_V_address0(grp_truncate_tree_fu_388_input_length_histogram_V_address0),
    .input_length_histogram_V_ce0(grp_truncate_tree_fu_388_input_length_histogram_V_ce0),
    .input_length_histogram_V_q0(length_histogram_V_q0),
    .output_length_histogram1_V_address0(grp_truncate_tree_fu_388_output_length_histogram1_V_address0),
    .output_length_histogram1_V_ce0(grp_truncate_tree_fu_388_output_length_histogram1_V_ce0),
    .output_length_histogram1_V_we0(grp_truncate_tree_fu_388_output_length_histogram1_V_we0),
    .output_length_histogram1_V_d0(grp_truncate_tree_fu_388_output_length_histogram1_V_d0),
    .output_length_histogram1_V_q0(truncated_length_his_q0),
    .output_length_histogram1_V_address1(grp_truncate_tree_fu_388_output_length_histogram1_V_address1),
    .output_length_histogram1_V_ce1(grp_truncate_tree_fu_388_output_length_histogram1_V_ce1),
    .output_length_histogram1_V_we1(grp_truncate_tree_fu_388_output_length_histogram1_V_we1),
    .output_length_histogram1_V_d1(grp_truncate_tree_fu_388_output_length_histogram1_V_d1),
    .output_length_histogram1_V_q1(truncated_length_his_q1),
    .output_length_histogram2_V_address0(grp_truncate_tree_fu_388_output_length_histogram2_V_address0),
    .output_length_histogram2_V_ce0(grp_truncate_tree_fu_388_output_length_histogram2_V_ce0),
    .output_length_histogram2_V_we0(grp_truncate_tree_fu_388_output_length_histogram2_V_we0),
    .output_length_histogram2_V_d0(grp_truncate_tree_fu_388_output_length_histogram2_V_d0)
);

compute_bit_length grp_compute_bit_length_fu_395(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_compute_bit_length_fu_395_ap_start),
    .ap_done(grp_compute_bit_length_fu_395_ap_done),
    .ap_idle(grp_compute_bit_length_fu_395_ap_idle),
    .ap_ready(grp_compute_bit_length_fu_395_ap_ready),
    .parent_V_address0(grp_compute_bit_length_fu_395_parent_V_address0),
    .parent_V_ce0(grp_compute_bit_length_fu_395_parent_V_ce0),
    .parent_V_q0(parent_V_q0),
    .left_V_address0(grp_compute_bit_length_fu_395_left_V_address0),
    .left_V_ce0(grp_compute_bit_length_fu_395_left_V_ce0),
    .left_V_q0(left_V_q0),
    .right_V_address0(grp_compute_bit_length_fu_395_right_V_address0),
    .right_V_ce0(grp_compute_bit_length_fu_395_right_V_ce0),
    .right_V_q0(right_V_q0),
    .num_symbols(reg_425),
    .length_histogram_V_address0(grp_compute_bit_length_fu_395_length_histogram_V_address0),
    .length_histogram_V_ce0(grp_compute_bit_length_fu_395_length_histogram_V_ce0),
    .length_histogram_V_we0(grp_compute_bit_length_fu_395_length_histogram_V_we0),
    .length_histogram_V_d0(grp_compute_bit_length_fu_395_length_histogram_V_d0)
);

create_codeword grp_create_codeword_fu_404(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_create_codeword_fu_404_ap_start),
    .ap_done(grp_create_codeword_fu_404_ap_done),
    .ap_idle(grp_create_codeword_fu_404_ap_idle),
    .ap_ready(grp_create_codeword_fu_404_ap_ready),
    .symbol_bits_V_address0(grp_create_codeword_fu_404_symbol_bits_V_address0),
    .symbol_bits_V_ce0(grp_create_codeword_fu_404_symbol_bits_V_ce0),
    .symbol_bits_V_q0(symbol_bits_V_q0),
    .codeword_length_histogram_V_address0(grp_create_codeword_fu_404_codeword_length_histogram_V_address0),
    .codeword_length_histogram_V_ce0(grp_create_codeword_fu_404_codeword_length_histogram_V_ce0),
    .codeword_length_histogram_V_q0(truncated_length_his_1_q0),
    .encoding_V_address0(grp_create_codeword_fu_404_encoding_V_address0),
    .encoding_V_ce0(grp_create_codeword_fu_404_encoding_V_ce0),
    .encoding_V_we0(grp_create_codeword_fu_404_encoding_V_we0),
    .encoding_V_d0(grp_create_codeword_fu_404_encoding_V_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_compute_bit_length_fu_395_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_compute_bit_length_fu_395_ap_start_reg <= 1'b1;
        end else if ((grp_compute_bit_length_fu_395_ap_ready == 1'b1)) begin
            grp_compute_bit_length_fu_395_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_create_codeword_fu_404_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln41_fu_521_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
            grp_create_codeword_fu_404_ap_start_reg <= 1'b1;
        end else if ((grp_create_codeword_fu_404_ap_ready == 1'b1)) begin
            grp_create_codeword_fu_404_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_create_tree_fu_369_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln40_fu_481_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
            grp_create_tree_fu_369_ap_start_reg <= 1'b1;
        end else if ((grp_create_tree_fu_369_ap_ready == 1'b1)) begin
            grp_create_tree_fu_369_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sort_fu_379_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln10_fu_437_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            grp_sort_fu_379_ap_start_reg <= 1'b1;
        end else if ((grp_sort_fu_379_ap_ready == 1'b1)) begin
            grp_sort_fu_379_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_truncate_tree_fu_388_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_truncate_tree_fu_388_ap_start_reg <= 1'b1;
        end else if ((grp_truncate_tree_fu_388_ap_ready == 1'b1)) begin
            grp_truncate_tree_fu_388_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((grp_truncate_tree_fu_388_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        i_0_i1_reg_324 <= 9'd0;
    end else if (((icmp_ln13_fu_499_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        i_0_i1_reg_324 <= i_5_fu_505_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_0_i_reg_302 <= i_4_reg_587;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_i_reg_302 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_sort_fu_379_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        i_0_reg_313 <= 31'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        i_0_reg_313 <= i_reg_619;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln13_fu_499_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        i_op_assign_reg_347 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        i_op_assign_reg_347 <= k_reg_659;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln879_2_fu_550_p2 == 1'd1) & (icmp_ln879_reg_664 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((icmp_ln879_2_fu_550_p2 == 1'd0) & (icmp_ln879_reg_664 == 1'd1) & (1'b1 == ap_CS_fsm_state16)))) begin
        length_V_1_fu_138 <= length_V_reg_668;
    end else if (((icmp_ln13_fu_499_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        length_V_1_fu_138 <= 32'd64;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln13_fu_499_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        p_066_0_i_reg_335 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        p_066_0_i_reg_335 <= count_V_1_fu_571_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln879_2_fu_550_p2 == 1'd0) & (icmp_ln879_reg_664 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        t_V_3_reg_359 <= truncated_length_his_q0;
    end else if (((icmp_ln41_fu_521_p2 == 1'd0) & (icmp_ln879_fu_533_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        t_V_3_reg_359 <= p_066_0_i_reg_335;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln883_reg_607 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        t_V_4_fu_78 <= j_V_fu_466_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_4_fu_78 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_4_reg_587 <= i_4_fu_443_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        i_reg_619 <= i_fu_487_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln41_fu_521_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        icmp_ln879_reg_664 <= icmp_ln879_fu_533_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        icmp_ln883_reg_607 <= icmp_ln883_fu_454_p2;
        symbol_histogram_fre_1_reg_602 <= symbol_histogram_frequency_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        k_reg_659 <= k_fu_527_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        length_V_reg_668 <= length_V_fu_539_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((icmp_ln10_fu_437_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        reg_425 <= t_V_4_fu_78;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_fu_437_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        zext_ln12_reg_592[8 : 0] <= zext_ln12_fu_449_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln40_fu_481_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        zext_ln41_reg_624[30 : 0] <= zext_ln41_fu_493_p1[30 : 0];
    end
end

always @ (*) begin
    if (((grp_create_codeword_fu_404_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_create_codeword_fu_404_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        filtered_frequency_V_address0 = zext_ln544_fu_460_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        filtered_frequency_V_address0 = grp_sort_fu_379_in_frequency_V_address0;
    end else begin
        filtered_frequency_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        filtered_frequency_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        filtered_frequency_V_ce0 = grp_sort_fu_379_in_frequency_V_ce0;
    end else begin
        filtered_frequency_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln883_reg_607 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        filtered_frequency_V_we0 = 1'b1;
    end else begin
        filtered_frequency_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        filtered_value_V_address0 = zext_ln544_fu_460_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        filtered_value_V_address0 = grp_sort_fu_379_in_value_V_address0;
    end else begin
        filtered_value_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        filtered_value_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        filtered_value_V_ce0 = grp_sort_fu_379_in_value_V_ce0;
    end else begin
        filtered_value_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln883_reg_607 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        filtered_value_V_we0 = 1'b1;
    end else begin
        filtered_value_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        left_V_address0 = grp_compute_bit_length_fu_395_left_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        left_V_address0 = grp_create_tree_fu_369_left_V_address0;
    end else begin
        left_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        left_V_ce0 = grp_compute_bit_length_fu_395_left_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        left_V_ce0 = grp_create_tree_fu_369_left_V_ce0;
    end else begin
        left_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        left_V_we0 = grp_create_tree_fu_369_left_V_we0;
    end else begin
        left_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        length_histogram_V_address0 = grp_compute_bit_length_fu_395_length_histogram_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        length_histogram_V_address0 = grp_truncate_tree_fu_388_input_length_histogram_V_address0;
    end else begin
        length_histogram_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        length_histogram_V_ce0 = grp_compute_bit_length_fu_395_length_histogram_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        length_histogram_V_ce0 = grp_truncate_tree_fu_388_input_length_histogram_V_ce0;
    end else begin
        length_histogram_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        length_histogram_V_we0 = grp_compute_bit_length_fu_395_length_histogram_V_we0;
    end else begin
        length_histogram_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln41_fu_521_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        num_nonzero_symbols_ap_vld = 1'b1;
    end else begin
        num_nonzero_symbols_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        parent_V_address0 = grp_compute_bit_length_fu_395_parent_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        parent_V_address0 = grp_create_tree_fu_369_parent_V_address0;
    end else begin
        parent_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        parent_V_ce0 = grp_compute_bit_length_fu_395_parent_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        parent_V_ce0 = grp_create_tree_fu_369_parent_V_ce0;
    end else begin
        parent_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        parent_V_we0 = grp_create_tree_fu_369_parent_V_we0;
    end else begin
        parent_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        right_V_address0 = grp_compute_bit_length_fu_395_right_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        right_V_address0 = grp_create_tree_fu_369_right_V_address0;
    end else begin
        right_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        right_V_ce0 = grp_compute_bit_length_fu_395_right_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        right_V_ce0 = grp_create_tree_fu_369_right_V_ce0;
    end else begin
        right_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        right_V_we0 = grp_create_tree_fu_369_right_V_we0;
    end else begin
        right_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sorted_0_address0 = zext_ln41_fu_493_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sorted_0_address0 = grp_sort_fu_379_out_value_V_address0;
    end else begin
        sorted_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sorted_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sorted_0_ce0 = grp_sort_fu_379_out_value_V_ce0;
    end else begin
        sorted_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        sorted_0_we0 = grp_sort_fu_379_out_value_V_we0;
    end else begin
        sorted_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sorted_1_address0 = zext_ln41_fu_493_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sorted_1_address0 = grp_sort_fu_379_out_frequency_V_address0;
    end else begin
        sorted_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sorted_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        sorted_1_ce0 = grp_sort_fu_379_out_frequency_V_ce0;
    end else begin
        sorted_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        sorted_1_we0 = grp_sort_fu_379_out_frequency_V_we0;
    end else begin
        sorted_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        sorted_copy1_frequen_address0 = zext_ln41_reg_624;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sorted_copy1_frequen_address0 = grp_create_tree_fu_369_in_frequency_V_address0;
    end else begin
        sorted_copy1_frequen_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        sorted_copy1_frequen_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sorted_copy1_frequen_ce0 = grp_create_tree_fu_369_in_frequency_V_ce0;
    end else begin
        sorted_copy1_frequen_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        sorted_copy1_frequen_we0 = 1'b1;
    end else begin
        sorted_copy1_frequen_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        sorted_copy1_value_V_address0 = zext_ln41_reg_624;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sorted_copy1_value_V_address0 = grp_create_tree_fu_369_in_value_V_address0;
    end else begin
        sorted_copy1_value_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        sorted_copy1_value_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sorted_copy1_value_V_ce0 = grp_create_tree_fu_369_in_value_V_ce0;
    end else begin
        sorted_copy1_value_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        sorted_copy1_value_V_we0 = 1'b1;
    end else begin
        sorted_copy1_value_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        sorted_copy2_value_V_address0 = zext_ln53_fu_556_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sorted_copy2_value_V_address0 = zext_ln41_reg_624;
    end else begin
        sorted_copy2_value_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state16))) begin
        sorted_copy2_value_V_ce0 = 1'b1;
    end else begin
        sorted_copy2_value_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        sorted_copy2_value_V_we0 = 1'b1;
    end else begin
        sorted_copy2_value_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        symbol_bits_V_address0 = sext_ln54_fu_561_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        symbol_bits_V_address0 = zext_ln14_fu_511_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        symbol_bits_V_address0 = grp_create_codeword_fu_404_symbol_bits_V_address0;
    end else begin
        symbol_bits_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state13))) begin
        symbol_bits_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        symbol_bits_V_ce0 = grp_create_codeword_fu_404_symbol_bits_V_ce0;
    end else begin
        symbol_bits_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        symbol_bits_V_d0 = trunc_ln209_fu_566_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        symbol_bits_V_d0 = 5'd0;
    end else begin
        symbol_bits_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((icmp_ln13_fu_499_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13)))) begin
        symbol_bits_V_we0 = 1'b1;
    end else begin
        symbol_bits_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        symbol_histogram_frequency_V_ce0 = 1'b1;
    end else begin
        symbol_histogram_frequency_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        symbol_histogram_value_V_ce0 = 1'b1;
    end else begin
        symbol_histogram_value_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        truncated_length_his_1_address0 = grp_create_codeword_fu_404_codeword_length_histogram_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        truncated_length_his_1_address0 = grp_truncate_tree_fu_388_output_length_histogram2_V_address0;
    end else begin
        truncated_length_his_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        truncated_length_his_1_ce0 = grp_create_codeword_fu_404_codeword_length_histogram_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        truncated_length_his_1_ce0 = grp_truncate_tree_fu_388_output_length_histogram2_V_ce0;
    end else begin
        truncated_length_his_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        truncated_length_his_1_we0 = grp_truncate_tree_fu_388_output_length_histogram2_V_we0;
    end else begin
        truncated_length_his_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        truncated_length_his_address0 = zext_ln544_5_fu_545_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        truncated_length_his_address0 = grp_truncate_tree_fu_388_output_length_histogram1_V_address0;
    end else begin
        truncated_length_his_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        truncated_length_his_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        truncated_length_his_ce0 = grp_truncate_tree_fu_388_output_length_histogram1_V_ce0;
    end else begin
        truncated_length_his_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        truncated_length_his_ce1 = grp_truncate_tree_fu_388_output_length_histogram1_V_ce1;
    end else begin
        truncated_length_his_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        truncated_length_his_we0 = grp_truncate_tree_fu_388_output_length_histogram1_V_we0;
    end else begin
        truncated_length_his_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        truncated_length_his_we1 = grp_truncate_tree_fu_388_output_length_histogram1_V_we1;
    end else begin
        truncated_length_his_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln10_fu_437_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state5 : begin
            if (((grp_sort_fu_379_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln40_fu_481_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state8 : begin
            if (((grp_create_tree_fu_369_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_compute_bit_length_fu_395_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((grp_truncate_tree_fu_388_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((icmp_ln13_fu_499_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((icmp_ln41_fu_521_p2 == 1'd0) & (icmp_ln879_fu_533_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else if (((icmp_ln41_fu_521_p2 == 1'd0) & (icmp_ln879_fu_533_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & ((icmp_ln879_2_fu_550_p2 == 1'd0) | (icmp_ln879_reg_664 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state18 : begin
            if (((grp_create_codeword_fu_404_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign count_V_1_fu_571_p2 = ($signed(32'd4294967295) + $signed(t_V_3_reg_359));

assign encoding_V_address0 = grp_create_codeword_fu_404_encoding_V_address0;

assign encoding_V_ce0 = grp_create_codeword_fu_404_encoding_V_ce0;

assign encoding_V_d0 = grp_create_codeword_fu_404_encoding_V_d0;

assign encoding_V_we0 = grp_create_codeword_fu_404_encoding_V_we0;

assign grp_compute_bit_length_fu_395_ap_start = grp_compute_bit_length_fu_395_ap_start_reg;

assign grp_create_codeword_fu_404_ap_start = grp_create_codeword_fu_404_ap_start_reg;

assign grp_create_tree_fu_369_ap_start = grp_create_tree_fu_369_ap_start_reg;

assign grp_sort_fu_379_ap_start = grp_sort_fu_379_ap_start_reg;

assign grp_truncate_tree_fu_388_ap_start = grp_truncate_tree_fu_388_ap_start_reg;

assign i_4_fu_443_p2 = (i_0_i_reg_302 + 9'd1);

assign i_5_fu_505_p2 = (i_0_i1_reg_324 + 9'd1);

assign i_fu_487_p2 = (i_0_reg_313 + 31'd1);

assign icmp_ln10_fu_437_p2 = ((i_0_i_reg_302 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln13_fu_499_p2 = ((i_0_i1_reg_324 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln40_fu_481_p2 = (($signed(zext_ln40_fu_477_p1) < $signed(t_V_4_fu_78)) ? 1'b1 : 1'b0);

assign icmp_ln41_fu_521_p2 = ((i_op_assign_reg_347 == t_V_4_fu_78) ? 1'b1 : 1'b0);

assign icmp_ln879_2_fu_550_p2 = ((truncated_length_his_q0 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln879_fu_533_p2 = ((p_066_0_i_reg_335 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln883_fu_454_p2 = ((symbol_histogram_frequency_V_q0 == 32'd0) ? 1'b1 : 1'b0);

assign j_V_fu_466_p2 = (t_V_4_fu_78 + 32'd1);

assign k_fu_527_p2 = (i_op_assign_reg_347 + 32'd1);

assign length_V_fu_539_p2 = ($signed(length_V_1_fu_138) + $signed(32'd4294967295));

assign num_nonzero_symbols = t_V_4_fu_78;

assign sext_ln54_fu_561_p1 = $signed(sorted_copy2_value_V_q0);

assign symbol_histogram_frequency_V_address0 = zext_ln12_fu_449_p1;

assign symbol_histogram_value_V_address0 = zext_ln12_reg_592;

assign trunc_ln209_fu_566_p1 = length_V_1_fu_138[4:0];

assign zext_ln12_fu_449_p1 = i_0_i_reg_302;

assign zext_ln14_fu_511_p1 = i_0_i1_reg_324;

assign zext_ln40_fu_477_p1 = i_0_reg_313;

assign zext_ln41_fu_493_p1 = i_0_reg_313;

assign zext_ln53_fu_556_p1 = i_op_assign_reg_347;

assign zext_ln544_5_fu_545_p1 = length_V_fu_539_p2;

assign zext_ln544_fu_460_p1 = t_V_4_fu_78;

always @ (posedge ap_clk) begin
    zext_ln12_reg_592[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln41_reg_624[63:31] <= 33'b000000000000000000000000000000000;
end

endmodule //huffman_encoding
