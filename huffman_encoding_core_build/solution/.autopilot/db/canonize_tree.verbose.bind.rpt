

================================================================
== Vivado HLS Report for 'canonize_tree'
================================================================
* Date:           Tue Aug  3 12:44:34 2021

* Version:        2020.1 (Build 2897737 on Wed May 27 20:21:37 MDT 2020)
* Project:        huffman_encoding_core_build
* Solution:       solution
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 6.508 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+-----------+-----+------+---------+
    |  Latency (cycles) |  Latency (absolute)  |  Interval  | Pipeline|
    |   min   |   max   |    min   |    max    | min |  max |   Type  |
    +---------+---------+----------+-----------+-----+------+---------+
    |      258|     2306| 2.580 us | 23.060 us |  258|  2306|   none  |
    +---------+---------+----------+-----------+-----+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------------------+---------+---------+----------+-----------+-----------+---------+----------+
        |                      |  Latency (cycles) | Iteration|  Initiation Interval  |   Trip  |          |
        |       Loop Name      |   min   |   max   |  Latency |  achieved |   target  |  Count  | Pipelined|
        +----------------------+---------+---------+----------+-----------+-----------+---------+----------+
        |- init_bits           |      256|      256|         1|          -|          -|      256|    no    |
        |- process_symbols     |        0|     2048|   3 ~ 8  |          -|          -| 0 ~ 256 |    no    |
        | + process_symbols.1  |        3|        5|         2|          -|          -|  1 ~ 2  |    no    |
        +----------------------+---------+---------+----------+-----------+-----------+---------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 2 3 
3 --> 5 4 
4 --> 5 
5 --> 4 6 
6 --> 3 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.63>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecInterface(i32* %val_assign_loc, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str151, i32 0, i32 0, [1 x i8]* @p_str152, [1 x i8]* @p_str153, [1 x i8]* @p_str154, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str155, [11 x i8]* @ScalarProp_str)"   --->   Operation 7 'specinterface' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (3.63ns)   --->   "%val_assign_loc_read = call i32 @_ssdm_op_Read.ap_fifo.i32P(i32* %val_assign_loc)" [./hls-src/huffman_encoding.cpp:71]   --->   Operation 8 'read' 'val_assign_loc_read' <Predicate = true> <Delay = 3.63> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 3.63> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 3> <FIFO>
ST_1 : Operation 9 [1/1] (1.76ns)   --->   "br label %._crit_edge.i.i" [./hls-src/huffman_canonize_tree.cpp:10->./hls-src/huffman_encoding.cpp:71]   --->   Operation 9 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 3.25>
ST_2 : Operation 10 [1/1] (0.00ns)   --->   "%i_0_i_i = phi i9 [ %i, %0 ], [ 0, %entry ]"   --->   Operation 10 'phi' 'i_0_i_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 11 [1/1] (1.66ns)   --->   "%icmp_ln13 = icmp eq i9 %i_0_i_i, -256" [./hls-src/huffman_canonize_tree.cpp:13->./hls-src/huffman_encoding.cpp:71]   --->   Operation 11 'icmp' 'icmp_ln13' <Predicate = true> <Delay = 1.66> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256)"   --->   Operation 12 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (1.82ns)   --->   "%i = add i9 %i_0_i_i, 1" [./hls-src/huffman_canonize_tree.cpp:13->./hls-src/huffman_encoding.cpp:71]   --->   Operation 13 'add' 'i' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "br i1 %icmp_ln13, label %.preheader124.i.i.preheader, label %0" [./hls-src/huffman_canonize_tree.cpp:13->./hls-src/huffman_encoding.cpp:71]   --->   Operation 14 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str283) nounwind" [./hls-src/huffman_canonize_tree.cpp:13->./hls-src/huffman_encoding.cpp:71]   --->   Operation 15 'specloopname' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%zext_ln14 = zext i9 %i_0_i_i to i64" [./hls-src/huffman_canonize_tree.cpp:14->./hls-src/huffman_encoding.cpp:71]   --->   Operation 16 'zext' 'zext_ln14' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%symbol_bits_V_addr = getelementptr [256 x i5]* %symbol_bits_V, i64 0, i64 %zext_ln14" [./hls-src/huffman_canonize_tree.cpp:14->./hls-src/huffman_encoding.cpp:71]   --->   Operation 17 'getelementptr' 'symbol_bits_V_addr' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (3.25ns)   --->   "store i5 0, i5* %symbol_bits_V_addr, align 1" [./hls-src/huffman_canonize_tree.cpp:14->./hls-src/huffman_encoding.cpp:71]   --->   Operation 18 'store' <Predicate = (!icmp_ln13)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 5> <Depth = 256> <RAM>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "br label %._crit_edge.i.i" [./hls-src/huffman_canonize_tree.cpp:13->./hls-src/huffman_encoding.cpp:71]   --->   Operation 19 'br' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%length_V_1 = alloca i32"   --->   Operation 20 'alloca' 'length_V_1' <Predicate = (icmp_ln13)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (1.76ns)   --->   "store i32 64, i32* %length_V_1" [./hls-src/huffman_canonize_tree.cpp:23->./hls-src/huffman_encoding.cpp:71]   --->   Operation 21 'store' <Predicate = (icmp_ln13)> <Delay = 1.76>
ST_2 : Operation 22 [1/1] (1.76ns)   --->   "br label %.preheader124.i.i" [./hls-src/huffman_canonize_tree.cpp:23->./hls-src/huffman_encoding.cpp:71]   --->   Operation 22 'br' <Predicate = (icmp_ln13)> <Delay = 1.76>

State 3 <SV = 2> <Delay = 4.24>
ST_3 : Operation 23 [1/1] (0.00ns)   --->   "%p_066_0_i_i = phi i32 [ %count_V_2, %.loopexit.i.i ], [ 0, %.preheader124.i.i.preheader ]"   --->   Operation 23 'phi' 'p_066_0_i_i' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 24 [1/1] (0.00ns)   --->   "%i_op_assign = phi i32 [ %k, %.loopexit.i.i ], [ 0, %.preheader124.i.i.preheader ]"   --->   Operation 24 'phi' 'i_op_assign' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 25 [1/1] (2.47ns)   --->   "%icmp_ln23 = icmp eq i32 %i_op_assign, %val_assign_loc_read" [./hls-src/huffman_canonize_tree.cpp:23->./hls-src/huffman_encoding.cpp:71]   --->   Operation 25 'icmp' 'icmp_ln23' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 0, i64 256, i64 0)"   --->   Operation 26 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 27 [1/1] (2.55ns)   --->   "%k = add nsw i32 %i_op_assign, 1" [./hls-src/huffman_canonize_tree.cpp:23->./hls-src/huffman_encoding.cpp:71]   --->   Operation 27 'add' 'k' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "br i1 %icmp_ln23, label %.exit, label %1" [./hls-src/huffman_canonize_tree.cpp:23->./hls-src/huffman_encoding.cpp:71]   --->   Operation 28 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([16 x i8]* @p_str384) nounwind" [./hls-src/huffman_canonize_tree.cpp:23->./hls-src/huffman_encoding.cpp:71]   --->   Operation 29 'specloopname' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_3 : Operation 30 [1/1] (2.47ns)   --->   "%icmp_ln879 = icmp eq i32 %p_066_0_i_i, 0" [./hls-src/huffman_canonize_tree.cpp:24->./hls-src/huffman_encoding.cpp:71]   --->   Operation 30 'icmp' 'icmp_ln879' <Predicate = (!icmp_ln23)> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 31 [1/1] (1.76ns)   --->   "br i1 %icmp_ln879, label %hls_label_0.preheader, label %.loopexit.i.i" [./hls-src/huffman_canonize_tree.cpp:24->./hls-src/huffman_encoding.cpp:71]   --->   Operation 31 'br' <Predicate = (!icmp_ln23)> <Delay = 1.76>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "br label %hls_label_0" [./hls-src/huffman_canonize_tree.cpp:28->./hls-src/huffman_encoding.cpp:71]   --->   Operation 32 'br' <Predicate = (!icmp_ln23 & icmp_ln879)> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "ret void"   --->   Operation 33 'ret' <Predicate = (icmp_ln23)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 5.80>
ST_4 : Operation 34 [1/1] (0.00ns)   --->   "%t_V = load i32* %length_V_1" [./hls-src/huffman_canonize_tree.cpp:28->./hls-src/huffman_encoding.cpp:71]   --->   Operation 34 'load' 't_V' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 35 [1/1] (2.55ns)   --->   "%length_V = add i32 %t_V, -1" [./hls-src/huffman_canonize_tree.cpp:28->./hls-src/huffman_encoding.cpp:71]   --->   Operation 35 'add' 'length_V' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 36 [1/1] (0.00ns)   --->   "%zext_ln544 = zext i32 %length_V to i64" [./hls-src/huffman_canonize_tree.cpp:30->./hls-src/huffman_encoding.cpp:71]   --->   Operation 36 'zext' 'zext_ln544' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 37 [1/1] (0.00ns)   --->   "%codeword_length_hist = getelementptr [64 x i32]* %codeword_length_histogram_V, i64 0, i64 %zext_ln544" [./hls-src/huffman_canonize_tree.cpp:30->./hls-src/huffman_encoding.cpp:71]   --->   Operation 37 'getelementptr' 'codeword_length_hist' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 38 [2/2] (3.25ns)   --->   "%count_V = load i32* %codeword_length_hist, align 4" [./hls-src/huffman_canonize_tree.cpp:30->./hls-src/huffman_encoding.cpp:71]   --->   Operation 38 'load' 'count_V' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 5> <Depth = 256> <RAM>

State 5 <SV = 4> <Delay = 5.72>
ST_5 : Operation 39 [1/1] (0.00ns)   --->   "%tmp_i_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str485)" [./hls-src/huffman_canonize_tree.cpp:26->./hls-src/huffman_encoding.cpp:71]   --->   Operation 39 'specregionbegin' 'tmp_i_i' <Predicate = (icmp_ln879)> <Delay = 0.00>
ST_5 : Operation 40 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i32 1, i32 2, i32 1, [1 x i8]* @p_str586) nounwind" [./hls-src/huffman_canonize_tree.cpp:27->./hls-src/huffman_encoding.cpp:71]   --->   Operation 40 'speclooptripcount' <Predicate = (icmp_ln879)> <Delay = 0.00>
ST_5 : Operation 41 [1/2] (3.25ns)   --->   "%count_V = load i32* %codeword_length_hist, align 4" [./hls-src/huffman_canonize_tree.cpp:30->./hls-src/huffman_encoding.cpp:71]   --->   Operation 41 'load' 'count_V' <Predicate = (icmp_ln879)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 5> <Depth = 256> <RAM>
ST_5 : Operation 42 [1/1] (0.00ns)   --->   "%empty_33 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str485, i32 %tmp_i_i)" [./hls-src/huffman_canonize_tree.cpp:31->./hls-src/huffman_encoding.cpp:71]   --->   Operation 42 'specregionend' 'empty_33' <Predicate = (icmp_ln879)> <Delay = 0.00>
ST_5 : Operation 43 [1/1] (2.47ns)   --->   "%icmp_ln879_5 = icmp eq i32 %count_V, 0" [./hls-src/huffman_canonize_tree.cpp:32->./hls-src/huffman_encoding.cpp:71]   --->   Operation 43 'icmp' 'icmp_ln879_5' <Predicate = (icmp_ln879)> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 44 [1/1] (0.00ns)   --->   "br i1 %icmp_ln879_5, label %hls_label_0.hls_label_0_crit_edge, label %.loopexit.i.i.loopexit" [./hls-src/huffman_canonize_tree.cpp:32->./hls-src/huffman_encoding.cpp:71]   --->   Operation 44 'br' <Predicate = (icmp_ln879)> <Delay = 0.00>
ST_5 : Operation 45 [1/1] (1.76ns)   --->   "store i32 %length_V, i32* %length_V_1" [./hls-src/huffman_canonize_tree.cpp:32->./hls-src/huffman_encoding.cpp:71]   --->   Operation 45 'store' <Predicate = (icmp_ln879 & icmp_ln879_5)> <Delay = 1.76>
ST_5 : Operation 46 [1/1] (0.00ns)   --->   "br label %hls_label_0" [./hls-src/huffman_canonize_tree.cpp:32->./hls-src/huffman_encoding.cpp:71]   --->   Operation 46 'br' <Predicate = (icmp_ln879 & icmp_ln879_5)> <Delay = 0.00>
ST_5 : Operation 47 [1/1] (1.76ns)   --->   "store i32 %length_V, i32* %length_V_1" [./hls-src/huffman_canonize_tree.cpp:28->./hls-src/huffman_encoding.cpp:71]   --->   Operation 47 'store' <Predicate = (icmp_ln879 & !icmp_ln879_5)> <Delay = 1.76>
ST_5 : Operation 48 [1/1] (1.76ns)   --->   "br label %.loopexit.i.i"   --->   Operation 48 'br' <Predicate = (icmp_ln879 & !icmp_ln879_5)> <Delay = 1.76>
ST_5 : Operation 49 [1/1] (0.00ns)   --->   "%zext_ln35 = zext i32 %i_op_assign to i64" [./hls-src/huffman_canonize_tree.cpp:35->./hls-src/huffman_encoding.cpp:71]   --->   Operation 49 'zext' 'zext_ln35' <Predicate = (!icmp_ln879_5) | (!icmp_ln879)> <Delay = 0.00>
ST_5 : Operation 50 [1/1] (0.00ns)   --->   "%sorted_value_V_addr = getelementptr [256 x i32]* %sorted_value_V, i64 0, i64 %zext_ln35" [./hls-src/huffman_canonize_tree.cpp:35->./hls-src/huffman_encoding.cpp:71]   --->   Operation 50 'getelementptr' 'sorted_value_V_addr' <Predicate = (!icmp_ln879_5) | (!icmp_ln879)> <Delay = 0.00>
ST_5 : Operation 51 [2/2] (3.25ns)   --->   "%val = load i32* %sorted_value_V_addr, align 4" [./hls-src/huffman_canonize_tree.cpp:35->./hls-src/huffman_encoding.cpp:71]   --->   Operation 51 'load' 'val' <Predicate = (!icmp_ln879_5) | (!icmp_ln879)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 5> <Depth = 256> <RAM>

State 6 <SV = 5> <Delay = 6.50>
ST_6 : Operation 52 [1/1] (0.00ns) (grouped into LUT with out node count_V_2)   --->   "%t_V_6 = phi i32 [ %p_066_0_i_i, %1 ], [ %count_V, %.loopexit.i.i.loopexit ]"   --->   Operation 52 'phi' 't_V_6' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 53 [1/1] (0.00ns)   --->   "%length_V_1_load = load i32* %length_V_1" [./hls-src/huffman_canonize_tree.cpp:36->./hls-src/huffman_encoding.cpp:71]   --->   Operation 53 'load' 'length_V_1_load' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 54 [1/2] (3.25ns)   --->   "%val = load i32* %sorted_value_V_addr, align 4" [./hls-src/huffman_canonize_tree.cpp:35->./hls-src/huffman_encoding.cpp:71]   --->   Operation 54 'load' 'val' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 5> <Depth = 256> <RAM>
ST_6 : Operation 55 [1/1] (0.00ns)   --->   "%sext_ln36 = sext i32 %val to i64" [./hls-src/huffman_canonize_tree.cpp:36->./hls-src/huffman_encoding.cpp:71]   --->   Operation 55 'sext' 'sext_ln36' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 56 [1/1] (0.00ns)   --->   "%trunc_ln209 = trunc i32 %length_V_1_load to i5" [./hls-src/huffman_canonize_tree.cpp:36->./hls-src/huffman_encoding.cpp:71]   --->   Operation 56 'trunc' 'trunc_ln209' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 57 [1/1] (0.00ns)   --->   "%symbol_bits_V_addr_1 = getelementptr [256 x i5]* %symbol_bits_V, i64 0, i64 %sext_ln36" [./hls-src/huffman_canonize_tree.cpp:36->./hls-src/huffman_encoding.cpp:71]   --->   Operation 57 'getelementptr' 'symbol_bits_V_addr_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 58 [1/1] (3.25ns)   --->   "store i5 %trunc_ln209, i5* %symbol_bits_V_addr_1, align 1" [./hls-src/huffman_canonize_tree.cpp:36->./hls-src/huffman_encoding.cpp:71]   --->   Operation 58 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 5> <Depth = 256> <RAM>
ST_6 : Operation 59 [1/1] (2.55ns) (out node of the LUT)   --->   "%count_V_2 = add i32 -1, %t_V_6" [./hls-src/huffman_canonize_tree.cpp:37->./hls-src/huffman_encoding.cpp:71]   --->   Operation 59 'add' 'count_V_2' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 60 [1/1] (0.00ns)   --->   "br label %.preheader124.i.i" [./hls-src/huffman_canonize_tree.cpp:23->./hls-src/huffman_encoding.cpp:71]   --->   Operation 60 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 0
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ sorted_value_V]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=1; pingpong=1; private_global=0; MemPort=[13]; IO mode=ap_memory:ce=0
Port [ val_assign_loc]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=3; pingpong=0; private_global=0; IO mode=ap_fifo:ce=0
Port [ codeword_length_histogram_V]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=1; pingpong=1; private_global=0; MemPort=[13]; IO mode=ap_memory:ce=0
Port [ symbol_bits_V]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=1; pingpong=1; private_global=0; MemPort=[03]; IO mode=ap_memory:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
empty                  (specinterface    ) [ 0000000]
val_assign_loc_read    (read             ) [ 0011111]
br_ln10                (br               ) [ 0110000]
i_0_i_i                (phi              ) [ 0010000]
icmp_ln13              (icmp             ) [ 0010000]
speclooptripcount_ln0  (speclooptripcount) [ 0000000]
i                      (add              ) [ 0110000]
br_ln13                (br               ) [ 0000000]
specloopname_ln13      (specloopname     ) [ 0000000]
zext_ln14              (zext             ) [ 0000000]
symbol_bits_V_addr     (getelementptr    ) [ 0000000]
store_ln14             (store            ) [ 0000000]
br_ln13                (br               ) [ 0110000]
length_V_1             (alloca           ) [ 0011111]
store_ln23             (store            ) [ 0000000]
br_ln23                (br               ) [ 0011111]
p_066_0_i_i            (phi              ) [ 0001111]
i_op_assign            (phi              ) [ 0001110]
icmp_ln23              (icmp             ) [ 0001111]
speclooptripcount_ln0  (speclooptripcount) [ 0000000]
k                      (add              ) [ 0011111]
br_ln23                (br               ) [ 0000000]
specloopname_ln23      (specloopname     ) [ 0000000]
icmp_ln879             (icmp             ) [ 0001111]
br_ln24                (br               ) [ 0001111]
br_ln28                (br               ) [ 0000000]
ret_ln0                (ret              ) [ 0000000]
t_V                    (load             ) [ 0000000]
length_V               (add              ) [ 0001011]
zext_ln544             (zext             ) [ 0000000]
codeword_length_hist   (getelementptr    ) [ 0001011]
tmp_i_i                (specregionbegin  ) [ 0000000]
speclooptripcount_ln27 (speclooptripcount) [ 0000000]
count_V                (load             ) [ 0001111]
empty_33               (specregionend    ) [ 0000000]
icmp_ln879_5           (icmp             ) [ 0001111]
br_ln32                (br               ) [ 0000000]
store_ln32             (store            ) [ 0000000]
br_ln32                (br               ) [ 0000000]
store_ln28             (store            ) [ 0000000]
br_ln0                 (br               ) [ 0001111]
zext_ln35              (zext             ) [ 0000000]
sorted_value_V_addr    (getelementptr    ) [ 0000001]
t_V_6                  (phi              ) [ 0000001]
length_V_1_load        (load             ) [ 0000000]
val                    (load             ) [ 0000000]
sext_ln36              (sext             ) [ 0000000]
trunc_ln209            (trunc            ) [ 0000000]
symbol_bits_V_addr_1   (getelementptr    ) [ 0000000]
store_ln36             (store            ) [ 0000000]
count_V_2              (add              ) [ 0011111]
br_ln23                (br               ) [ 0011111]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="sorted_value_V">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="sorted_value_V"/><MemPortTyVec>1 3 </MemPortTyVec>
</StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="val_assign_loc">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="val_assign_loc"/></StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="codeword_length_histogram_V">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="codeword_length_histogram_V"/><MemPortTyVec>1 3 </MemPortTyVec>
</StgValue>
</bind>
</comp>

<comp id="6" class="1000" name="symbol_bits_V">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="symbol_bits_V"/><MemPortTyVec>0 3 </MemPortTyVec>
</StgValue>
</bind>
</comp>

<comp id="8" class="1001" name="const_8">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="10" class="1001" name="const_10">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="ap_fifo_str"/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str151"/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str152"/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str153"/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str154"/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str155"/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="ScalarProp_str"/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_fifo.i32P"/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="1"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="36" class="1001" name="const_36">
<pin_list>
<pin id="37" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecLoopTripCount"/></StgValue>
</bind>
</comp>

<comp id="38" class="1001" name="const_38">
<pin_list>
<pin id="39" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="40" class="1001" name="const_40">
<pin_list>
<pin id="41" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="42" class="1001" name="const_42">
<pin_list>
<pin id="43" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecLoopName"/></StgValue>
</bind>
</comp>

<comp id="44" class="1001" name="const_44">
<pin_list>
<pin id="45" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str283"/></StgValue>
</bind>
</comp>

<comp id="46" class="1001" name="const_46">
<pin_list>
<pin id="47" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="48" class="1001" name="const_48">
<pin_list>
<pin id="49" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="50" class="1001" name="const_50">
<pin_list>
<pin id="51" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="52" class="1001" name="const_52">
<pin_list>
<pin id="53" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="54" class="1001" name="const_54">
<pin_list>
<pin id="55" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str384"/></StgValue>
</bind>
</comp>

<comp id="56" class="1001" name="const_56">
<pin_list>
<pin id="57" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="58" class="1001" name="const_58">
<pin_list>
<pin id="59" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecRegionBegin"/></StgValue>
</bind>
</comp>

<comp id="60" class="1001" name="const_60">
<pin_list>
<pin id="61" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str485"/></StgValue>
</bind>
</comp>

<comp id="62" class="1001" name="const_62">
<pin_list>
<pin id="63" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str586"/></StgValue>
</bind>
</comp>

<comp id="64" class="1001" name="const_64">
<pin_list>
<pin id="65" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecRegionEnd"/></StgValue>
</bind>
</comp>

<comp id="66" class="1004" name="length_V_1_fu_66">
<pin_list>
<pin id="67" dir="0" index="0" bw="1" slack="0"/>
<pin id="68" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="alloca(26) " fcode="alloca"/>
<opset="length_V_1/2 "/>
</bind>
</comp>

<comp id="70" class="1004" name="val_assign_loc_read_read_fu_70">
<pin_list>
<pin id="71" dir="0" index="0" bw="32" slack="0"/>
<pin id="72" dir="0" index="1" bw="32" slack="0"/>
<pin id="73" dir="1" index="2" bw="32" slack="2"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="val_assign_loc_read/1 "/>
</bind>
</comp>

<comp id="76" class="1004" name="symbol_bits_V_addr_gep_fu_76">
<pin_list>
<pin id="77" dir="0" index="0" bw="5" slack="0"/>
<pin id="78" dir="0" index="1" bw="1" slack="0"/>
<pin id="79" dir="0" index="2" bw="9" slack="0"/>
<pin id="80" dir="1" index="3" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="symbol_bits_V_addr/2 "/>
</bind>
</comp>

<comp id="83" class="1004" name="grp_access_fu_83">
<pin_list>
<pin id="84" dir="0" index="0" bw="8" slack="0"/>
<pin id="85" dir="0" index="1" bw="5" slack="0"/>
<pin id="86" dir="0" index="2" bw="0" slack="2147483647"/>
<pin id="87" dir="1" index="3" bw="5" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="store_ln14/2 store_ln36/6 "/>
</bind>
</comp>

<comp id="90" class="1004" name="codeword_length_hist_gep_fu_90">
<pin_list>
<pin id="91" dir="0" index="0" bw="32" slack="0"/>
<pin id="92" dir="0" index="1" bw="1" slack="0"/>
<pin id="93" dir="0" index="2" bw="32" slack="0"/>
<pin id="94" dir="1" index="3" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="codeword_length_hist/4 "/>
</bind>
</comp>

<comp id="97" class="1004" name="grp_access_fu_97">
<pin_list>
<pin id="98" dir="0" index="0" bw="6" slack="0"/>
<pin id="99" dir="0" index="1" bw="32" slack="2147483647"/>
<pin id="100" dir="0" index="2" bw="0" slack="2147483647"/>
<pin id="101" dir="1" index="3" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="count_V/4 "/>
</bind>
</comp>

<comp id="103" class="1004" name="sorted_value_V_addr_gep_fu_103">
<pin_list>
<pin id="104" dir="0" index="0" bw="32" slack="0"/>
<pin id="105" dir="0" index="1" bw="1" slack="0"/>
<pin id="106" dir="0" index="2" bw="32" slack="0"/>
<pin id="107" dir="1" index="3" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="sorted_value_V_addr/5 "/>
</bind>
</comp>

<comp id="110" class="1004" name="grp_access_fu_110">
<pin_list>
<pin id="111" dir="0" index="0" bw="8" slack="0"/>
<pin id="112" dir="0" index="1" bw="32" slack="2147483647"/>
<pin id="113" dir="0" index="2" bw="0" slack="2147483647"/>
<pin id="114" dir="1" index="3" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="val/5 "/>
</bind>
</comp>

<comp id="116" class="1004" name="symbol_bits_V_addr_1_gep_fu_116">
<pin_list>
<pin id="117" dir="0" index="0" bw="5" slack="0"/>
<pin id="118" dir="0" index="1" bw="1" slack="0"/>
<pin id="119" dir="0" index="2" bw="32" slack="0"/>
<pin id="120" dir="1" index="3" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="symbol_bits_V_addr_1/6 "/>
</bind>
</comp>

<comp id="124" class="1005" name="i_0_i_i_reg_124">
<pin_list>
<pin id="125" dir="0" index="0" bw="9" slack="1"/>
<pin id="126" dir="1" index="1" bw="9" slack="1"/>
</pin_list>
<bind>
<opset="i_0_i_i (phireg) "/>
</bind>
</comp>

<comp id="128" class="1004" name="i_0_i_i_phi_fu_128">
<pin_list>
<pin id="129" dir="0" index="0" bw="9" slack="0"/>
<pin id="130" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="131" dir="0" index="2" bw="1" slack="1"/>
<pin id="132" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="133" dir="1" index="4" bw="9" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="i_0_i_i/2 "/>
</bind>
</comp>

<comp id="135" class="1005" name="p_066_0_i_i_reg_135">
<pin_list>
<pin id="136" dir="0" index="0" bw="32" slack="1"/>
<pin id="137" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="p_066_0_i_i (phireg) "/>
</bind>
</comp>

<comp id="139" class="1004" name="p_066_0_i_i_phi_fu_139">
<pin_list>
<pin id="140" dir="0" index="0" bw="32" slack="1"/>
<pin id="141" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="142" dir="0" index="2" bw="1" slack="1"/>
<pin id="143" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="144" dir="1" index="4" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="p_066_0_i_i/3 "/>
</bind>
</comp>

<comp id="147" class="1005" name="i_op_assign_reg_147">
<pin_list>
<pin id="148" dir="0" index="0" bw="32" slack="1"/>
<pin id="149" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="i_op_assign (phireg) "/>
</bind>
</comp>

<comp id="151" class="1004" name="i_op_assign_phi_fu_151">
<pin_list>
<pin id="152" dir="0" index="0" bw="32" slack="0"/>
<pin id="153" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="154" dir="0" index="2" bw="1" slack="1"/>
<pin id="155" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="156" dir="1" index="4" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="i_op_assign/3 "/>
</bind>
</comp>

<comp id="159" class="1005" name="t_V_6_reg_159">
<pin_list>
<pin id="160" dir="0" index="0" bw="32" slack="2147483647"/>
<pin id="161" dir="1" index="1" bw="32" slack="2147483647"/>
</pin_list>
<bind>
<opset="t_V_6 (phireg) "/>
</bind>
</comp>

<comp id="162" class="1004" name="t_V_6_phi_fu_162">
<pin_list>
<pin id="163" dir="0" index="0" bw="32" slack="3"/>
<pin id="164" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="165" dir="0" index="2" bw="32" slack="1"/>
<pin id="166" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="167" dir="1" index="4" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="t_V_6/6 "/>
</bind>
</comp>

<comp id="169" class="1004" name="grp_load_fu_169">
<pin_list>
<pin id="170" dir="0" index="0" bw="32" slack="2"/>
<pin id="171" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="t_V/4 length_V_1_load/6 "/>
</bind>
</comp>

<comp id="172" class="1004" name="grp_store_fu_172">
<pin_list>
<pin id="173" dir="0" index="0" bw="32" slack="1"/>
<pin id="174" dir="0" index="1" bw="32" slack="3"/>
<pin id="175" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="store_ln32/5 store_ln28/5 "/>
</bind>
</comp>

<comp id="176" class="1004" name="icmp_ln13_fu_176">
<pin_list>
<pin id="177" dir="0" index="0" bw="9" slack="0"/>
<pin id="178" dir="0" index="1" bw="9" slack="0"/>
<pin id="179" dir="1" index="2" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln13/2 "/>
</bind>
</comp>

<comp id="182" class="1004" name="i_fu_182">
<pin_list>
<pin id="183" dir="0" index="0" bw="9" slack="0"/>
<pin id="184" dir="0" index="1" bw="1" slack="0"/>
<pin id="185" dir="1" index="2" bw="9" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="i/2 "/>
</bind>
</comp>

<comp id="188" class="1004" name="zext_ln14_fu_188">
<pin_list>
<pin id="189" dir="0" index="0" bw="9" slack="0"/>
<pin id="190" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="zext_ln14/2 "/>
</bind>
</comp>

<comp id="193" class="1004" name="store_ln23_store_fu_193">
<pin_list>
<pin id="194" dir="0" index="0" bw="8" slack="0"/>
<pin id="195" dir="0" index="1" bw="32" slack="0"/>
<pin id="196" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="store_ln23/2 "/>
</bind>
</comp>

<comp id="198" class="1004" name="icmp_ln23_fu_198">
<pin_list>
<pin id="199" dir="0" index="0" bw="32" slack="0"/>
<pin id="200" dir="0" index="1" bw="32" slack="2"/>
<pin id="201" dir="1" index="2" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln23/3 "/>
</bind>
</comp>

<comp id="203" class="1004" name="k_fu_203">
<pin_list>
<pin id="204" dir="0" index="0" bw="32" slack="0"/>
<pin id="205" dir="0" index="1" bw="1" slack="0"/>
<pin id="206" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="k/3 "/>
</bind>
</comp>

<comp id="209" class="1004" name="icmp_ln879_fu_209">
<pin_list>
<pin id="210" dir="0" index="0" bw="32" slack="0"/>
<pin id="211" dir="0" index="1" bw="1" slack="0"/>
<pin id="212" dir="1" index="2" bw="1" slack="2"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln879/3 "/>
</bind>
</comp>

<comp id="215" class="1004" name="length_V_fu_215">
<pin_list>
<pin id="216" dir="0" index="0" bw="32" slack="0"/>
<pin id="217" dir="0" index="1" bw="1" slack="0"/>
<pin id="218" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="length_V/4 "/>
</bind>
</comp>

<comp id="221" class="1004" name="zext_ln544_fu_221">
<pin_list>
<pin id="222" dir="0" index="0" bw="32" slack="0"/>
<pin id="223" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="zext_ln544/4 "/>
</bind>
</comp>

<comp id="226" class="1004" name="icmp_ln879_5_fu_226">
<pin_list>
<pin id="227" dir="0" index="0" bw="32" slack="0"/>
<pin id="228" dir="0" index="1" bw="1" slack="0"/>
<pin id="229" dir="1" index="2" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln879_5/5 "/>
</bind>
</comp>

<comp id="232" class="1004" name="zext_ln35_fu_232">
<pin_list>
<pin id="233" dir="0" index="0" bw="32" slack="2"/>
<pin id="234" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="zext_ln35/5 "/>
</bind>
</comp>

<comp id="237" class="1004" name="sext_ln36_fu_237">
<pin_list>
<pin id="238" dir="0" index="0" bw="32" slack="0"/>
<pin id="239" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="sext(35) " fcode="sext"/>
<opset="sext_ln36/6 "/>
</bind>
</comp>

<comp id="242" class="1004" name="trunc_ln209_fu_242">
<pin_list>
<pin id="243" dir="0" index="0" bw="32" slack="0"/>
<pin id="244" dir="1" index="1" bw="5" slack="0"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="trunc_ln209/6 "/>
</bind>
</comp>

<comp id="247" class="1004" name="count_V_2_fu_247">
<pin_list>
<pin id="248" dir="0" index="0" bw="1" slack="0"/>
<pin id="249" dir="0" index="1" bw="32" slack="0"/>
<pin id="250" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="count_V_2/6 "/>
</bind>
</comp>

<comp id="253" class="1005" name="val_assign_loc_read_reg_253">
<pin_list>
<pin id="254" dir="0" index="0" bw="32" slack="2"/>
<pin id="255" dir="1" index="1" bw="32" slack="2"/>
</pin_list>
<bind>
<opset="val_assign_loc_read "/>
</bind>
</comp>

<comp id="261" class="1005" name="i_reg_261">
<pin_list>
<pin id="262" dir="0" index="0" bw="9" slack="0"/>
<pin id="263" dir="1" index="1" bw="9" slack="0"/>
</pin_list>
<bind>
<opset="i "/>
</bind>
</comp>

<comp id="266" class="1005" name="length_V_1_reg_266">
<pin_list>
<pin id="267" dir="0" index="0" bw="32" slack="0"/>
<pin id="268" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opset="length_V_1 "/>
</bind>
</comp>

<comp id="276" class="1005" name="k_reg_276">
<pin_list>
<pin id="277" dir="0" index="0" bw="32" slack="0"/>
<pin id="278" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opset="k "/>
</bind>
</comp>

<comp id="281" class="1005" name="icmp_ln879_reg_281">
<pin_list>
<pin id="282" dir="0" index="0" bw="1" slack="2"/>
<pin id="283" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="icmp_ln879 "/>
</bind>
</comp>

<comp id="285" class="1005" name="length_V_reg_285">
<pin_list>
<pin id="286" dir="0" index="0" bw="32" slack="1"/>
<pin id="287" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="length_V "/>
</bind>
</comp>

<comp id="290" class="1005" name="codeword_length_hist_reg_290">
<pin_list>
<pin id="291" dir="0" index="0" bw="6" slack="1"/>
<pin id="292" dir="1" index="1" bw="6" slack="1"/>
</pin_list>
<bind>
<opset="codeword_length_hist "/>
</bind>
</comp>

<comp id="295" class="1005" name="count_V_reg_295">
<pin_list>
<pin id="296" dir="0" index="0" bw="32" slack="1"/>
<pin id="297" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="count_V "/>
</bind>
</comp>

<comp id="303" class="1005" name="sorted_value_V_addr_reg_303">
<pin_list>
<pin id="304" dir="0" index="0" bw="8" slack="1"/>
<pin id="305" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="sorted_value_V_addr "/>
</bind>
</comp>

<comp id="308" class="1005" name="count_V_2_reg_308">
<pin_list>
<pin id="309" dir="0" index="0" bw="32" slack="1"/>
<pin id="310" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="count_V_2 "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="69"><net_src comp="50" pin="0"/><net_sink comp="66" pin=0"/></net>

<net id="74"><net_src comp="30" pin="0"/><net_sink comp="70" pin=0"/></net>

<net id="75"><net_src comp="2" pin="0"/><net_sink comp="70" pin=1"/></net>

<net id="81"><net_src comp="6" pin="0"/><net_sink comp="76" pin=0"/></net>

<net id="82"><net_src comp="46" pin="0"/><net_sink comp="76" pin=1"/></net>

<net id="88"><net_src comp="48" pin="0"/><net_sink comp="83" pin=1"/></net>

<net id="89"><net_src comp="76" pin="3"/><net_sink comp="83" pin=0"/></net>

<net id="95"><net_src comp="4" pin="0"/><net_sink comp="90" pin=0"/></net>

<net id="96"><net_src comp="46" pin="0"/><net_sink comp="90" pin=1"/></net>

<net id="102"><net_src comp="90" pin="3"/><net_sink comp="97" pin=0"/></net>

<net id="108"><net_src comp="0" pin="0"/><net_sink comp="103" pin=0"/></net>

<net id="109"><net_src comp="46" pin="0"/><net_sink comp="103" pin=1"/></net>

<net id="115"><net_src comp="103" pin="3"/><net_sink comp="110" pin=0"/></net>

<net id="121"><net_src comp="6" pin="0"/><net_sink comp="116" pin=0"/></net>

<net id="122"><net_src comp="46" pin="0"/><net_sink comp="116" pin=1"/></net>

<net id="123"><net_src comp="116" pin="3"/><net_sink comp="83" pin=0"/></net>

<net id="127"><net_src comp="32" pin="0"/><net_sink comp="124" pin=0"/></net>

<net id="134"><net_src comp="124" pin="1"/><net_sink comp="128" pin=2"/></net>

<net id="138"><net_src comp="12" pin="0"/><net_sink comp="135" pin=0"/></net>

<net id="145"><net_src comp="135" pin="1"/><net_sink comp="139" pin=2"/></net>

<net id="146"><net_src comp="139" pin="4"/><net_sink comp="135" pin=0"/></net>

<net id="150"><net_src comp="12" pin="0"/><net_sink comp="147" pin=0"/></net>

<net id="157"><net_src comp="147" pin="1"/><net_sink comp="151" pin=2"/></net>

<net id="158"><net_src comp="151" pin="4"/><net_sink comp="147" pin=0"/></net>

<net id="168"><net_src comp="135" pin="1"/><net_sink comp="162" pin=0"/></net>

<net id="180"><net_src comp="128" pin="4"/><net_sink comp="176" pin=0"/></net>

<net id="181"><net_src comp="34" pin="0"/><net_sink comp="176" pin=1"/></net>

<net id="186"><net_src comp="128" pin="4"/><net_sink comp="182" pin=0"/></net>

<net id="187"><net_src comp="40" pin="0"/><net_sink comp="182" pin=1"/></net>

<net id="191"><net_src comp="128" pin="4"/><net_sink comp="188" pin=0"/></net>

<net id="192"><net_src comp="188" pin="1"/><net_sink comp="76" pin=2"/></net>

<net id="197"><net_src comp="52" pin="0"/><net_sink comp="193" pin=0"/></net>

<net id="202"><net_src comp="151" pin="4"/><net_sink comp="198" pin=0"/></net>

<net id="207"><net_src comp="151" pin="4"/><net_sink comp="203" pin=0"/></net>

<net id="208"><net_src comp="50" pin="0"/><net_sink comp="203" pin=1"/></net>

<net id="213"><net_src comp="139" pin="4"/><net_sink comp="209" pin=0"/></net>

<net id="214"><net_src comp="12" pin="0"/><net_sink comp="209" pin=1"/></net>

<net id="219"><net_src comp="169" pin="1"/><net_sink comp="215" pin=0"/></net>

<net id="220"><net_src comp="56" pin="0"/><net_sink comp="215" pin=1"/></net>

<net id="224"><net_src comp="215" pin="2"/><net_sink comp="221" pin=0"/></net>

<net id="225"><net_src comp="221" pin="1"/><net_sink comp="90" pin=2"/></net>

<net id="230"><net_src comp="97" pin="3"/><net_sink comp="226" pin=0"/></net>

<net id="231"><net_src comp="12" pin="0"/><net_sink comp="226" pin=1"/></net>

<net id="235"><net_src comp="147" pin="1"/><net_sink comp="232" pin=0"/></net>

<net id="236"><net_src comp="232" pin="1"/><net_sink comp="103" pin=2"/></net>

<net id="240"><net_src comp="110" pin="3"/><net_sink comp="237" pin=0"/></net>

<net id="241"><net_src comp="237" pin="1"/><net_sink comp="116" pin=2"/></net>

<net id="245"><net_src comp="169" pin="1"/><net_sink comp="242" pin=0"/></net>

<net id="246"><net_src comp="242" pin="1"/><net_sink comp="83" pin=1"/></net>

<net id="251"><net_src comp="56" pin="0"/><net_sink comp="247" pin=0"/></net>

<net id="252"><net_src comp="162" pin="4"/><net_sink comp="247" pin=1"/></net>

<net id="256"><net_src comp="70" pin="2"/><net_sink comp="253" pin=0"/></net>

<net id="257"><net_src comp="253" pin="1"/><net_sink comp="198" pin=1"/></net>

<net id="264"><net_src comp="182" pin="2"/><net_sink comp="261" pin=0"/></net>

<net id="265"><net_src comp="261" pin="1"/><net_sink comp="128" pin=0"/></net>

<net id="269"><net_src comp="66" pin="1"/><net_sink comp="266" pin=0"/></net>

<net id="270"><net_src comp="266" pin="1"/><net_sink comp="193" pin=1"/></net>

<net id="271"><net_src comp="266" pin="1"/><net_sink comp="169" pin=0"/></net>

<net id="272"><net_src comp="266" pin="1"/><net_sink comp="172" pin=1"/></net>

<net id="279"><net_src comp="203" pin="2"/><net_sink comp="276" pin=0"/></net>

<net id="280"><net_src comp="276" pin="1"/><net_sink comp="151" pin=0"/></net>

<net id="284"><net_src comp="209" pin="2"/><net_sink comp="281" pin=0"/></net>

<net id="288"><net_src comp="215" pin="2"/><net_sink comp="285" pin=0"/></net>

<net id="289"><net_src comp="285" pin="1"/><net_sink comp="172" pin=0"/></net>

<net id="293"><net_src comp="90" pin="3"/><net_sink comp="290" pin=0"/></net>

<net id="294"><net_src comp="290" pin="1"/><net_sink comp="97" pin=0"/></net>

<net id="298"><net_src comp="97" pin="3"/><net_sink comp="295" pin=0"/></net>

<net id="299"><net_src comp="295" pin="1"/><net_sink comp="162" pin=2"/></net>

<net id="306"><net_src comp="103" pin="3"/><net_sink comp="303" pin=0"/></net>

<net id="307"><net_src comp="303" pin="1"/><net_sink comp="110" pin=0"/></net>

<net id="311"><net_src comp="247" pin="2"/><net_sink comp="308" pin=0"/></net>

<net id="312"><net_src comp="308" pin="1"/><net_sink comp="139" pin=0"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: symbol_bits_V | {2 6 }
 - Input state : 
	Port: canonize_tree : sorted_value_V | {5 6 }
	Port: canonize_tree : val_assign_loc | {1 }
	Port: canonize_tree : codeword_length_histogram_V | {4 5 }
  - Chain level:
	State 1
	State 2
		icmp_ln13 : 1
		i : 1
		br_ln13 : 2
		zext_ln14 : 1
		symbol_bits_V_addr : 2
		store_ln14 : 3
		store_ln23 : 1
	State 3
		icmp_ln23 : 1
		k : 1
		br_ln23 : 2
		icmp_ln879 : 1
		br_ln24 : 2
	State 4
		length_V : 1
		zext_ln544 : 2
		codeword_length_hist : 3
		count_V : 4
	State 5
		empty_33 : 1
		icmp_ln879_5 : 1
		br_ln32 : 2
		sorted_value_V_addr : 1
		val : 2
	State 6
		sext_ln36 : 1
		trunc_ln209 : 1
		symbol_bits_V_addr_1 : 2
		store_ln36 : 3
		count_V_2 : 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|--------------------------------|---------|---------|
| Operation|         Functional Unit        |    FF   |   LUT   |
|----------|--------------------------------|---------|---------|
|          |            i_fu_182            |    0    |    15   |
|    add   |            k_fu_203            |    0    |    39   |
|          |         length_V_fu_215        |    0    |    39   |
|          |        count_V_2_fu_247        |    0    |    39   |
|----------|--------------------------------|---------|---------|
|          |        icmp_ln13_fu_176        |    0    |    13   |
|   icmp   |        icmp_ln23_fu_198        |    0    |    18   |
|          |        icmp_ln879_fu_209       |    0    |    18   |
|          |       icmp_ln879_5_fu_226      |    0    |    18   |
|----------|--------------------------------|---------|---------|
|   read   | val_assign_loc_read_read_fu_70 |    0    |    0    |
|----------|--------------------------------|---------|---------|
|          |        zext_ln14_fu_188        |    0    |    0    |
|   zext   |        zext_ln544_fu_221       |    0    |    0    |
|          |        zext_ln35_fu_232        |    0    |    0    |
|----------|--------------------------------|---------|---------|
|   sext   |        sext_ln36_fu_237        |    0    |    0    |
|----------|--------------------------------|---------|---------|
|   trunc  |       trunc_ln209_fu_242       |    0    |    0    |
|----------|--------------------------------|---------|---------|
|   Total  |                                |    0    |   199   |
|----------|--------------------------------|---------|---------|

Memories:
N/A

* Register list:
+----------------------------+--------+
|                            |   FF   |
+----------------------------+--------+
|codeword_length_hist_reg_290|    6   |
|      count_V_2_reg_308     |   32   |
|       count_V_reg_295      |   32   |
|       i_0_i_i_reg_124      |    9   |
|     i_op_assign_reg_147    |   32   |
|          i_reg_261         |    9   |
|     icmp_ln879_reg_281     |    1   |
|          k_reg_276         |   32   |
|     length_V_1_reg_266     |   32   |
|      length_V_reg_285      |   32   |
|     p_066_0_i_i_reg_135    |   32   |
| sorted_value_V_addr_reg_303|    8   |
|        t_V_6_reg_159       |   32   |
| val_assign_loc_read_reg_253|   32   |
+----------------------------+--------+
|            Total           |   321  |
+----------------------------+--------+

* Multiplexer (MUX) list: 
|---------------------|------|------|------|--------||---------||---------|
|         Comp        |  Pin | Size |  BW  | S x BW ||  Delay  ||   LUT   |
|---------------------|------|------|------|--------||---------||---------|
|   grp_access_fu_83  |  p0  |   2  |   8  |   16   ||    9    |
|   grp_access_fu_83  |  p1  |   2  |   5  |   10   ||    9    |
|   grp_access_fu_97  |  p0  |   2  |   6  |   12   ||    9    |
|  grp_access_fu_110  |  p0  |   2  |   8  |   16   ||    9    |
| p_066_0_i_i_reg_135 |  p0  |   2  |  32  |   64   ||    9    |
| i_op_assign_reg_147 |  p0  |   2  |  32  |   64   ||    9    |
|---------------------|------|------|------|--------||---------||---------|
|        Total        |      |      |      |   182  ||  10.614 ||    54   |
|---------------------|------|------|------|--------||---------||---------|



* Summary:
+-----------+--------+--------+--------+
|           |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+
|  Function |    -   |    0   |   199  |
|   Memory  |    -   |    -   |    -   |
|Multiplexer|   10   |    -   |   54   |
|  Register |    -   |   321  |    -   |
+-----------+--------+--------+--------+
|   Total   |   10   |   321  |   253  |
+-----------+--------+--------+--------+
